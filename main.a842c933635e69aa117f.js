/*! For license information please see main.a842c933635e69aa117f.js.LICENSE.txt */
(()=>{"use strict";((t,e,n)=>{const i=0,r=1,a=2,s=1,o=2,l=3,c=0,h=1,u=2,q=0,d=1,p=2,m=3,f=4,g=5,x=100,v=101,y=102,_=103,b=104,w=200,M=201,S=202,T=203,E=204,A=205,L=206,R=207,C=208,P=209,z=210,I=0,D=1,N=2,O=3,B=4,F=5,U=6,H=7,k=0,G=1,V=2,W=0,j=1,X=2,Y=3,Z=4,J=5,Q=301,K=302,$=303,tt=304,et=306,nt=307,it=1e3,rt=1001,at=1002,st=1003,ot=1004,lt=1005,ct=1006,ht=1007,ut=1008,qt=1009,dt=1010,pt=1011,mt=1012,ft=1013,gt=1014,xt=1015,vt=1016,yt=1017,_t=1018,bt=1019,wt=1020,Mt=1021,St=1022,Tt=1023,Et=1024,At=1025,Lt=Tt,Rt=1026,Ct=1027,Pt=1028,zt=1029,It=1030,Dt=1031,Nt=1032,Ot=1033,Bt=33776,Ft=33777,Ut=33778,Ht=33779,kt=35840,Gt=35841,Vt=35842,Wt=35843,jt=36196,Xt=37492,Yt=37496,Zt=37808,Jt=37809,Qt=37810,Kt=37811,$t=37812,te=37813,ee=37814,ne=37815,ie=37816,re=37817,ae=37818,se=37819,oe=37820,le=37821,ce=36492,he=37840,ue=37841,qe=37842,de=37843,pe=37844,me=37845,fe=37846,ge=37847,xe=37848,ve=37849,ye=37850,_e=37851,be=37852,we=37853,Me=2300,Se=2301,Te=2302,Ee=2400,Ae=2401,Le=2402,Re=3e3,Ce=3001,Pe=3007,ze=3002,Ie=3003,De=3004,Ne=3005,Oe=3006,Be=3201,Fe=0,Ue=1,He=7680,ke=35044,Ge=35048,Ve="300 es";class We{addEventListener(t,e){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[t]&&(n[t]=[]),-1===n[t].indexOf(e)&&n[t].push(e)}hasEventListener(t,e){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[t]&&-1!==n[t].indexOf(e)}removeEventListener(t,e){if(void 0===this._listeners)return;const n=this._listeners[t];if(void 0!==n){const t=n.indexOf(e);-1!==t&&n.splice(t,1)}}dispatchEvent(t){if(void 0===this._listeners)return;const e=this._listeners[t.type];if(void 0!==e){t.target=this;const n=e.slice(0);for(let e=0,i=n.length;e<i;e++)n[e].call(this,t);t.target=null}}}const je=Math.PI/180,Xe=180/Math.PI,Ye=[];for(let t=0;t<256;t++)Ye[t]=(t<16?"0":"")+t.toString(16);const Ze="undefined"!=typeof crypto&&"randomUUID"in crypto;function Je(){if(Ze)return crypto.randomUUID().toUpperCase();const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,n=4294967295*Math.random()|0,i=4294967295*Math.random()|0;return(Ye[255&t]+Ye[t>>8&255]+Ye[t>>16&255]+Ye[t>>24&255]+"-"+Ye[255&e]+Ye[e>>8&255]+"-"+Ye[e>>16&15|64]+Ye[e>>24&255]+"-"+Ye[63&n|128]+Ye[n>>8&255]+"-"+Ye[n>>16&255]+Ye[n>>24&255]+Ye[255&i]+Ye[i>>8&255]+Ye[i>>16&255]+Ye[i>>24&255]).toUpperCase()}function Qe(t,e,n){return Math.max(e,Math.min(n,t))}function Ke(t,e,n){return(1-n)*t+n*e}function $e(t){return 0==(t&t-1)&&0!==t}function tn(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))}class en{constructor(t=0,e=0){this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),r=this.x-t.x,a=this.y-t.y;return this.x=r*n-a*i+t.x,this.y=r*i+a*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}en.prototype.isVector2=!0;class nn{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,i,r,a,s,o,l){const c=this.elements;return c[0]=t,c[1]=i,c[2]=s,c[3]=e,c[4]=r,c[5]=o,c[6]=n,c[7]=a,c[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,a=n[0],s=n[3],o=n[6],l=n[1],c=n[4],h=n[7],u=n[2],q=n[5],d=n[8],p=i[0],m=i[3],f=i[6],g=i[1],x=i[4],v=i[7],y=i[2],_=i[5],b=i[8];return r[0]=a*p+s*g+o*y,r[3]=a*m+s*x+o*_,r[6]=a*f+s*v+o*b,r[1]=l*p+c*g+h*y,r[4]=l*m+c*x+h*_,r[7]=l*f+c*v+h*b,r[2]=u*p+q*g+d*y,r[5]=u*m+q*x+d*_,r[8]=u*f+q*v+d*b,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],a=t[4],s=t[5],o=t[6],l=t[7],c=t[8];return e*a*c-e*s*l-n*r*c+n*s*o+i*r*l-i*a*o}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],a=t[4],s=t[5],o=t[6],l=t[7],c=t[8],h=c*a-s*l,u=s*o-c*r,q=l*r-a*o,d=e*h+n*u+i*q;if(0===d)return this.set(0,0,0,0,0,0,0,0,0);const p=1/d;return t[0]=h*p,t[1]=(i*l-c*n)*p,t[2]=(s*n-i*a)*p,t[3]=u*p,t[4]=(c*e-i*o)*p,t[5]=(i*r-s*e)*p,t[6]=q*p,t[7]=(n*o-l*e)*p,t[8]=(a*e-n*r)*p,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,r,a,s){const o=Math.cos(r),l=Math.sin(r);return this.set(n*o,n*l,-n*(o*a+l*s)+a+t,-i*l,i*o,-i*(-l*a+o*s)+s+e,0,0,1),this}scale(t,e){const n=this.elements;return n[0]*=t,n[3]*=t,n[6]*=t,n[1]*=e,n[4]*=e,n[7]*=e,this}rotate(t){const e=Math.cos(t),n=Math.sin(t),i=this.elements,r=i[0],a=i[3],s=i[6],o=i[1],l=i[4],c=i[7];return i[0]=e*r+n*o,i[3]=e*a+n*l,i[6]=e*s+n*c,i[1]=-n*r+e*o,i[4]=-n*a+e*l,i[7]=-n*s+e*c,this}translate(t,e){const n=this.elements;return n[0]+=t*n[2],n[3]+=t*n[5],n[6]+=t*n[8],n[1]+=e*n[2],n[4]+=e*n[5],n[7]+=e*n[8],this}equals(t){const e=this.elements,n=t.elements;for(let t=0;t<9;t++)if(e[t]!==n[t])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}function rn(t){if(0===t.length)return-1/0;let e=t[0];for(let n=1,i=t.length;n<i;++n)t[n]>e&&(e=t[n]);return e}function an(t){return document.createElementNS("http://www.w3.org/1999/xhtml",t)}let sn;nn.prototype.isMatrix3=!0,Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array;class on{static getDataURL(t){if(/^data:/i.test(t.src))return t.src;if("undefined"==typeof HTMLCanvasElement)return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{void 0===sn&&(sn=an("canvas")),sn.width=t.width,sn.height=t.height;const n=sn.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=sn}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}}let ln=0;class cn extends We{constructor(t=cn.DEFAULT_IMAGE,e=cn.DEFAULT_MAPPING,n=rt,i=rt,r=ct,a=ut,s=Tt,o=qt,l=1,c=Re){super(),Object.defineProperty(this,"id",{value:ln++}),this.uuid=Je(),this.name="",this.image=t,this.mipmaps=[],this.mapping=e,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=a,this.anisotropy=l,this.format=s,this.internalFormat=null,this.type=o,this.offset=new en(0,0),this.repeat=new en(1,1),this.center=new en(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new nn,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=c,this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(t){return this.name=t.name,this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const i=this.image;if(void 0===i.uuid&&(i.uuid=Je()),!e&&void 0===t.images[i.uuid]){let e;if(Array.isArray(i)){e=[];for(let t=0,n=i.length;t<n;t++)i[t].isDataTexture?e.push(hn(i[t].image)):e.push(hn(i[t]))}else e=hn(i);t.images[i.uuid]={uuid:i.uuid,url:e}}n.image=i.uuid}return e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(300!==this.mapping)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case it:t.x=t.x-Math.floor(t.x);break;case rt:t.x=t.x<0?0:1;break;case at:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case it:t.y=t.y-Math.floor(t.y);break;case rt:t.y=t.y<0?0:1;break;case at:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){!0===t&&this.version++}}function hn(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap?on.getDataURL(t):t.data?{data:Array.prototype.slice.call(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}cn.DEFAULT_IMAGE=void 0,cn.DEFAULT_MAPPING=300,cn.prototype.isTexture=!0;class un{constructor(t=0,e=0,n=0,i=1){this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=this.w,a=t.elements;return this.x=a[0]*e+a[4]*n+a[8]*i+a[12]*r,this.y=a[1]*e+a[5]*n+a[9]*i+a[13]*r,this.z=a[2]*e+a[6]*n+a[10]*i+a[14]*r,this.w=a[3]*e+a[7]*n+a[11]*i+a[15]*r,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,i,r;const a=.01,s=.1,o=t.elements,l=o[0],c=o[4],h=o[8],u=o[1],q=o[5],d=o[9],p=o[2],m=o[6],f=o[10];if(Math.abs(c-u)<a&&Math.abs(h-p)<a&&Math.abs(d-m)<a){if(Math.abs(c+u)<s&&Math.abs(h+p)<s&&Math.abs(d+m)<s&&Math.abs(l+q+f-3)<s)return this.set(1,0,0,0),this;e=Math.PI;const t=(l+1)/2,o=(q+1)/2,g=(f+1)/2,x=(c+u)/4,v=(h+p)/4,y=(d+m)/4;return t>o&&t>g?t<a?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(t),i=x/n,r=v/n):o>g?o<a?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(o),n=x/i,r=y/i):g<a?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(g),n=v/r,i=y/r),this.set(n,i,r,e),this}let g=Math.sqrt((m-d)*(m-d)+(h-p)*(h-p)+(u-c)*(u-c));return Math.abs(g)<.001&&(g=1),this.x=(m-d)/g,this.y=(h-p)/g,this.z=(u-c)/g,this.w=Math.acos((l+q+f-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}un.prototype.isVector4=!0;class qn extends We{constructor(t,e,n={}){super(),this.width=t,this.height=e,this.depth=1,this.scissor=new un(0,0,t,e),this.scissorTest=!1,this.viewport=new un(0,0,t,e),this.texture=new cn(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.image={width:t,height:e,depth:1},this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.internalFormat=void 0!==n.internalFormat?n.internalFormat:null,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:ct,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null}setTexture(t){t.image={width:this.width,height:this.height,depth:this.depth},this.texture=t}setSize(t,e,n=1){this.width===t&&this.height===e&&this.depth===n||(this.width=t,this.height=e,this.depth=n,this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return(new this.constructor).copy(this)}copy(t){return this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.texture.image={...this.texture.image},this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}qn.prototype.isWebGLRenderTarget=!0,class extends qn{constructor(t,e,n){super(t,e);const i=this.texture;this.texture=[];for(let t=0;t<n;t++)this.texture[t]=i.clone()}setSize(t,e,n=1){if(this.width!==t||this.height!==e||this.depth!==n){this.width=t,this.height=e,this.depth=n;for(let i=0,r=this.texture.length;i<r;i++)this.texture[i].image.width=t,this.texture[i].image.height=e,this.texture[i].image.depth=n;this.dispose()}return this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e),this}copy(t){this.dispose(),this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this.texture.length=0;for(let e=0,n=t.texture.length;e<n;e++)this.texture[e]=t.texture[e].clone();return this}}.prototype.isWebGLMultipleRenderTargets=!0;class dn extends qn{constructor(t,e,n){super(t,e,n),this.samples=4}copy(t){return super.copy.call(this,t),this.samples=t.samples,this}}dn.prototype.isWebGLMultisampleRenderTarget=!0;class pn{constructor(t=0,e=0,n=0,i=1){this._x=t,this._y=e,this._z=n,this._w=i}static slerp(t,e,n,i){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(t,e,i)}static slerpFlat(t,e,n,i,r,a,s){let o=n[i+0],l=n[i+1],c=n[i+2],h=n[i+3];const u=r[a+0],q=r[a+1],d=r[a+2],p=r[a+3];if(0===s)return t[e+0]=o,t[e+1]=l,t[e+2]=c,void(t[e+3]=h);if(1===s)return t[e+0]=u,t[e+1]=q,t[e+2]=d,void(t[e+3]=p);if(h!==p||o!==u||l!==q||c!==d){let t=1-s;const e=o*u+l*q+c*d+h*p,n=e>=0?1:-1,i=1-e*e;if(i>Number.EPSILON){const r=Math.sqrt(i),a=Math.atan2(r,e*n);t=Math.sin(t*a)/r,s=Math.sin(s*a)/r}const r=s*n;if(o=o*t+u*r,l=l*t+q*r,c=c*t+d*r,h=h*t+p*r,t===1-s){const t=1/Math.sqrt(o*o+l*l+c*c+h*h);o*=t,l*=t,c*=t,h*=t}}t[e]=o,t[e+1]=l,t[e+2]=c,t[e+3]=h}static multiplyQuaternionsFlat(t,e,n,i,r,a){const s=n[i],o=n[i+1],l=n[i+2],c=n[i+3],h=r[a],u=r[a+1],q=r[a+2],d=r[a+3];return t[e]=s*d+c*h+o*q-l*u,t[e+1]=o*d+c*u+l*h-s*q,t[e+2]=l*d+c*q+s*u-o*h,t[e+3]=c*d-s*h-o*u-l*q,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){if(!t||!t.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=t._x,i=t._y,r=t._z,a=t._order,s=Math.cos,o=Math.sin,l=s(n/2),c=s(i/2),h=s(r/2),u=o(n/2),q=o(i/2),d=o(r/2);switch(a){case"XYZ":this._x=u*c*h+l*q*d,this._y=l*q*h-u*c*d,this._z=l*c*d+u*q*h,this._w=l*c*h-u*q*d;break;case"YXZ":this._x=u*c*h+l*q*d,this._y=l*q*h-u*c*d,this._z=l*c*d-u*q*h,this._w=l*c*h+u*q*d;break;case"ZXY":this._x=u*c*h-l*q*d,this._y=l*q*h+u*c*d,this._z=l*c*d+u*q*h,this._w=l*c*h-u*q*d;break;case"ZYX":this._x=u*c*h-l*q*d,this._y=l*q*h+u*c*d,this._z=l*c*d-u*q*h,this._w=l*c*h+u*q*d;break;case"YZX":this._x=u*c*h+l*q*d,this._y=l*q*h+u*c*d,this._z=l*c*d-u*q*h,this._w=l*c*h-u*q*d;break;case"XZY":this._x=u*c*h-l*q*d,this._y=l*q*h-u*c*d,this._z=l*c*d+u*q*h,this._w=l*c*h+u*q*d;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return!1!==e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],i=e[4],r=e[8],a=e[1],s=e[5],o=e[9],l=e[2],c=e[6],h=e[10],u=n+s+h;if(u>0){const t=.5/Math.sqrt(u+1);this._w=.25/t,this._x=(c-o)*t,this._y=(r-l)*t,this._z=(a-i)*t}else if(n>s&&n>h){const t=2*Math.sqrt(1+n-s-h);this._w=(c-o)/t,this._x=.25*t,this._y=(i+a)/t,this._z=(r+l)/t}else if(s>h){const t=2*Math.sqrt(1+s-n-h);this._w=(r-l)/t,this._x=(i+a)/t,this._y=.25*t,this._z=(o+c)/t}else{const t=2*Math.sqrt(1+h-n-s);this._w=(a-i)/t,this._x=(r+l)/t,this._y=(o+c)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(Qe(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(0===n)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t,e){return void 0!==e?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,i=t._y,r=t._z,a=t._w,s=e._x,o=e._y,l=e._z,c=e._w;return this._x=n*c+a*s+i*l-r*o,this._y=i*c+a*o+r*s-n*l,this._z=r*c+a*l+n*o-i*s,this._w=a*c-n*s-i*o-r*l,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);const n=this._x,i=this._y,r=this._z,a=this._w;let s=a*t._w+n*t._x+i*t._y+r*t._z;if(s<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,s=-s):this.copy(t),s>=1)return this._w=a,this._x=n,this._y=i,this._z=r,this;const o=1-s*s;if(o<=Number.EPSILON){const t=1-e;return this._w=t*a+e*this._w,this._x=t*n+e*this._x,this._y=t*i+e*this._y,this._z=t*r+e*this._z,this.normalize(),this._onChangeCallback(),this}const l=Math.sqrt(o),c=Math.atan2(l,s),h=Math.sin((1-e)*c)/l,u=Math.sin(e*c)/l;return this._w=a*h+this._w*u,this._x=n*h+this._x*u,this._y=i*h+this._y*u,this._z=r*h+this._z*u,this._onChangeCallback(),this}slerpQuaternions(t,e,n){this.copy(t).slerp(e,n)}random(){const t=Math.random(),e=Math.sqrt(1-t),n=Math.sqrt(t),i=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(e*Math.cos(i),n*Math.sin(r),n*Math.cos(r),e*Math.sin(i))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}pn.prototype.isQuaternion=!0;class mn{constructor(t=0,e=0,n=0){this.x=t,this.y=e,this.z=n}set(t,e,n){return void 0===n&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return t&&t.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(gn.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(gn.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6]*i,this.y=r[1]*e+r[4]*n+r[7]*i,this.z=r[2]*e+r[5]*n+r[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=t.elements,a=1/(r[3]*e+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*e+r[4]*n+r[8]*i+r[12])*a,this.y=(r[1]*e+r[5]*n+r[9]*i+r[13])*a,this.z=(r[2]*e+r[6]*n+r[10]*i+r[14])*a,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,r=t.x,a=t.y,s=t.z,o=t.w,l=o*e+a*i-s*n,c=o*n+s*e-r*i,h=o*i+r*n-a*e,u=-r*e-a*n-s*i;return this.x=l*o+u*-r+c*-s-h*-a,this.y=c*o+u*-a+h*-r-l*-s,this.z=h*o+u*-s+l*-a-c*-r,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[4]*n+r[8]*i,this.y=r[1]*e+r[5]*n+r[9]*i,this.z=r[2]*e+r[6]*n+r[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t,e){return void 0!==e?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e)):this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,r=t.z,a=e.x,s=e.y,o=e.z;return this.x=i*o-r*s,this.y=r*a-n*o,this.z=n*s-i*a,this}projectOnVector(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return fn.copy(this).projectOnVector(t),this.sub(fn)}reflect(t){return this.sub(fn.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(Qe(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=2*(Math.random()-.5),e=Math.random()*Math.PI*2,n=Math.sqrt(1-t**2);return this.x=n*Math.cos(e),this.y=n*Math.sin(e),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}mn.prototype.isVector3=!0;const fn=new mn,gn=new pn;class xn{constructor(t=new mn(1/0,1/0,1/0),e=new mn(-1/0,-1/0,-1/0)){this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,n=1/0,i=1/0,r=-1/0,a=-1/0,s=-1/0;for(let o=0,l=t.length;o<l;o+=3){const l=t[o],c=t[o+1],h=t[o+2];l<e&&(e=l),c<n&&(n=c),h<i&&(i=h),l>r&&(r=l),c>a&&(a=c),h>s&&(s=h)}return this.min.set(e,n,i),this.max.set(r,a,s),this}setFromBufferAttribute(t){let e=1/0,n=1/0,i=1/0,r=-1/0,a=-1/0,s=-1/0;for(let o=0,l=t.count;o<l;o++){const l=t.getX(o),c=t.getY(o),h=t.getZ(o);l<e&&(e=l),c<n&&(n=c),h<i&&(i=h),l>r&&(r=l),c>a&&(a=c),h>s&&(s=h)}return this.min.set(e,n,i),this.max.set(r,a,s),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=yn.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t){return this.makeEmpty(),this.expandByObject(t)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t){t.updateWorldMatrix(!1,!1);const e=t.geometry;void 0!==e&&(null===e.boundingBox&&e.computeBoundingBox(),_n.copy(e.boundingBox),_n.applyMatrix4(t.matrixWorld),this.union(_n));const n=t.children;for(let t=0,e=n.length;t<e;t++)this.expandByObject(n[t]);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,yn),yn.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(An),Ln.subVectors(this.max,An),bn.subVectors(t.a,An),wn.subVectors(t.b,An),Mn.subVectors(t.c,An),Sn.subVectors(wn,bn),Tn.subVectors(Mn,wn),En.subVectors(bn,Mn);let e=[0,-Sn.z,Sn.y,0,-Tn.z,Tn.y,0,-En.z,En.y,Sn.z,0,-Sn.x,Tn.z,0,-Tn.x,En.z,0,-En.x,-Sn.y,Sn.x,0,-Tn.y,Tn.x,0,-En.y,En.x,0];return!!Pn(e,bn,wn,Mn,Ln)&&(e=[1,0,0,0,1,0,0,0,1],!!Pn(e,bn,wn,Mn,Ln)&&(Rn.crossVectors(Sn,Tn),e=[Rn.x,Rn.y,Rn.z],Pn(e,bn,wn,Mn,Ln)))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return yn.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return this.getCenter(t.center),t.radius=.5*this.getSize(yn).length(),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(vn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),vn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),vn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),vn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),vn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),vn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),vn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),vn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(vn)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}xn.prototype.isBox3=!0;const vn=[new mn,new mn,new mn,new mn,new mn,new mn,new mn,new mn],yn=new mn,_n=new xn,bn=new mn,wn=new mn,Mn=new mn,Sn=new mn,Tn=new mn,En=new mn,An=new mn,Ln=new mn,Rn=new mn,Cn=new mn;function Pn(t,e,n,i,r){for(let a=0,s=t.length-3;a<=s;a+=3){Cn.fromArray(t,a);const s=r.x*Math.abs(Cn.x)+r.y*Math.abs(Cn.y)+r.z*Math.abs(Cn.z),o=e.dot(Cn),l=n.dot(Cn),c=i.dot(Cn);if(Math.max(-Math.max(o,l,c),Math.min(o,l,c))>s)return!1}return!0}const zn=new xn,In=new mn,Dn=new mn,Nn=new mn;class On{constructor(t=new mn,e=-1){this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;void 0!==e?n.copy(e):zn.setFromPoints(t).getCenter(n);let i=0;for(let e=0,r=t.length;e<r;e++)i=Math.max(i,n.distanceToSquared(t[e]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){Nn.subVectors(t,this.center);const e=Nn.lengthSq();if(e>this.radius*this.radius){const t=Math.sqrt(e),n=.5*(t-this.radius);this.center.add(Nn.multiplyScalar(n/t)),this.radius+=n}return this}union(t){return Dn.subVectors(t.center,this.center).normalize().multiplyScalar(t.radius),this.expandByPoint(In.copy(t.center).add(Dn)),this.expandByPoint(In.copy(t.center).sub(Dn)),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const Bn=new mn,Fn=new mn,Un=new mn,Hn=new mn,kn=new mn,Gn=new mn,Vn=new mn;class Wn{constructor(t=new mn,e=new mn(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,Bn)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=Bn.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(Bn.copy(this.direction).multiplyScalar(e).add(this.origin),Bn.distanceToSquared(t))}distanceSqToSegment(t,e,n,i){Fn.copy(t).add(e).multiplyScalar(.5),Un.copy(e).sub(t).normalize(),Hn.copy(this.origin).sub(Fn);const r=.5*t.distanceTo(e),a=-this.direction.dot(Un),s=Hn.dot(this.direction),o=-Hn.dot(Un),l=Hn.lengthSq(),c=Math.abs(1-a*a);let h,u,q,d;if(c>0)if(h=a*o-s,u=a*s-o,d=r*c,h>=0)if(u>=-d)if(u<=d){const t=1/c;h*=t,u*=t,q=h*(h+a*u+2*s)+u*(a*h+u+2*o)+l}else u=r,h=Math.max(0,-(a*u+s)),q=-h*h+u*(u+2*o)+l;else u=-r,h=Math.max(0,-(a*u+s)),q=-h*h+u*(u+2*o)+l;else u<=-d?(h=Math.max(0,-(-a*r+s)),u=h>0?-r:Math.min(Math.max(-r,-o),r),q=-h*h+u*(u+2*o)+l):u<=d?(h=0,u=Math.min(Math.max(-r,-o),r),q=u*(u+2*o)+l):(h=Math.max(0,-(a*r+s)),u=h>0?r:Math.min(Math.max(-r,-o),r),q=-h*h+u*(u+2*o)+l);else u=a>0?-r:r,h=Math.max(0,-(a*u+s)),q=-h*h+u*(u+2*o)+l;return n&&n.copy(this.direction).multiplyScalar(h).add(this.origin),i&&i.copy(Un).multiplyScalar(u).add(Fn),q}intersectSphere(t,e){Bn.subVectors(t.center,this.origin);const n=Bn.dot(this.direction),i=Bn.dot(Bn)-n*n,r=t.radius*t.radius;if(i>r)return null;const a=Math.sqrt(r-i),s=n-a,o=n+a;return s<0&&o<0?null:s<0?this.at(o,e):this.at(s,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return null===n?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return 0===e||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,i,r,a,s,o;const l=1/this.direction.x,c=1/this.direction.y,h=1/this.direction.z,u=this.origin;return l>=0?(n=(t.min.x-u.x)*l,i=(t.max.x-u.x)*l):(n=(t.max.x-u.x)*l,i=(t.min.x-u.x)*l),c>=0?(r=(t.min.y-u.y)*c,a=(t.max.y-u.y)*c):(r=(t.max.y-u.y)*c,a=(t.min.y-u.y)*c),n>a||r>i?null:((r>n||n!=n)&&(n=r),(a<i||i!=i)&&(i=a),h>=0?(s=(t.min.z-u.z)*h,o=(t.max.z-u.z)*h):(s=(t.max.z-u.z)*h,o=(t.min.z-u.z)*h),n>o||s>i?null:((s>n||n!=n)&&(n=s),(o<i||i!=i)&&(i=o),i<0?null:this.at(n>=0?n:i,e)))}intersectsBox(t){return null!==this.intersectBox(t,Bn)}intersectTriangle(t,e,n,i,r){kn.subVectors(e,t),Gn.subVectors(n,t),Vn.crossVectors(kn,Gn);let a,s=this.direction.dot(Vn);if(s>0){if(i)return null;a=1}else{if(!(s<0))return null;a=-1,s=-s}Hn.subVectors(this.origin,t);const o=a*this.direction.dot(Gn.crossVectors(Hn,Gn));if(o<0)return null;const l=a*this.direction.dot(kn.cross(Hn));if(l<0)return null;if(o+l>s)return null;const c=-a*Hn.dot(Vn);return c<0?null:this.at(c/s,r)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class jn{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,i,r,a,s,o,l,c,h,u,q,d,p,m){const f=this.elements;return f[0]=t,f[4]=e,f[8]=n,f[12]=i,f[1]=r,f[5]=a,f[9]=s,f[13]=o,f[2]=l,f[6]=c,f[10]=h,f[14]=u,f[3]=q,f[7]=d,f[11]=p,f[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new jn).fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/Xn.setFromMatrixColumn(t,0).length(),r=1/Xn.setFromMatrixColumn(t,1).length(),a=1/Xn.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*r,e[5]=n[5]*r,e[6]=n[6]*r,e[7]=0,e[8]=n[8]*a,e[9]=n[9]*a,e[10]=n[10]*a,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const e=this.elements,n=t.x,i=t.y,r=t.z,a=Math.cos(n),s=Math.sin(n),o=Math.cos(i),l=Math.sin(i),c=Math.cos(r),h=Math.sin(r);if("XYZ"===t.order){const t=a*c,n=a*h,i=s*c,r=s*h;e[0]=o*c,e[4]=-o*h,e[8]=l,e[1]=n+i*l,e[5]=t-r*l,e[9]=-s*o,e[2]=r-t*l,e[6]=i+n*l,e[10]=a*o}else if("YXZ"===t.order){const t=o*c,n=o*h,i=l*c,r=l*h;e[0]=t+r*s,e[4]=i*s-n,e[8]=a*l,e[1]=a*h,e[5]=a*c,e[9]=-s,e[2]=n*s-i,e[6]=r+t*s,e[10]=a*o}else if("ZXY"===t.order){const t=o*c,n=o*h,i=l*c,r=l*h;e[0]=t-r*s,e[4]=-a*h,e[8]=i+n*s,e[1]=n+i*s,e[5]=a*c,e[9]=r-t*s,e[2]=-a*l,e[6]=s,e[10]=a*o}else if("ZYX"===t.order){const t=a*c,n=a*h,i=s*c,r=s*h;e[0]=o*c,e[4]=i*l-n,e[8]=t*l+r,e[1]=o*h,e[5]=r*l+t,e[9]=n*l-i,e[2]=-l,e[6]=s*o,e[10]=a*o}else if("YZX"===t.order){const t=a*o,n=a*l,i=s*o,r=s*l;e[0]=o*c,e[4]=r-t*h,e[8]=i*h+n,e[1]=h,e[5]=a*c,e[9]=-s*c,e[2]=-l*c,e[6]=n*h+i,e[10]=t-r*h}else if("XZY"===t.order){const t=a*o,n=a*l,i=s*o,r=s*l;e[0]=o*c,e[4]=-h,e[8]=l*c,e[1]=t*h+r,e[5]=a*c,e[9]=n*h-i,e[2]=i*h-n,e[6]=s*c,e[10]=r*h+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(Zn,t,Jn)}lookAt(t,e,n){const i=this.elements;return $n.subVectors(t,e),0===$n.lengthSq()&&($n.z=1),$n.normalize(),Qn.crossVectors(n,$n),0===Qn.lengthSq()&&(1===Math.abs(n.z)?$n.x+=1e-4:$n.z+=1e-4,$n.normalize(),Qn.crossVectors(n,$n)),Qn.normalize(),Kn.crossVectors($n,Qn),i[0]=Qn.x,i[4]=Kn.x,i[8]=$n.x,i[1]=Qn.y,i[5]=Kn.y,i[9]=$n.y,i[2]=Qn.z,i[6]=Kn.z,i[10]=$n.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,a=n[0],s=n[4],o=n[8],l=n[12],c=n[1],h=n[5],u=n[9],q=n[13],d=n[2],p=n[6],m=n[10],f=n[14],g=n[3],x=n[7],v=n[11],y=n[15],_=i[0],b=i[4],w=i[8],M=i[12],S=i[1],T=i[5],E=i[9],A=i[13],L=i[2],R=i[6],C=i[10],P=i[14],z=i[3],I=i[7],D=i[11],N=i[15];return r[0]=a*_+s*S+o*L+l*z,r[4]=a*b+s*T+o*R+l*I,r[8]=a*w+s*E+o*C+l*D,r[12]=a*M+s*A+o*P+l*N,r[1]=c*_+h*S+u*L+q*z,r[5]=c*b+h*T+u*R+q*I,r[9]=c*w+h*E+u*C+q*D,r[13]=c*M+h*A+u*P+q*N,r[2]=d*_+p*S+m*L+f*z,r[6]=d*b+p*T+m*R+f*I,r[10]=d*w+p*E+m*C+f*D,r[14]=d*M+p*A+m*P+f*N,r[3]=g*_+x*S+v*L+y*z,r[7]=g*b+x*T+v*R+y*I,r[11]=g*w+x*E+v*C+y*D,r[15]=g*M+x*A+v*P+y*N,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],r=t[12],a=t[1],s=t[5],o=t[9],l=t[13],c=t[2],h=t[6],u=t[10],q=t[14];return t[3]*(+r*o*h-i*l*h-r*s*u+n*l*u+i*s*q-n*o*q)+t[7]*(+e*o*q-e*l*u+r*a*u-i*a*q+i*l*c-r*o*c)+t[11]*(+e*l*h-e*s*q-r*a*h+n*a*q+r*s*c-n*l*c)+t[15]*(-i*s*c-e*o*h+e*s*u+i*a*h-n*a*u+n*o*c)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],a=t[4],s=t[5],o=t[6],l=t[7],c=t[8],h=t[9],u=t[10],q=t[11],d=t[12],p=t[13],m=t[14],f=t[15],g=h*m*l-p*u*l+p*o*q-s*m*q-h*o*f+s*u*f,x=d*u*l-c*m*l-d*o*q+a*m*q+c*o*f-a*u*f,v=c*p*l-d*h*l+d*s*q-a*p*q-c*s*f+a*h*f,y=d*h*o-c*p*o-d*s*u+a*p*u+c*s*m-a*h*m,_=e*g+n*x+i*v+r*y;if(0===_)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const b=1/_;return t[0]=g*b,t[1]=(p*u*r-h*m*r-p*i*q+n*m*q+h*i*f-n*u*f)*b,t[2]=(s*m*r-p*o*r+p*i*l-n*m*l-s*i*f+n*o*f)*b,t[3]=(h*o*r-s*u*r-h*i*l+n*u*l+s*i*q-n*o*q)*b,t[4]=x*b,t[5]=(c*m*r-d*u*r+d*i*q-e*m*q-c*i*f+e*u*f)*b,t[6]=(d*o*r-a*m*r-d*i*l+e*m*l+a*i*f-e*o*f)*b,t[7]=(a*u*r-c*o*r+c*i*l-e*u*l-a*i*q+e*o*q)*b,t[8]=v*b,t[9]=(d*h*r-c*p*r-d*n*q+e*p*q+c*n*f-e*h*f)*b,t[10]=(a*p*r-d*s*r+d*n*l-e*p*l-a*n*f+e*s*f)*b,t[11]=(c*s*r-a*h*r-c*n*l+e*h*l+a*n*q-e*s*q)*b,t[12]=y*b,t[13]=(c*p*i-d*h*i+d*n*u-e*p*u-c*n*m+e*h*m)*b,t[14]=(d*s*i-a*p*i-d*n*o+e*p*o+a*n*m-e*s*m)*b,t[15]=(a*h*i-c*s*i+c*n*o-e*h*o-a*n*u+e*s*u)*b,this}scale(t){const e=this.elements,n=t.x,i=t.y,r=t.z;return e[0]*=n,e[4]*=i,e[8]*=r,e[1]*=n,e[5]*=i,e[9]*=r,e[2]*=n,e[6]*=i,e[10]*=r,e[3]*=n,e[7]*=i,e[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),r=1-n,a=t.x,s=t.y,o=t.z,l=r*a,c=r*s;return this.set(l*a+n,l*s-i*o,l*o+i*s,0,l*s+i*o,c*s+n,c*o-i*a,0,l*o-i*s,c*o+i*a,r*o*o+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,i,r,a){return this.set(1,n,r,0,t,1,a,0,e,i,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,r=e._x,a=e._y,s=e._z,o=e._w,l=r+r,c=a+a,h=s+s,u=r*l,q=r*c,d=r*h,p=a*c,m=a*h,f=s*h,g=o*l,x=o*c,v=o*h,y=n.x,_=n.y,b=n.z;return i[0]=(1-(p+f))*y,i[1]=(q+v)*y,i[2]=(d-x)*y,i[3]=0,i[4]=(q-v)*_,i[5]=(1-(u+f))*_,i[6]=(m+g)*_,i[7]=0,i[8]=(d+x)*b,i[9]=(m-g)*b,i[10]=(1-(u+p))*b,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let r=Xn.set(i[0],i[1],i[2]).length();const a=Xn.set(i[4],i[5],i[6]).length(),s=Xn.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),t.x=i[12],t.y=i[13],t.z=i[14],Yn.copy(this);const o=1/r,l=1/a,c=1/s;return Yn.elements[0]*=o,Yn.elements[1]*=o,Yn.elements[2]*=o,Yn.elements[4]*=l,Yn.elements[5]*=l,Yn.elements[6]*=l,Yn.elements[8]*=c,Yn.elements[9]*=c,Yn.elements[10]*=c,e.setFromRotationMatrix(Yn),n.x=r,n.y=a,n.z=s,this}makePerspective(t,e,n,i,r,a){void 0===a&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const s=this.elements,o=2*r/(e-t),l=2*r/(n-i),c=(e+t)/(e-t),h=(n+i)/(n-i),u=-(a+r)/(a-r),q=-2*a*r/(a-r);return s[0]=o,s[4]=0,s[8]=c,s[12]=0,s[1]=0,s[5]=l,s[9]=h,s[13]=0,s[2]=0,s[6]=0,s[10]=u,s[14]=q,s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this}makeOrthographic(t,e,n,i,r,a){const s=this.elements,o=1/(e-t),l=1/(n-i),c=1/(a-r),h=(e+t)*o,u=(n+i)*l,q=(a+r)*c;return s[0]=2*o,s[4]=0,s[8]=0,s[12]=-h,s[1]=0,s[5]=2*l,s[9]=0,s[13]=-u,s[2]=0,s[6]=0,s[10]=-2*c,s[14]=-q,s[3]=0,s[7]=0,s[11]=0,s[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let t=0;t<16;t++)if(e[t]!==n[t])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}jn.prototype.isMatrix4=!0;const Xn=new mn,Yn=new jn,Zn=new mn(0,0,0),Jn=new mn(1,1,1),Qn=new mn,Kn=new mn,$n=new mn,ti=new jn,ei=new pn;class ni{constructor(t=0,e=0,n=0,i=ni.DefaultOrder){this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i=this._order){return this._x=t,this._y=e,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const i=t.elements,r=i[0],a=i[4],s=i[8],o=i[1],l=i[5],c=i[9],h=i[2],u=i[6],q=i[10];switch(e){case"XYZ":this._y=Math.asin(Qe(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(-c,q),this._z=Math.atan2(-a,r)):(this._x=Math.atan2(u,l),this._z=0);break;case"YXZ":this._x=Math.asin(-Qe(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(s,q),this._z=Math.atan2(o,l)):(this._y=Math.atan2(-h,r),this._z=0);break;case"ZXY":this._x=Math.asin(Qe(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(-h,q),this._z=Math.atan2(-a,l)):(this._y=0,this._z=Math.atan2(o,r));break;case"ZYX":this._y=Math.asin(-Qe(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(u,q),this._z=Math.atan2(o,r)):(this._x=0,this._z=Math.atan2(-a,l));break;case"YZX":this._z=Math.asin(Qe(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-c,l),this._y=Math.atan2(-h,r)):(this._x=0,this._y=Math.atan2(s,q));break;case"XZY":this._z=Math.asin(-Qe(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(u,l),this._y=Math.atan2(s,r)):(this._x=Math.atan2(-c,q),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,!0===n&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return ti.makeRotationFromQuaternion(t),this.setFromRotationMatrix(ti,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return ei.setFromEuler(this),this.setFromQuaternion(ei,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}toVector3(t){return t?t.set(this._x,this._y,this._z):new mn(this._x,this._y,this._z)}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}ni.prototype.isEuler=!0,ni.DefaultOrder="XYZ",ni.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class ii{constructor(){this.mask=1}set(t){this.mask=1<<t|0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return 0!=(this.mask&t.mask)}}let ri=0;const ai=new mn,si=new pn,oi=new jn,li=new mn,ci=new mn,hi=new mn,ui=new pn,qi=new mn(1,0,0),di=new mn(0,1,0),pi=new mn(0,0,1),mi={type:"added"},fi={type:"removed"};class gi extends We{constructor(){super(),Object.defineProperty(this,"id",{value:ri++}),this.uuid=Je(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=gi.DefaultUp.clone();const t=new mn,e=new ni,n=new pn,i=new mn(1,1,1);e._onChange((function(){n.setFromEuler(e,!1)})),n._onChange((function(){e.setFromQuaternion(n,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new jn},normalMatrix:{value:new nn}}),this.matrix=new jn,this.matrixWorld=new jn,this.matrixAutoUpdate=gi.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new ii,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return si.setFromAxisAngle(t,e),this.quaternion.multiply(si),this}rotateOnWorldAxis(t,e){return si.setFromAxisAngle(t,e),this.quaternion.premultiply(si),this}rotateX(t){return this.rotateOnAxis(qi,t)}rotateY(t){return this.rotateOnAxis(di,t)}rotateZ(t){return this.rotateOnAxis(pi,t)}translateOnAxis(t,e){return ai.copy(t).applyQuaternion(this.quaternion),this.position.add(ai.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(qi,t)}translateY(t){return this.translateOnAxis(di,t)}translateZ(t){return this.translateOnAxis(pi,t)}localToWorld(t){return t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return t.applyMatrix4(oi.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?li.copy(t):li.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),ci.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?oi.lookAt(ci,li,this.up):oi.lookAt(li,ci,this.up),this.quaternion.setFromRotationMatrix(oi),i&&(oi.extractRotation(i.matrixWorld),si.setFromRotationMatrix(oi),this.quaternion.premultiply(si.invert()))}add(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(mi)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const e=this.children.indexOf(t);return-1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(fi)),this}removeFromParent(){const t=this.parent;return null!==t&&t.remove(this),this}clear(){for(let t=0;t<this.children.length;t++){const e=this.children[t];e.parent=null,e.dispatchEvent(fi)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),oi.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),oi.multiply(t.parent.matrixWorld)),t.applyMatrix4(oi),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const i=this.children[n].getObjectByProperty(t,e);if(void 0!==i)return i}}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ci,t,hi),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ci,ui,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)}traverseVisible(t){if(!1===this.visible)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].updateMatrixWorld(t)}updateWorldMatrix(t,e){const n=this.parent;if(!0===t&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===e){const t=this.children;for(let e=0,n=t.length;e<n;e++)t[e].updateWorldMatrix(!1,!0)}}toJSON(t){const e=void 0===t||"string"==typeof t,n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};function r(e,n){return void 0===e[n.uuid]&&(e[n.uuid]=n.toJSON(t)),n.uuid}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),!0===this.castShadow&&(i.castShadow=!0),!0===this.receiveShadow&&(i.receiveShadow=!0),!1===this.visible&&(i.visible=!1),!1===this.frustumCulled&&(i.frustumCulled=!1),0!==this.renderOrder&&(i.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(i.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&(i.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(t.geometries,this.geometry);const e=this.geometry.parameters;if(void 0!==e&&void 0!==e.shapes){const n=e.shapes;if(Array.isArray(n))for(let e=0,i=n.length;e<i;e++){const i=n[e];r(t.shapes,i)}else r(t.shapes,n)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(r(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const e=[];for(let n=0,i=this.material.length;n<i;n++)e.push(r(t.materials,this.material[n]));i.material=e}else i.material=r(t.materials,this.material);if(this.children.length>0){i.children=[];for(let e=0;e<this.children.length;e++)i.children.push(this.children[e].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let e=0;e<this.animations.length;e++){const n=this.animations[e];i.animations.push(r(t.animations,n))}}if(e){const e=a(t.geometries),i=a(t.materials),r=a(t.textures),s=a(t.images),o=a(t.shapes),l=a(t.skeletons),c=a(t.animations);e.length>0&&(n.geometries=e),i.length>0&&(n.materials=i),r.length>0&&(n.textures=r),s.length>0&&(n.images=s),o.length>0&&(n.shapes=o),l.length>0&&(n.skeletons=l),c.length>0&&(n.animations=c)}return n.object=i,n;function a(t){const e=[];for(const n in t){const i=t[n];delete i.metadata,e.push(i)}return e}}clone(t){return(new this.constructor).copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let e=0;e<t.children.length;e++){const n=t.children[e];this.add(n.clone())}return this}}gi.DefaultUp=new mn(0,1,0),gi.DefaultMatrixAutoUpdate=!0,gi.prototype.isObject3D=!0;const xi=new mn,vi=new mn,yi=new mn,_i=new mn,bi=new mn,wi=new mn,Mi=new mn,Si=new mn,Ti=new mn,Ei=new mn;class Ai{constructor(t=new mn,e=new mn,n=new mn){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,i){i.subVectors(n,e),xi.subVectors(t,e),i.cross(xi);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(t,e,n,i,r){xi.subVectors(i,e),vi.subVectors(n,e),yi.subVectors(t,e);const a=xi.dot(xi),s=xi.dot(vi),o=xi.dot(yi),l=vi.dot(vi),c=vi.dot(yi),h=a*l-s*s;if(0===h)return r.set(-2,-1,-1);const u=1/h,q=(l*o-s*c)*u,d=(a*c-s*o)*u;return r.set(1-q-d,d,q)}static containsPoint(t,e,n,i){return this.getBarycoord(t,e,n,i,_i),_i.x>=0&&_i.y>=0&&_i.x+_i.y<=1}static getUV(t,e,n,i,r,a,s,o){return this.getBarycoord(t,e,n,i,_i),o.set(0,0),o.addScaledVector(r,_i.x),o.addScaledVector(a,_i.y),o.addScaledVector(s,_i.z),o}static isFrontFacing(t,e,n,i){return xi.subVectors(n,e),vi.subVectors(t,e),xi.cross(vi).dot(i)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this}setFromAttributeAndIndices(t,e,n,i){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,i),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return xi.subVectors(this.c,this.b),vi.subVectors(this.a,this.b),.5*xi.cross(vi).length()}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return Ai.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return Ai.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,n,i,r){return Ai.getUV(t,this.a,this.b,this.c,e,n,i,r)}containsPoint(t){return Ai.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return Ai.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,i=this.b,r=this.c;let a,s;bi.subVectors(i,n),wi.subVectors(r,n),Si.subVectors(t,n);const o=bi.dot(Si),l=wi.dot(Si);if(o<=0&&l<=0)return e.copy(n);Ti.subVectors(t,i);const c=bi.dot(Ti),h=wi.dot(Ti);if(c>=0&&h<=c)return e.copy(i);const u=o*h-c*l;if(u<=0&&o>=0&&c<=0)return a=o/(o-c),e.copy(n).addScaledVector(bi,a);Ei.subVectors(t,r);const q=bi.dot(Ei),d=wi.dot(Ei);if(d>=0&&q<=d)return e.copy(r);const p=q*l-o*d;if(p<=0&&l>=0&&d<=0)return s=l/(l-d),e.copy(n).addScaledVector(wi,s);const m=c*d-q*h;if(m<=0&&h-c>=0&&q-d>=0)return Mi.subVectors(r,i),s=(h-c)/(h-c+(q-d)),e.copy(i).addScaledVector(Mi,s);const f=1/(m+p+u);return a=p*f,s=u*f,e.copy(n).addScaledVector(bi,a).addScaledVector(wi,s)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let Li=0;class Ri extends We{constructor(){super(),Object.defineProperty(this,"id",{value:Li++}),this.uuid=Je(),this.name="",this.type="Material",this.fog=!0,this.blending=d,this.side=c,this.vertexColors=!1,this.opacity=1,this.format=Tt,this.transparent=!1,this.blendSrc=E,this.blendDst=A,this.blendEquation=x,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=O,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=He,this.stencilZFail=He,this.stencilZPass=He,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(void 0!==t)for(const e in t){const n=t[e];if(void 0===n){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}if("shading"===e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===n;continue}const i=this[e];void 0!==i?i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n:console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.")}}toJSON(t){const e=void 0===t||"string"==typeof t;e&&(t={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function i(t){const e=[];for(const n in t){const i=t[n];delete i.metadata,e.push(i)}return e}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),void 0!==this.sheen&&(n.sheen=this.sheen),this.sheenTint&&this.sheenTint.isColor&&(n.sheenTint=this.sheenTint.getHex()),void 0!==this.sheenRoughness&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(n.specularIntensity=this.specularIntensity),this.specularTint&&this.specularTint.isColor&&(n.specularTint=this.specularTint.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularTintMap&&this.specularTintMap.isTexture&&(n.specularTintMap=this.specularTintMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.transmission&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),void 0!==this.thickness&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),void 0!==this.attenuationDistance&&(n.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationTint&&(n.attenuationTint=this.attenuationTint.getHex()),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==d&&(n.blending=this.blending),this.side!==c&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.format!==Tt&&(n.format=this.format),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(n.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(n.flatShading=this.flatShading),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),e){const e=i(t.textures),r=i(t.images);e.length>0&&(n.textures=e),r.length>0&&(n.images=r)}return n}clone(){return(new this.constructor).copy(this)}copy(t){this.name=t.name,this.fog=t.fog,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.format=t.format,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(null!==e){const t=e.length;n=new Array(t);for(let i=0;i!==t;++i)n[i]=e[i].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){!0===t&&this.version++}}Ri.prototype.isMaterial=!0;const Ci={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Pi={h:0,s:0,l:0},zi={h:0,s:0,l:0};function Ii(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*(e-t)*n:n<.5?e:n<2/3?t+6*(e-t)*(2/3-n):t}function Di(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function Ni(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}class Oi{constructor(t,e,n){return void 0===e&&void 0===n?this.set(t):this.setRGB(t,e,n)}set(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this}setRGB(t,e,n){return this.r=t,this.g=e,this.b=n,this}setHSL(t,e,n){if(t=(t%(i=1)+i)%i,e=Qe(e,0,1),n=Qe(n,0,1),0===e)this.r=this.g=this.b=n;else{const i=n<=.5?n*(1+e):n+e-n*e,r=2*n-i;this.r=Ii(r,i,t+1/3),this.g=Ii(r,i,t),this.b=Ii(r,i,t-1/3)}var i;return this}setStyle(t){function e(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let n;if(n=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let t;const i=n[1],r=n[2];switch(i){case"rgb":case"rgba":if(t=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r))return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,e(t[4]),this;if(t=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r))return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,e(t[4]),this;break;case"hsl":case"hsla":if(t=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r)){const n=parseFloat(t[1])/360,i=parseInt(t[2],10)/100,r=parseInt(t[3],10)/100;return e(t[4]),this.setHSL(n,i,r)}}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(t)){const t=n[1],e=t.length;if(3===e)return this.r=parseInt(t.charAt(0)+t.charAt(0),16)/255,this.g=parseInt(t.charAt(1)+t.charAt(1),16)/255,this.b=parseInt(t.charAt(2)+t.charAt(2),16)/255,this;if(6===e)return this.r=parseInt(t.charAt(0)+t.charAt(1),16)/255,this.g=parseInt(t.charAt(2)+t.charAt(3),16)/255,this.b=parseInt(t.charAt(4)+t.charAt(5),16)/255,this}return t&&t.length>0?this.setColorName(t):this}setColorName(t){const e=Ci[t.toLowerCase()];return void 0!==e?this.setHex(e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copyGammaToLinear(t,e=2){return this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this}copyLinearToGamma(t,e=2){const n=e>0?1/e:1;return this.r=Math.pow(t.r,n),this.g=Math.pow(t.g,n),this.b=Math.pow(t.b,n),this}convertGammaToLinear(t){return this.copyGammaToLinear(this,t),this}convertLinearToGamma(t){return this.copyLinearToGamma(this,t),this}copySRGBToLinear(t){return this.r=Di(t.r),this.g=Di(t.g),this.b=Di(t.b),this}copyLinearToSRGB(t){return this.r=Ni(t.r),this.g=Ni(t.g),this.b=Ni(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(t){const e=this.r,n=this.g,i=this.b,r=Math.max(e,n,i),a=Math.min(e,n,i);let s,o;const l=(a+r)/2;if(a===r)s=0,o=0;else{const t=r-a;switch(o=l<=.5?t/(r+a):t/(2-r-a),r){case e:s=(n-i)/t+(n<i?6:0);break;case n:s=(i-e)/t+2;break;case i:s=(e-n)/t+4}s/=6}return t.h=s,t.s=o,t.l=l,t}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(t,e,n){return this.getHSL(Pi),Pi.h+=t,Pi.s+=e,Pi.l+=n,this.setHSL(Pi.h,Pi.s,Pi.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(Pi),t.getHSL(zi);const n=Ke(Pi.h,zi.h,e),i=Ke(Pi.s,zi.s,e),r=Ke(Pi.l,zi.l,e);return this.setHSL(n,i,r),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),!0===t.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}Oi.NAMES=Ci,Oi.prototype.isColor=!0,Oi.prototype.r=1,Oi.prototype.g=1,Oi.prototype.b=1;class Bi extends Ri{constructor(t){super(),this.type="MeshBasicMaterial",this.color=new Oi(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=k,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this}}Bi.prototype.isMeshBasicMaterial=!0;const Fi=new mn,Ui=new en;class Hi{constructor(t,e,n){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=!0===n,this.usage=ke,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[t+i]=e.array[n+i];return this}copyArray(t){return this.array.set(t),this}copyColorsArray(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),r=new Oi),e[n++]=r.r,e[n++]=r.g,e[n++]=r.b}return this}copyVector2sArray(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),r=new en),e[n++]=r.x,e[n++]=r.y}return this}copyVector3sArray(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),r=new mn),e[n++]=r.x,e[n++]=r.y,e[n++]=r.z}return this}copyVector4sArray(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),r=new un),e[n++]=r.x,e[n++]=r.y,e[n++]=r.z,e[n++]=r.w}return this}applyMatrix3(t){if(2===this.itemSize)for(let e=0,n=this.count;e<n;e++)Ui.fromBufferAttribute(this,e),Ui.applyMatrix3(t),this.setXY(e,Ui.x,Ui.y);else if(3===this.itemSize)for(let e=0,n=this.count;e<n;e++)Fi.fromBufferAttribute(this,e),Fi.applyMatrix3(t),this.setXYZ(e,Fi.x,Fi.y,Fi.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)Fi.x=this.getX(e),Fi.y=this.getY(e),Fi.z=this.getZ(e),Fi.applyMatrix4(t),this.setXYZ(e,Fi.x,Fi.y,Fi.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)Fi.x=this.getX(e),Fi.y=this.getY(e),Fi.z=this.getZ(e),Fi.applyNormalMatrix(t),this.setXYZ(e,Fi.x,Fi.y,Fi.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)Fi.x=this.getX(e),Fi.y=this.getY(e),Fi.z=this.getZ(e),Fi.transformDirection(t),this.setXYZ(e,Fi.x,Fi.y,Fi.z);return this}set(t,e=0){return this.array.set(t,e),this}getX(t){return this.array[t*this.itemSize]}setX(t,e){return this.array[t*this.itemSize]=e,this}getY(t){return this.array[t*this.itemSize+1]}setY(t,e){return this.array[t*this.itemSize+1]=e,this}getZ(t){return this.array[t*this.itemSize+2]}setZ(t,e){return this.array[t*this.itemSize+2]=e,this}getW(t){return this.array[t*this.itemSize+3]}setW(t,e){return this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this}setXYZW(t,e,n,i,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=r,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(t.name=this.name),this.usage!==ke&&(t.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(t.updateRange=this.updateRange),t}}Hi.prototype.isBufferAttribute=!0;class ki extends Hi{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class Gi extends Hi{constructor(t,e,n){super(new Uint32Array(t),e,n)}}(class extends Hi{constructor(t,e,n){super(new Uint16Array(t),e,n)}}).prototype.isFloat16BufferAttribute=!0;class Vi extends Hi{constructor(t,e,n){super(new Float32Array(t),e,n)}}let Wi=0;const ji=new jn,Xi=new gi,Yi=new mn,Zi=new xn,Ji=new xn,Qi=new mn;class Ki extends We{constructor(){super(),Object.defineProperty(this,"id",{value:Wi++}),this.uuid=Je(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(rn(t)>65535?Gi:ki)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return void 0!==this.attributes[t]}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const e=(new nn).getNormalMatrix(t);n.applyNormalMatrix(e),n.needsUpdate=!0}const i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(t),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(t){return ji.makeRotationFromQuaternion(t),this.applyMatrix4(ji),this}rotateX(t){return ji.makeRotationX(t),this.applyMatrix4(ji),this}rotateY(t){return ji.makeRotationY(t),this.applyMatrix4(ji),this}rotateZ(t){return ji.makeRotationZ(t),this.applyMatrix4(ji),this}translate(t,e,n){return ji.makeTranslation(t,e,n),this.applyMatrix4(ji),this}scale(t,e,n){return ji.makeScale(t,e,n),this.applyMatrix4(ji),this}lookAt(t){return Xi.lookAt(t),Xi.updateMatrix(),this.applyMatrix4(Xi.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Yi).negate(),this.translate(Yi.x,Yi.y,Yi.z),this}setFromPoints(t){const e=[];for(let n=0,i=t.length;n<i;n++){const i=t[n];e.push(i.x,i.y,i.z||0)}return this.setAttribute("position",new Vi(e,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new xn);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new mn(-1/0,-1/0,-1/0),new mn(1/0,1/0,1/0));if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(let t=0,n=e.length;t<n;t++){const n=e[t];Zi.setFromBufferAttribute(n),this.morphTargetsRelative?(Qi.addVectors(this.boundingBox.min,Zi.min),this.boundingBox.expandByPoint(Qi),Qi.addVectors(this.boundingBox.max,Zi.max),this.boundingBox.expandByPoint(Qi)):(this.boundingBox.expandByPoint(Zi.min),this.boundingBox.expandByPoint(Zi.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new On);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new mn,1/0);if(t){const n=this.boundingSphere.center;if(Zi.setFromBufferAttribute(t),e)for(let t=0,n=e.length;t<n;t++){const n=e[t];Ji.setFromBufferAttribute(n),this.morphTargetsRelative?(Qi.addVectors(Zi.min,Ji.min),Zi.expandByPoint(Qi),Qi.addVectors(Zi.max,Ji.max),Zi.expandByPoint(Qi)):(Zi.expandByPoint(Ji.min),Zi.expandByPoint(Ji.max))}Zi.getCenter(n);let i=0;for(let e=0,r=t.count;e<r;e++)Qi.fromBufferAttribute(t,e),i=Math.max(i,n.distanceToSquared(Qi));if(e)for(let r=0,a=e.length;r<a;r++){const a=e[r],s=this.morphTargetsRelative;for(let e=0,r=a.count;e<r;e++)Qi.fromBufferAttribute(a,e),s&&(Yi.fromBufferAttribute(t,e),Qi.add(Yi)),i=Math.max(i,n.distanceToSquared(Qi))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(null===t||void 0===e.position||void 0===e.normal||void 0===e.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const n=t.array,i=e.position.array,r=e.normal.array,a=e.uv.array,s=i.length/3;void 0===e.tangent&&this.setAttribute("tangent",new Hi(new Float32Array(4*s),4));const o=e.tangent.array,l=[],c=[];for(let t=0;t<s;t++)l[t]=new mn,c[t]=new mn;const h=new mn,u=new mn,q=new mn,d=new en,p=new en,m=new en,f=new mn,g=new mn;function x(t,e,n){h.fromArray(i,3*t),u.fromArray(i,3*e),q.fromArray(i,3*n),d.fromArray(a,2*t),p.fromArray(a,2*e),m.fromArray(a,2*n),u.sub(h),q.sub(h),p.sub(d),m.sub(d);const r=1/(p.x*m.y-m.x*p.y);isFinite(r)&&(f.copy(u).multiplyScalar(m.y).addScaledVector(q,-p.y).multiplyScalar(r),g.copy(q).multiplyScalar(p.x).addScaledVector(u,-m.x).multiplyScalar(r),l[t].add(f),l[e].add(f),l[n].add(f),c[t].add(g),c[e].add(g),c[n].add(g))}let v=this.groups;0===v.length&&(v=[{start:0,count:n.length}]);for(let t=0,e=v.length;t<e;++t){const e=v[t],i=e.start;for(let t=i,r=i+e.count;t<r;t+=3)x(n[t+0],n[t+1],n[t+2])}const y=new mn,_=new mn,b=new mn,w=new mn;function M(t){b.fromArray(r,3*t),w.copy(b);const e=l[t];y.copy(e),y.sub(b.multiplyScalar(b.dot(e))).normalize(),_.crossVectors(w,e);const n=_.dot(c[t])<0?-1:1;o[4*t]=y.x,o[4*t+1]=y.y,o[4*t+2]=y.z,o[4*t+3]=n}for(let t=0,e=v.length;t<e;++t){const e=v[t],i=e.start;for(let t=i,r=i+e.count;t<r;t+=3)M(n[t+0]),M(n[t+1]),M(n[t+2])}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(void 0!==e){let n=this.getAttribute("normal");if(void 0===n)n=new Hi(new Float32Array(3*e.count),3),this.setAttribute("normal",n);else for(let t=0,e=n.count;t<e;t++)n.setXYZ(t,0,0,0);const i=new mn,r=new mn,a=new mn,s=new mn,o=new mn,l=new mn,c=new mn,h=new mn;if(t)for(let u=0,q=t.count;u<q;u+=3){const q=t.getX(u+0),d=t.getX(u+1),p=t.getX(u+2);i.fromBufferAttribute(e,q),r.fromBufferAttribute(e,d),a.fromBufferAttribute(e,p),c.subVectors(a,r),h.subVectors(i,r),c.cross(h),s.fromBufferAttribute(n,q),o.fromBufferAttribute(n,d),l.fromBufferAttribute(n,p),s.add(c),o.add(c),l.add(c),n.setXYZ(q,s.x,s.y,s.z),n.setXYZ(d,o.x,o.y,o.z),n.setXYZ(p,l.x,l.y,l.z)}else for(let t=0,s=e.count;t<s;t+=3)i.fromBufferAttribute(e,t+0),r.fromBufferAttribute(e,t+1),a.fromBufferAttribute(e,t+2),c.subVectors(a,r),h.subVectors(i,r),c.cross(h),n.setXYZ(t+0,c.x,c.y,c.z),n.setXYZ(t+1,c.x,c.y,c.z),n.setXYZ(t+2,c.x,c.y,c.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(t,e){if(!t||!t.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t);void 0===e&&(e=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const i in n){if(void 0===t.attributes[i])continue;const r=n[i].array,a=t.attributes[i],s=a.array,o=a.itemSize*e,l=Math.min(s.length,r.length-o);for(let t=0,e=o;t<l;t++,e++)r[e]=s[t]}return this}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)Qi.fromBufferAttribute(t,e),Qi.normalize(),t.setXYZ(e,Qi.x,Qi.y,Qi.z)}toNonIndexed(){function t(t,e){const n=t.array,i=t.itemSize,r=t.normalized,a=new n.constructor(e.length*i);let s=0,o=0;for(let r=0,l=e.length;r<l;r++){s=t.isInterleavedBufferAttribute?e[r]*t.data.stride+t.offset:e[r]*i;for(let t=0;t<i;t++)a[o++]=n[s++]}return new Hi(a,i,r)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new Ki,n=this.index.array,i=this.attributes;for(const r in i){const a=t(i[r],n);e.setAttribute(r,a)}const r=this.morphAttributes;for(const i in r){const a=[],s=r[i];for(let e=0,i=s.length;e<i;e++){const i=t(s[e],n);a.push(i)}e.morphAttributes[i]=a}e.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let t=0,n=a.length;t<n;t++){const n=a[t];e.addGroup(n.start,n.count,n.materialIndex)}return e}toJSON(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){const e=this.parameters;for(const n in e)void 0!==e[n]&&(t[n]=e[n]);return t}t.data={attributes:{}};const e=this.index;null!==e&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const e in n){const i=n[e];t.data.attributes[e]=i.toJSON(t.data)}const i={};let r=!1;for(const e in this.morphAttributes){const n=this.morphAttributes[e],a=[];for(let e=0,i=n.length;e<i;e++){const i=n[e];a.push(i.toJSON(t.data))}a.length>0&&(i[e]=a,r=!0)}r&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(t.data.groups=JSON.parse(JSON.stringify(a)));const s=this.boundingSphere;return null!==s&&(t.data.boundingSphere={center:s.center.toArray(),radius:s.radius}),t}clone(){return(new this.constructor).copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;null!==n&&this.setIndex(n.clone(e));const i=t.attributes;for(const t in i){const n=i[t];this.setAttribute(t,n.clone(e))}const r=t.morphAttributes;for(const t in r){const n=[],i=r[t];for(let t=0,r=i.length;t<r;t++)n.push(i[t].clone(e));this.morphAttributes[t]=n}this.morphTargetsRelative=t.morphTargetsRelative;const a=t.groups;for(let t=0,e=a.length;t<e;t++){const e=a[t];this.addGroup(e.start,e.count,e.materialIndex)}const s=t.boundingBox;null!==s&&(this.boundingBox=s.clone());const o=t.boundingSphere;return null!==o&&(this.boundingSphere=o.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,void 0!==t.parameters&&(this.parameters=Object.assign({},t.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}Ki.prototype.isBufferGeometry=!0;const $i=new jn,tr=new Wn,er=new On,nr=new mn,ir=new mn,rr=new mn,ar=new mn,sr=new mn,or=new mn,lr=new mn,cr=new mn,hr=new mn,ur=new en,qr=new en,dr=new en,pr=new mn,mr=new mn;class fr extends gi{constructor(t=new Ki,e=new Bi){super(),this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t){return super.copy(t),void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(t,e){const n=this.geometry,i=this.material,r=this.matrixWorld;if(void 0===i)return;if(null===n.boundingSphere&&n.computeBoundingSphere(),er.copy(n.boundingSphere),er.applyMatrix4(r),!1===t.ray.intersectsSphere(er))return;if($i.copy(r).invert(),tr.copy(t.ray).applyMatrix4($i),null!==n.boundingBox&&!1===tr.intersectsBox(n.boundingBox))return;let a;if(n.isBufferGeometry){const r=n.index,s=n.attributes.position,o=n.morphAttributes.position,l=n.morphTargetsRelative,c=n.attributes.uv,h=n.attributes.uv2,u=n.groups,q=n.drawRange;if(null!==r)if(Array.isArray(i))for(let n=0,d=u.length;n<d;n++){const d=u[n],p=i[d.materialIndex];for(let n=Math.max(d.start,q.start),i=Math.min(r.count,Math.min(d.start+d.count,q.start+q.count));n<i;n+=3){const i=r.getX(n),u=r.getX(n+1),q=r.getX(n+2);a=gr(this,p,t,tr,s,o,l,c,h,i,u,q),a&&(a.faceIndex=Math.floor(n/3),a.face.materialIndex=d.materialIndex,e.push(a))}}else for(let n=Math.max(0,q.start),u=Math.min(r.count,q.start+q.count);n<u;n+=3){const u=r.getX(n),q=r.getX(n+1),d=r.getX(n+2);a=gr(this,i,t,tr,s,o,l,c,h,u,q,d),a&&(a.faceIndex=Math.floor(n/3),e.push(a))}else if(void 0!==s)if(Array.isArray(i))for(let n=0,r=u.length;n<r;n++){const r=u[n],d=i[r.materialIndex];for(let n=Math.max(r.start,q.start),i=Math.min(s.count,Math.min(r.start+r.count,q.start+q.count));n<i;n+=3)a=gr(this,d,t,tr,s,o,l,c,h,n,n+1,n+2),a&&(a.faceIndex=Math.floor(n/3),a.face.materialIndex=r.materialIndex,e.push(a))}else for(let n=Math.max(0,q.start),r=Math.min(s.count,q.start+q.count);n<r;n+=3)a=gr(this,i,t,tr,s,o,l,c,h,n,n+1,n+2),a&&(a.faceIndex=Math.floor(n/3),e.push(a))}else n.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}function gr(t,e,n,i,r,a,s,o,l,c,q,d){nr.fromBufferAttribute(r,c),ir.fromBufferAttribute(r,q),rr.fromBufferAttribute(r,d);const p=t.morphTargetInfluences;if(a&&p){lr.set(0,0,0),cr.set(0,0,0),hr.set(0,0,0);for(let t=0,e=a.length;t<e;t++){const e=p[t],n=a[t];0!==e&&(ar.fromBufferAttribute(n,c),sr.fromBufferAttribute(n,q),or.fromBufferAttribute(n,d),s?(lr.addScaledVector(ar,e),cr.addScaledVector(sr,e),hr.addScaledVector(or,e)):(lr.addScaledVector(ar.sub(nr),e),cr.addScaledVector(sr.sub(ir),e),hr.addScaledVector(or.sub(rr),e)))}nr.add(lr),ir.add(cr),rr.add(hr)}t.isSkinnedMesh&&(t.boneTransform(c,nr),t.boneTransform(q,ir),t.boneTransform(d,rr));const m=function(t,e,n,i,r,a,s,o){let l;if(l=e.side===h?i.intersectTriangle(s,a,r,!0,o):i.intersectTriangle(r,a,s,e.side!==u,o),null===l)return null;mr.copy(o),mr.applyMatrix4(t.matrixWorld);const c=n.ray.origin.distanceTo(mr);return c<n.near||c>n.far?null:{distance:c,point:mr.clone(),object:t}}(t,e,n,i,nr,ir,rr,pr);if(m){o&&(ur.fromBufferAttribute(o,c),qr.fromBufferAttribute(o,q),dr.fromBufferAttribute(o,d),m.uv=Ai.getUV(pr,nr,ir,rr,ur,qr,dr,new en)),l&&(ur.fromBufferAttribute(l,c),qr.fromBufferAttribute(l,q),dr.fromBufferAttribute(l,d),m.uv2=Ai.getUV(pr,nr,ir,rr,ur,qr,dr,new en));const t={a:c,b:q,c:d,normal:new mn,materialIndex:0};Ai.getNormal(nr,ir,rr,t.normal),m.face=t}return m}fr.prototype.isMesh=!0;class xr extends Ki{constructor(t=1,e=1,n=1,i=1,r=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:r,depthSegments:a};const s=this;i=Math.floor(i),r=Math.floor(r),a=Math.floor(a);const o=[],l=[],c=[],h=[];let u=0,q=0;function d(t,e,n,i,r,a,d,p,m,f,g){const x=a/m,v=d/f,y=a/2,_=d/2,b=p/2,w=m+1,M=f+1;let S=0,T=0;const E=new mn;for(let a=0;a<M;a++){const s=a*v-_;for(let o=0;o<w;o++){const u=o*x-y;E[t]=u*i,E[e]=s*r,E[n]=b,l.push(E.x,E.y,E.z),E[t]=0,E[e]=0,E[n]=p>0?1:-1,c.push(E.x,E.y,E.z),h.push(o/m),h.push(1-a/f),S+=1}}for(let t=0;t<f;t++)for(let e=0;e<m;e++){const n=u+e+w*t,i=u+e+w*(t+1),r=u+(e+1)+w*(t+1),a=u+(e+1)+w*t;o.push(n,i,a),o.push(i,r,a),T+=6}s.addGroup(q,T,g),q+=T,u+=S}d("z","y","x",-1,-1,n,e,t,a,r,0),d("z","y","x",1,-1,n,e,-t,a,r,1),d("x","z","y",1,1,t,n,e,i,a,2),d("x","z","y",1,-1,t,n,-e,i,a,3),d("x","y","z",1,-1,t,e,n,i,r,4),d("x","y","z",-1,-1,t,e,-n,i,r,5),this.setIndex(o),this.setAttribute("position",new Vi(l,3)),this.setAttribute("normal",new Vi(c,3)),this.setAttribute("uv",new Vi(h,2))}static fromJSON(t){return new xr(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function vr(t){const e={};for(const n in t){e[n]={};for(const i in t[n]){const r=t[n][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?e[n][i]=r.clone():Array.isArray(r)?e[n][i]=r.slice():e[n][i]=r}}return e}function yr(t){const e={};for(let n=0;n<t.length;n++){const i=vr(t[n]);for(const t in i)e[t]=i[t]}return e}const _r={clone:vr,merge:yr};class br extends Ri{constructor(t){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==t&&(void 0!==t.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=vr(t.uniforms),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const n in this.uniforms){const i=this.uniforms[n].value;i&&i.isTexture?e.uniforms[n]={type:"t",value:i.toJSON(t).uuid}:i&&i.isColor?e.uniforms[n]={type:"c",value:i.getHex()}:i&&i.isVector2?e.uniforms[n]={type:"v2",value:i.toArray()}:i&&i.isVector3?e.uniforms[n]={type:"v3",value:i.toArray()}:i&&i.isVector4?e.uniforms[n]={type:"v4",value:i.toArray()}:i&&i.isMatrix3?e.uniforms[n]={type:"m3",value:i.toArray()}:i&&i.isMatrix4?e.uniforms[n]={type:"m4",value:i.toArray()}:e.uniforms[n]={value:i}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const n={};for(const t in this.extensions)!0===this.extensions[t]&&(n[t]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}br.prototype.isShaderMaterial=!0;class wr extends gi{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new jn,this.projectionMatrix=new jn,this.projectionMatrixInverse=new jn}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}wr.prototype.isCamera=!0;class Mr extends wr{constructor(t=50,e=1,n=.1,i=2e3){super(),this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=2*Xe*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(.5*je*this.fov);return.5*this.getFilmHeight()/t}getEffectiveFOV(){return 2*Xe*Math.atan(Math.tan(.5*je*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(t,e,n,i,r,a){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(.5*je*this.fov)/this.zoom,n=2*e,i=this.aspect*n,r=-.5*i;const a=this.view;if(null!==this.view&&this.view.enabled){const t=a.fullWidth,s=a.fullHeight;r+=a.offsetX*i/t,e-=a.offsetY*n/s,i*=a.width/t,n*=a.height/s}const s=this.filmOffset;0!==s&&(r+=t*s/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,e,e-n,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}Mr.prototype.isPerspectiveCamera=!0;const Sr=90;class Tr extends gi{constructor(t,e,n){if(super(),this.type="CubeCamera",!0!==n.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=n;const i=new Mr(Sr,1,t,e);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new mn(1,0,0)),this.add(i);const r=new Mr(Sr,1,t,e);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new mn(-1,0,0)),this.add(r);const a=new Mr(Sr,1,t,e);a.layers=this.layers,a.up.set(0,0,1),a.lookAt(new mn(0,1,0)),this.add(a);const s=new Mr(Sr,1,t,e);s.layers=this.layers,s.up.set(0,0,-1),s.lookAt(new mn(0,-1,0)),this.add(s);const o=new Mr(Sr,1,t,e);o.layers=this.layers,o.up.set(0,-1,0),o.lookAt(new mn(0,0,1)),this.add(o);const l=new Mr(Sr,1,t,e);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new mn(0,0,-1)),this.add(l)}update(t,e){null===this.parent&&this.updateMatrixWorld();const n=this.renderTarget,[i,r,a,s,o,l]=this.children,c=t.xr.enabled,h=t.getRenderTarget();t.xr.enabled=!1;const u=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0),t.render(e,i),t.setRenderTarget(n,1),t.render(e,r),t.setRenderTarget(n,2),t.render(e,a),t.setRenderTarget(n,3),t.render(e,s),t.setRenderTarget(n,4),t.render(e,o),n.texture.generateMipmaps=u,t.setRenderTarget(n,5),t.render(e,l),t.setRenderTarget(h),t.xr.enabled=c}}class Er extends cn{constructor(t,e,n,i,r,a,s,o,l,c){super(t=void 0!==t?t:[],e=void 0!==e?e:Q,n,i,r,a,s,o,l,c),this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}Er.prototype.isCubeTexture=!0;class Ar extends qn{constructor(t,e,n){Number.isInteger(e)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),e=n),super(t,t,e),e=e||{},this.texture=new Er(void 0,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==e.generateMipmaps&&e.generateMipmaps,this.texture.minFilter=void 0!==e.minFilter?e.minFilter:ct,this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.format=Tt,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={tEquirect:{value:null}},i="\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",r="\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t",a=new xr(5,5,5),s=new br({name:"CubemapFromEquirect",uniforms:vr(n),vertexShader:i,fragmentShader:r,side:h,blending:q});s.uniforms.tEquirect.value=e;const o=new fr(a,s),l=e.minFilter;return e.minFilter===ut&&(e.minFilter=ct),new Tr(1,10,this).update(t,o),e.minFilter=l,o.geometry.dispose(),o.material.dispose(),this}clear(t,e,n,i){const r=t.getRenderTarget();for(let r=0;r<6;r++)t.setRenderTarget(this,r),t.clear(e,n,i);t.setRenderTarget(r)}}Ar.prototype.isWebGLCubeRenderTarget=!0;const Lr=new mn,Rr=new mn,Cr=new nn;class Pr{constructor(t=new mn(1,0,0),e=0){this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const i=Lr.subVectors(n,e).cross(Rr.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,e){const n=t.delta(Lr),i=this.normal.dot(n);if(0===i)return 0===this.distanceToPoint(t.start)?e.copy(t.start):null;const r=-(t.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:e.copy(n).multiplyScalar(r).add(t.start)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||Cr.getNormalMatrix(t),i=this.coplanarPoint(Lr).applyMatrix4(t),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return(new this.constructor).copy(this)}}Pr.prototype.isPlane=!0;const zr=new On,Ir=new mn;class Dr{constructor(t=new Pr,e=new Pr,n=new Pr,i=new Pr,r=new Pr,a=new Pr){this.planes=[t,e,n,i,r,a]}set(t,e,n,i,r,a){const s=this.planes;return s[0].copy(t),s[1].copy(e),s[2].copy(n),s[3].copy(i),s[4].copy(r),s[5].copy(a),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t){const e=this.planes,n=t.elements,i=n[0],r=n[1],a=n[2],s=n[3],o=n[4],l=n[5],c=n[6],h=n[7],u=n[8],q=n[9],d=n[10],p=n[11],m=n[12],f=n[13],g=n[14],x=n[15];return e[0].setComponents(s-i,h-o,p-u,x-m).normalize(),e[1].setComponents(s+i,h+o,p+u,x+m).normalize(),e[2].setComponents(s+r,h+l,p+q,x+f).normalize(),e[3].setComponents(s-r,h-l,p-q,x-f).normalize(),e[4].setComponents(s-a,h-c,p-d,x-g).normalize(),e[5].setComponents(s+a,h+c,p+d,x+g).normalize(),this}intersectsObject(t){const e=t.geometry;return null===e.boundingSphere&&e.computeBoundingSphere(),zr.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(zr)}intersectsSprite(t){return zr.center.set(0,0,0),zr.radius=.7071067811865476,zr.applyMatrix4(t.matrixWorld),this.intersectsSphere(zr)}intersectsSphere(t){const e=this.planes,n=t.center,i=-t.radius;for(let t=0;t<6;t++)if(e[t].distanceToPoint(n)<i)return!1;return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const i=e[n];if(Ir.x=i.normal.x>0?t.max.x:t.min.x,Ir.y=i.normal.y>0?t.max.y:t.min.y,Ir.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(Ir)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function Nr(){let t=null,e=!1,n=null,i=null;function r(e,a){n(e,a),i=t.requestAnimationFrame(r)}return{start:function(){!0!==e&&null!==n&&(i=t.requestAnimationFrame(r),e=!0)},stop:function(){t.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(t){n=t},setContext:function(e){t=e}}}function Or(t,e){const n=e.isWebGL2,i=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),i.get(t)},remove:function(e){e.isInterleavedBufferAttribute&&(e=e.data);const n=i.get(e);n&&(t.deleteBuffer(n.buffer),i.delete(e))},update:function(e,r){if(e.isGLBufferAttribute){const t=i.get(e);return void((!t||t.version<e.version)&&i.set(e,{buffer:e.buffer,type:e.type,bytesPerElement:e.elementSize,version:e.version}))}e.isInterleavedBufferAttribute&&(e=e.data);const a=i.get(e);void 0===a?i.set(e,function(e,i){const r=e.array,a=e.usage,s=t.createBuffer();t.bindBuffer(i,s),t.bufferData(i,r,a),e.onUploadCallback();let o=5126;return r instanceof Float32Array?o=5126:r instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):r instanceof Uint16Array?e.isFloat16BufferAttribute?n?o=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):o=5123:r instanceof Int16Array?o=5122:r instanceof Uint32Array?o=5125:r instanceof Int32Array?o=5124:r instanceof Int8Array?o=5120:(r instanceof Uint8Array||r instanceof Uint8ClampedArray)&&(o=5121),{buffer:s,type:o,bytesPerElement:r.BYTES_PER_ELEMENT,version:e.version}}(e,r)):a.version<e.version&&(function(e,i,r){const a=i.array,s=i.updateRange;t.bindBuffer(r,e),-1===s.count?t.bufferSubData(r,0,a):(n?t.bufferSubData(r,s.offset*a.BYTES_PER_ELEMENT,a,s.offset,s.count):t.bufferSubData(r,s.offset*a.BYTES_PER_ELEMENT,a.subarray(s.offset,s.offset+s.count)),s.count=-1)}(a.buffer,e,r),a.version=e.version)}}}class Br extends Ki{constructor(t=1,e=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i};const r=t/2,a=e/2,s=Math.floor(n),o=Math.floor(i),l=s+1,c=o+1,h=t/s,u=e/o,q=[],d=[],p=[],m=[];for(let t=0;t<c;t++){const e=t*u-a;for(let n=0;n<l;n++){const i=n*h-r;d.push(i,-e,0),p.push(0,0,1),m.push(n/s),m.push(1-t/o)}}for(let t=0;t<o;t++)for(let e=0;e<s;e++){const n=e+l*t,i=e+l*(t+1),r=e+1+l*(t+1),a=e+1+l*t;q.push(n,i,a),q.push(i,r,a)}this.setIndex(q),this.setAttribute("position",new Vi(d,3)),this.setAttribute("normal",new Vi(p,3)),this.setAttribute("uv",new Vi(m,2))}static fromJSON(t){return new Br(t.width,t.height,t.widthSegments,t.heightSegments)}}const Fr={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenTint, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenTint * ( D * V );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\t\tvec2 f = fract( uv );\n\t\tuv += 0.5 - f;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x += texelSize;\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.y += texelSize;\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x -= texelSize;\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tvec3 tm = mix( tl, tr, f.x );\n\t\tvec3 bm = mix( bl, br, f.x );\n\t\treturn mix( tm, bm, f.y );\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 reflectVec;\n\t\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\t\treflectVec = reflect( - viewDir, normal );\n\t\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\t#else\n\t\t\t\treflectVec = refract( - viewDir, normal, refractionRatio );\n\t\t\t#endif\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tlightMapIrradiance *= PI;\n\t#endif\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#else\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\t#ifdef SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularTintFactor = specularTint;\n\t\t#ifdef USE_SPECULARINTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n\t\t#endif\n\t\t#ifdef USE_SPECULARTINTMAP\n\t\t\tspecularTintFactor *= specularTintMapTexelToLinear( texture2D( specularTintMap, vUv ) ).rgb;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularTintFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularTintFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenTint = sheenTint;\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenTint;\n\t\tfloat sheenRoughness;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\tvec3 FssEss = specularColor * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenTint, material.sheenRoughness );\n\t#endif\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] > 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1, 2 ) * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform vec2 morphTargetsTextureSize;\n\t\tvec3 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset, const in int stride ) {\n\t\t\tfloat texelIndex = float( vertexIndex * stride + offset );\n\t\t\tfloat y = floor( texelIndex / morphTargetsTextureSize.x );\n\t\t\tfloat x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tvec3 morphUV = vec3( ( x + 0.5 ) / morphTargetsTextureSize.x, y / morphTargetsTextureSize.y, morphTargetIndex );\n\t\t\treturn texture( morphTargetsTexture, morphUV ).xyz;\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\t#ifndef USE_MORPHNORMALS\n\t\t\t\tif ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 1 ) * morphTargetInfluences[ i ];\n\t\t\t#else\n\t\t\t\tif ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 2 ) * morphTargetInfluences[ i ];\n\t\t\t#endif\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tfloat transmissionAlpha = 1.0;\n\tfloat transmissionFactor = transmission;\n\tfloat thicknessFactor = thickness;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n\t\tattenuationTint, attenuationDistance );\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\n\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationTint;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tvec3 getVolumeTransmissionRay( vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( float roughness, float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( vec2 fragCoord, float roughness, float ior ) {\n\t\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#else\n\t\t\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#endif\n\t}\n\tvec3 applyVolumeAttenuation( vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance ) {\n\t\tif ( attenuationDistance == 0.0 ) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( vec3 n, vec3 v, float roughness, vec3 diffuseColor, vec3 specularColor, float specularF90,\n\t\tvec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness,\n\t\tvec3 attenuationColor, float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n\t}\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularTint;\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\t#ifdef USE_SPECULARTINTMAP\n\t\tuniform sampler2D specularTintMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenTint;\n\tuniform float sheenRoughness;\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - clearcoat * Fcc ) + clearcoatSpecular * clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}"},Ur={common:{diffuse:{value:new Oi(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new nn},uv2Transform:{value:new nn},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new en(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Oi(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Oi(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new nn}},sprite:{diffuse:{value:new Oi(16777215)},opacity:{value:1},center:{value:new en(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new nn}}},Hr={basic:{uniforms:yr([Ur.common,Ur.specularmap,Ur.envmap,Ur.aomap,Ur.lightmap,Ur.fog]),vertexShader:Fr.meshbasic_vert,fragmentShader:Fr.meshbasic_frag},lambert:{uniforms:yr([Ur.common,Ur.specularmap,Ur.envmap,Ur.aomap,Ur.lightmap,Ur.emissivemap,Ur.fog,Ur.lights,{emissive:{value:new Oi(0)}}]),vertexShader:Fr.meshlambert_vert,fragmentShader:Fr.meshlambert_frag},phong:{uniforms:yr([Ur.common,Ur.specularmap,Ur.envmap,Ur.aomap,Ur.lightmap,Ur.emissivemap,Ur.bumpmap,Ur.normalmap,Ur.displacementmap,Ur.fog,Ur.lights,{emissive:{value:new Oi(0)},specular:{value:new Oi(1118481)},shininess:{value:30}}]),vertexShader:Fr.meshphong_vert,fragmentShader:Fr.meshphong_frag},standard:{uniforms:yr([Ur.common,Ur.envmap,Ur.aomap,Ur.lightmap,Ur.emissivemap,Ur.bumpmap,Ur.normalmap,Ur.displacementmap,Ur.roughnessmap,Ur.metalnessmap,Ur.fog,Ur.lights,{emissive:{value:new Oi(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Fr.meshphysical_vert,fragmentShader:Fr.meshphysical_frag},toon:{uniforms:yr([Ur.common,Ur.aomap,Ur.lightmap,Ur.emissivemap,Ur.bumpmap,Ur.normalmap,Ur.displacementmap,Ur.gradientmap,Ur.fog,Ur.lights,{emissive:{value:new Oi(0)}}]),vertexShader:Fr.meshtoon_vert,fragmentShader:Fr.meshtoon_frag},matcap:{uniforms:yr([Ur.common,Ur.bumpmap,Ur.normalmap,Ur.displacementmap,Ur.fog,{matcap:{value:null}}]),vertexShader:Fr.meshmatcap_vert,fragmentShader:Fr.meshmatcap_frag},points:{uniforms:yr([Ur.points,Ur.fog]),vertexShader:Fr.points_vert,fragmentShader:Fr.points_frag},dashed:{uniforms:yr([Ur.common,Ur.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Fr.linedashed_vert,fragmentShader:Fr.linedashed_frag},depth:{uniforms:yr([Ur.common,Ur.displacementmap]),vertexShader:Fr.depth_vert,fragmentShader:Fr.depth_frag},normal:{uniforms:yr([Ur.common,Ur.bumpmap,Ur.normalmap,Ur.displacementmap,{opacity:{value:1}}]),vertexShader:Fr.meshnormal_vert,fragmentShader:Fr.meshnormal_frag},sprite:{uniforms:yr([Ur.sprite,Ur.fog]),vertexShader:Fr.sprite_vert,fragmentShader:Fr.sprite_frag},background:{uniforms:{uvTransform:{value:new nn},t2D:{value:null}},vertexShader:Fr.background_vert,fragmentShader:Fr.background_frag},cube:{uniforms:yr([Ur.envmap,{opacity:{value:1}}]),vertexShader:Fr.cube_vert,fragmentShader:Fr.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Fr.equirect_vert,fragmentShader:Fr.equirect_frag},distanceRGBA:{uniforms:yr([Ur.common,Ur.displacementmap,{referencePosition:{value:new mn},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Fr.distanceRGBA_vert,fragmentShader:Fr.distanceRGBA_frag},shadow:{uniforms:yr([Ur.lights,Ur.fog,{color:{value:new Oi(0)},opacity:{value:1}}]),vertexShader:Fr.shadow_vert,fragmentShader:Fr.shadow_frag}};function kr(t,e,n,i,r){const a=new Oi(0);let s,o,l=0,u=null,q=0,d=null;function p(t,e){n.buffers.color.setClear(t.r,t.g,t.b,e,r)}return{getClearColor:function(){return a},setClearColor:function(t,e=1){a.set(t),l=e,p(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(t){l=t,p(a,l)},render:function(n,r){let m=!1,f=!0===r.isScene?r.background:null;f&&f.isTexture&&(f=e.get(f));const g=t.xr,x=g.getSession&&g.getSession();x&&"additive"===x.environmentBlendMode&&(f=null),null===f?p(a,l):f&&f.isColor&&(p(f,1),m=!0),(t.autoClear||m)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),f&&(f.isCubeTexture||f.mapping===et)?(void 0===o&&(o=new fr(new xr(1,1,1),new br({name:"BackgroundCubeMaterial",uniforms:vr(Hr.cube.uniforms),vertexShader:Hr.cube.vertexShader,fragmentShader:Hr.cube.fragmentShader,side:h,depthTest:!1,depthWrite:!1,fog:!1})),o.geometry.deleteAttribute("normal"),o.geometry.deleteAttribute("uv"),o.onBeforeRender=function(t,e,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(o.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(o)),o.material.uniforms.envMap.value=f,o.material.uniforms.flipEnvMap.value=f.isCubeTexture&&!1===f.isRenderTargetTexture?-1:1,u===f&&q===f.version&&d===t.toneMapping||(o.material.needsUpdate=!0,u=f,q=f.version,d=t.toneMapping),n.unshift(o,o.geometry,o.material,0,0,null)):f&&f.isTexture&&(void 0===s&&(s=new fr(new Br(2,2),new br({name:"BackgroundMaterial",uniforms:vr(Hr.background.uniforms),vertexShader:Hr.background.vertexShader,fragmentShader:Hr.background.fragmentShader,side:c,depthTest:!1,depthWrite:!1,fog:!1})),s.geometry.deleteAttribute("normal"),Object.defineProperty(s.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(s)),s.material.uniforms.t2D.value=f,!0===f.matrixAutoUpdate&&f.updateMatrix(),s.material.uniforms.uvTransform.value.copy(f.matrix),u===f&&q===f.version&&d===t.toneMapping||(s.material.needsUpdate=!0,u=f,q=f.version,d=t.toneMapping),n.unshift(s,s.geometry,s.material,0,0,null))}}}function Gr(t,e,n,i){const r=t.getParameter(34921),a=i.isWebGL2?null:e.get("OES_vertex_array_object"),s=i.isWebGL2||null!==a,o={},l=q(null);let c=l;function h(e){return i.isWebGL2?t.bindVertexArray(e):a.bindVertexArrayOES(e)}function u(e){return i.isWebGL2?t.deleteVertexArray(e):a.deleteVertexArrayOES(e)}function q(t){const e=[],n=[],i=[];for(let t=0;t<r;t++)e[t]=0,n[t]=0,i[t]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:e,enabledAttributes:n,attributeDivisors:i,object:t,attributes:{},index:null}}function d(){const t=c.newAttributes;for(let e=0,n=t.length;e<n;e++)t[e]=0}function p(t){m(t,0)}function m(n,r){const a=c.newAttributes,s=c.enabledAttributes,o=c.attributeDivisors;a[n]=1,0===s[n]&&(t.enableVertexAttribArray(n),s[n]=1),o[n]!==r&&((i.isWebGL2?t:e.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,r),o[n]=r)}function f(){const e=c.newAttributes,n=c.enabledAttributes;for(let i=0,r=n.length;i<r;i++)n[i]!==e[i]&&(t.disableVertexAttribArray(i),n[i]=0)}function g(e,n,r,a,s,o){!0!==i.isWebGL2||5124!==r&&5125!==r?t.vertexAttribPointer(e,n,r,a,s,o):t.vertexAttribIPointer(e,n,r,s,o)}function x(){v(),c!==l&&(c=l,h(c.object))}function v(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:function(r,l,u,x,v){let y=!1;if(s){const e=function(e,n,r){const s=!0===r.wireframe;let l=o[e.id];void 0===l&&(l={},o[e.id]=l);let c=l[n.id];void 0===c&&(c={},l[n.id]=c);let h=c[s];return void 0===h&&(h=q(i.isWebGL2?t.createVertexArray():a.createVertexArrayOES()),c[s]=h),h}(x,u,l);c!==e&&(c=e,h(c.object)),y=function(t,e){const n=c.attributes,i=t.attributes;let r=0;for(const t in i){const e=n[t],a=i[t];if(void 0===e)return!0;if(e.attribute!==a)return!0;if(e.data!==a.data)return!0;r++}return c.attributesNum!==r||c.index!==e}(x,v),y&&function(t,e){const n={},i=t.attributes;let r=0;for(const t in i){const e=i[t],a={};a.attribute=e,e.data&&(a.data=e.data),n[t]=a,r++}c.attributes=n,c.attributesNum=r,c.index=e}(x,v)}else{const t=!0===l.wireframe;c.geometry===x.id&&c.program===u.id&&c.wireframe===t||(c.geometry=x.id,c.program=u.id,c.wireframe=t,y=!0)}!0===r.isInstancedMesh&&(y=!0),null!==v&&n.update(v,34963),y&&(function(r,a,s,o){if(!1===i.isWebGL2&&(r.isInstancedMesh||o.isInstancedBufferGeometry)&&null===e.get("ANGLE_instanced_arrays"))return;d();const l=o.attributes,c=s.getAttributes(),h=a.defaultAttributeValues;for(const e in c){const i=c[e];if(i.location>=0){let a=l[e];if(void 0===a&&("instanceMatrix"===e&&r.instanceMatrix&&(a=r.instanceMatrix),"instanceColor"===e&&r.instanceColor&&(a=r.instanceColor)),void 0!==a){const e=a.normalized,s=a.itemSize,l=n.get(a);if(void 0===l)continue;const c=l.buffer,h=l.type,u=l.bytesPerElement;if(a.isInterleavedBufferAttribute){const n=a.data,l=n.stride,q=a.offset;if(n&&n.isInstancedInterleavedBuffer){for(let t=0;t<i.locationSize;t++)m(i.location+t,n.meshPerAttribute);!0!==r.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=n.meshPerAttribute*n.count)}else for(let t=0;t<i.locationSize;t++)p(i.location+t);t.bindBuffer(34962,c);for(let t=0;t<i.locationSize;t++)g(i.location+t,s/i.locationSize,h,e,l*u,(q+s/i.locationSize*t)*u)}else{if(a.isInstancedBufferAttribute){for(let t=0;t<i.locationSize;t++)m(i.location+t,a.meshPerAttribute);!0!==r.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=a.meshPerAttribute*a.count)}else for(let t=0;t<i.locationSize;t++)p(i.location+t);t.bindBuffer(34962,c);for(let t=0;t<i.locationSize;t++)g(i.location+t,s/i.locationSize,h,e,s*u,s/i.locationSize*t*u)}}else if(void 0!==h){const n=h[e];if(void 0!==n)switch(n.length){case 2:t.vertexAttrib2fv(i.location,n);break;case 3:t.vertexAttrib3fv(i.location,n);break;case 4:t.vertexAttrib4fv(i.location,n);break;default:t.vertexAttrib1fv(i.location,n)}}}}f()}(r,l,u,x),null!==v&&t.bindBuffer(34963,n.get(v).buffer))},reset:x,resetDefaultState:v,dispose:function(){x();for(const t in o){const e=o[t];for(const t in e){const n=e[t];for(const t in n)u(n[t].object),delete n[t];delete e[t]}delete o[t]}},releaseStatesOfGeometry:function(t){if(void 0===o[t.id])return;const e=o[t.id];for(const t in e){const n=e[t];for(const t in n)u(n[t].object),delete n[t];delete e[t]}delete o[t.id]},releaseStatesOfProgram:function(t){for(const e in o){const n=o[e];if(void 0===n[t.id])continue;const i=n[t.id];for(const t in i)u(i[t].object),delete i[t];delete n[t.id]}},initAttributes:d,enableAttribute:p,disableUnusedAttributes:f}}function Vr(t,e,n,i){const r=i.isWebGL2;let a;this.setMode=function(t){a=t},this.render=function(e,i){t.drawArrays(a,e,i),n.update(i,a,1)},this.renderInstances=function(i,s,o){if(0===o)return;let l,c;if(r)l=t,c="drawArraysInstanced";else if(l=e.get("ANGLE_instanced_arrays"),c="drawArraysInstancedANGLE",null===l)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");l[c](a,i,s,o),n.update(s,a,o)}}function Wr(t,e,n){let i;function r(e){if("highp"===e){if(t.getShaderPrecisionFormat(35633,36338).precision>0&&t.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(35633,36337).precision>0&&t.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const a="undefined"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&t instanceof WebGL2ComputeRenderingContext;let s=void 0!==n.precision?n.precision:"highp";const o=r(s);o!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",o,"instead."),s=o);const l=a||e.has("WEBGL_draw_buffers"),c=!0===n.logarithmicDepthBuffer,h=t.getParameter(34930),u=t.getParameter(35660),q=t.getParameter(3379),d=t.getParameter(34076),p=t.getParameter(34921),m=t.getParameter(36347),f=t.getParameter(36348),g=t.getParameter(36349),x=u>0,v=a||e.has("OES_texture_float");return{isWebGL2:a,drawBuffers:l,getMaxAnisotropy:function(){if(void 0!==i)return i;if(!0===e.has("EXT_texture_filter_anisotropic")){const n=e.get("EXT_texture_filter_anisotropic");i=t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i},getMaxPrecision:r,precision:s,logarithmicDepthBuffer:c,maxTextures:h,maxVertexTextures:u,maxTextureSize:q,maxCubemapSize:d,maxAttributes:p,maxVertexUniforms:m,maxVaryings:f,maxFragmentUniforms:g,vertexTextures:x,floatFragmentTextures:v,floatVertexTextures:x&&v,maxSamples:a?t.getParameter(36183):0}}function jr(t){const e=this;let n=null,i=0,r=!1,a=!1;const s=new Pr,o=new nn,l={value:null,needsUpdate:!1};function c(){l.value!==n&&(l.value=n,l.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function h(t,n,i,r){const a=null!==t?t.length:0;let c=null;if(0!==a){if(c=l.value,!0!==r||null===c){const e=i+4*a,r=n.matrixWorldInverse;o.getNormalMatrix(r),(null===c||c.length<e)&&(c=new Float32Array(e));for(let e=0,n=i;e!==a;++e,n+=4)s.copy(t[e]).applyMatrix4(r,o),s.normal.toArray(c,n),c[n+3]=s.constant}l.value=c,l.needsUpdate=!0}return e.numPlanes=a,e.numIntersection=0,c}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(t,e,a){const s=0!==t.length||e||0!==i||r;return r=e,n=h(t,a,0),i=t.length,s},this.beginShadows=function(){a=!0,h(null)},this.endShadows=function(){a=!1,c()},this.setState=function(e,s,o){const u=e.clippingPlanes,q=e.clipIntersection,d=e.clipShadows,p=t.get(e);if(!r||null===u||0===u.length||a&&!d)a?h(null):c();else{const t=a?0:i,e=4*t;let r=p.clippingState||null;l.value=r,r=h(u,s,e,o);for(let t=0;t!==e;++t)r[t]=n[t];p.clippingState=r,this.numIntersection=q?this.numPlanes:0,this.numPlanes+=t}}}function Xr(t){let e=new WeakMap;function n(t,e){return e===$?t.mapping=Q:e===tt&&(t.mapping=K),t}function i(t){const n=t.target;n.removeEventListener("dispose",i);const r=e.get(n);void 0!==r&&(e.delete(n),r.dispose())}return{get:function(r){if(r&&r.isTexture&&!1===r.isRenderTargetTexture){const a=r.mapping;if(a===$||a===tt){if(e.has(r))return n(e.get(r).texture,r.mapping);{const a=r.image;if(a&&a.height>0){const s=t.getRenderTarget(),o=new Ar(a.height/2);return o.fromEquirectangularTexture(t,r),e.set(r,o),t.setRenderTarget(s),r.addEventListener("dispose",i),n(o.texture,r.mapping)}return null}}}return r},dispose:function(){e=new WeakMap}}}Hr.physical={uniforms:yr([Hr.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new en(1,1)},clearcoatNormalMap:{value:null},sheen:{value:0},sheenTint:{value:new Oi(0)},sheenRoughness:{value:0},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new en},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationTint:{value:new Oi(0)},specularIntensity:{value:0},specularIntensityMap:{value:null},specularTint:{value:new Oi(1,1,1)},specularTintMap:{value:null}}]),vertexShader:Fr.meshphysical_vert,fragmentShader:Fr.meshphysical_frag};class Yr extends wr{constructor(t=-1,e=1,n=1,i=-1,r=.1,a=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=r,this.far=a,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this}setViewOffset(t,e,n,i,r,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-t,a=n+t,s=i+e,o=i-e;if(null!==this.view&&this.view.enabled){const t=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=t*this.view.offsetX,a=r+t*this.view.width,s-=e*this.view.offsetY,o=s-e*this.view.height}this.projectionMatrix.makeOrthographic(r,a,s,o,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}Yr.prototype.isOrthographicCamera=!0;class Zr extends br{constructor(t){super(t),this.type="RawShaderMaterial"}}Zr.prototype.isRawShaderMaterial=!0;const Jr=Math.pow(2,8),Qr=[.125,.215,.35,.446,.526,.582],Kr=5+Qr.length,$r={[Re]:0,[Ce]:1,[ze]:2,[De]:3,[Ne]:4,[Oe]:5,[Pe]:6},ta=new Yr,{_lodPlanes:ea,_sizeLods:na,_sigmas:ia}=ua(),ra=new Oi;let aa=null;const sa=(1+Math.sqrt(5))/2,oa=1/sa,la=[new mn(1,1,1),new mn(-1,1,1),new mn(1,1,-1),new mn(-1,1,-1),new mn(0,sa,oa),new mn(0,sa,-oa),new mn(oa,0,sa),new mn(-oa,0,sa),new mn(sa,oa,0),new mn(-sa,oa,0)];class ca{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._blurMaterial=function(t){const e=new Float32Array(20),n=new mn(0,1,0);return new Zr({name:"SphericalGaussianBlur",defines:{n:20},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:e},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:n},inputEncoding:{value:$r[Re]},outputEncoding:{value:$r[Re]}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t",blending:q,depthTest:!1,depthWrite:!1})}(),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,i=100){aa=this._renderer.getRenderTarget();const r=this._allocateTargets();return this._sceneToCubeUV(t,n,i,r),e>0&&this._blur(r,0,0,e),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(t){return this._fromTexture(t)}fromCubemap(t){return this._fromTexture(t)}compileCubemapShader(){null===this._cubemapShader&&(this._cubemapShader=ma(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){null===this._equirectShader&&(this._equirectShader=pa(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),null!==this._cubemapShader&&this._cubemapShader.dispose(),null!==this._equirectShader&&this._equirectShader.dispose();for(let t=0;t<ea.length;t++)ea[t].dispose()}_cleanup(t){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(aa),t.scissorTest=!1,da(t,0,0,t.width,t.height)}_fromTexture(t){aa=this._renderer.getRenderTarget();const e=this._allocateTargets(t);return this._textureToCubeUV(t,e),this._applyPMREM(e),this._cleanup(e),e}_allocateTargets(t){const e={magFilter:st,minFilter:st,generateMipmaps:!1,type:qt,format:Lt,encoding:ha(t)?t.encoding:ze,depthBuffer:!1},n=qa(e);return n.depthBuffer=!t,this._pingPongRenderTarget=qa(e),n}_compileMaterial(t){const e=new fr(ea[0],t);this._renderer.compile(e,ta)}_sceneToCubeUV(t,e,n,i){const r=new Mr(90,1,e,n),a=[1,-1,1,1,1,1],s=[1,1,1,-1,-1,-1],o=this._renderer,l=o.autoClear,c=o.outputEncoding,u=o.toneMapping;o.getClearColor(ra),o.toneMapping=W,o.outputEncoding=Re,o.autoClear=!1;const q=new Bi({name:"PMREM.Background",side:h,depthWrite:!1,depthTest:!1}),d=new fr(new xr,q);let p=!1;const m=t.background;m?m.isColor&&(q.color.copy(m),t.background=null,p=!0):(q.color.copy(ra),p=!0);for(let e=0;e<6;e++){const n=e%3;0==n?(r.up.set(0,a[e],0),r.lookAt(s[e],0,0)):1==n?(r.up.set(0,0,a[e]),r.lookAt(0,s[e],0)):(r.up.set(0,a[e],0),r.lookAt(0,0,s[e])),da(i,n*Jr,e>2?Jr:0,Jr,Jr),o.setRenderTarget(i),p&&o.render(d,r),o.render(t,r)}d.geometry.dispose(),d.material.dispose(),o.toneMapping=u,o.outputEncoding=c,o.autoClear=l,t.background=m}_setEncoding(t,e){!0===this._renderer.capabilities.isWebGL2&&e.format===Tt&&e.type===qt&&e.encoding===Ce?t.value=$r[Re]:t.value=$r[e.encoding]}_textureToCubeUV(t,e){const n=this._renderer;t.isCubeTexture?null==this._cubemapShader&&(this._cubemapShader=ma()):null==this._equirectShader&&(this._equirectShader=pa());const i=t.isCubeTexture?this._cubemapShader:this._equirectShader,r=new fr(ea[0],i),a=i.uniforms;a.envMap.value=t,t.isCubeTexture||a.texelSize.value.set(1/t.image.width,1/t.image.height),this._setEncoding(a.inputEncoding,t),this._setEncoding(a.outputEncoding,e.texture),da(e,0,0,3*Jr,2*Jr),n.setRenderTarget(e),n.render(r,ta)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;for(let e=1;e<Kr;e++){const n=Math.sqrt(ia[e]*ia[e]-ia[e-1]*ia[e-1]),i=la[(e-1)%la.length];this._blur(t,e-1,e,n,i)}e.autoClear=n}_blur(t,e,n,i,r){const a=this._pingPongRenderTarget;this._halfBlur(t,a,e,n,i,"latitudinal",r),this._halfBlur(a,t,n,n,i,"longitudinal",r)}_halfBlur(t,e,n,i,r,a,s){const o=this._renderer,l=this._blurMaterial;"latitudinal"!==a&&"longitudinal"!==a&&console.error("blur direction must be either latitudinal or longitudinal!");const c=new fr(ea[i],l),h=l.uniforms,u=na[n]-1,q=isFinite(r)?Math.PI/(2*u):2*Math.PI/39,d=r/q,p=isFinite(r)?1+Math.floor(3*d):20;p>20&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${p} samples when the maximum is set to 20`);const m=[];let f=0;for(let t=0;t<20;++t){const e=t/d,n=Math.exp(-e*e/2);m.push(n),0==t?f+=n:t<p&&(f+=2*n)}for(let t=0;t<m.length;t++)m[t]=m[t]/f;h.envMap.value=t.texture,h.samples.value=p,h.weights.value=m,h.latitudinal.value="latitudinal"===a,s&&(h.poleAxis.value=s),h.dTheta.value=q,h.mipInt.value=8-n,this._setEncoding(h.inputEncoding,t.texture),this._setEncoding(h.outputEncoding,t.texture);const g=na[i];da(e,3*Math.max(0,Jr-2*g),(0===i?0:2*Jr)+2*g*(i>4?i-8+4:0),3*g,2*g),o.setRenderTarget(e),o.render(c,ta)}}function ha(t){return void 0!==t&&t.type===qt&&(t.encoding===Re||t.encoding===Ce||t.encoding===Pe)}function ua(){const t=[],e=[],n=[];let i=8;for(let r=0;r<Kr;r++){const a=Math.pow(2,i);e.push(a);let s=1/a;r>4?s=Qr[r-8+4-1]:0==r&&(s=0),n.push(s);const o=1/(a-1),l=-o/2,c=1+o/2,h=[l,l,c,l,c,c,l,l,c,c,l,c],u=6,q=6,d=3,p=2,m=1,f=new Float32Array(d*q*u),g=new Float32Array(p*q*u),x=new Float32Array(m*q*u);for(let t=0;t<u;t++){const e=t%3*2/3-1,n=t>2?0:-1,i=[e,n,0,e+2/3,n,0,e+2/3,n+1,0,e,n,0,e+2/3,n+1,0,e,n+1,0];f.set(i,d*q*t),g.set(h,p*q*t);const r=[t,t,t,t,t,t];x.set(r,m*q*t)}const v=new Ki;v.setAttribute("position",new Hi(f,d)),v.setAttribute("uv",new Hi(g,p)),v.setAttribute("faceIndex",new Hi(x,m)),t.push(v),i>4&&i--}return{_lodPlanes:t,_sizeLods:e,_sigmas:n}}function qa(t){const e=new qn(3*Jr,3*Jr,t);return e.texture.mapping=et,e.texture.name="PMREM.cubeUv",e.scissorTest=!0,e}function da(t,e,n,i,r){t.viewport.set(e,n,i,r),t.scissor.set(e,n,i,r)}function pa(){const t=new en(1,1);return new Zr({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:t},inputEncoding:{value:$r[Re]},outputEncoding:{value:$r[Re]}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\t\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\n\t\t\t\tuv -= f * texelSize;\n\t\t\t\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x += texelSize.x;\n\t\t\t\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.y += texelSize.y;\n\t\t\t\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x -= texelSize.x;\n\t\t\t\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t",blending:q,depthTest:!1,depthWrite:!1})}function ma(){return new Zr({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:$r[Re]},outputEncoding:{value:$r[Re]}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\t\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t",blending:q,depthTest:!1,depthWrite:!1})}function fa(t){let e=new WeakMap,n=null;function i(t){const n=t.target;n.removeEventListener("dispose",i);const r=e.get(n);void 0!==r&&(e.delete(n),r.dispose())}return{get:function(r){if(r&&r.isTexture&&!1===r.isRenderTargetTexture){const a=r.mapping,s=a===$||a===tt,o=a===Q||a===K;if(s||o){if(e.has(r))return e.get(r).texture;{const a=r.image;if(s&&a&&a.height>0||o&&a&&function(t){let e=0;for(let n=0;n<6;n++)void 0!==t[n]&&e++;return 6===e}(a)){const a=t.getRenderTarget();null===n&&(n=new ca(t));const o=s?n.fromEquirectangular(r):n.fromCubemap(r);return e.set(r,o),t.setRenderTarget(a),r.addEventListener("dispose",i),o.texture}return null}}}return r},dispose:function(){e=new WeakMap,null!==n&&(n.dispose(),n=null)}}}function ga(t){const e={};function n(n){if(void 0!==e[n])return e[n];let i;switch(n){case"WEBGL_depth_texture":i=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=t.getExtension(n)}return e[n]=i,i}return{has:function(t){return null!==n(t)},init:function(t){t.isWebGL2?n("EXT_color_buffer_float"):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float")},get:function(t){const e=n(t);return null===e&&console.warn("THREE.WebGLRenderer: "+t+" extension not supported."),e}}}function xa(t,e,n,i){const r={},a=new WeakMap;function s(t){const o=t.target;null!==o.index&&e.remove(o.index);for(const t in o.attributes)e.remove(o.attributes[t]);o.removeEventListener("dispose",s),delete r[o.id];const l=a.get(o);l&&(e.remove(l),a.delete(o)),i.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,n.memory.geometries--}function o(t){const n=[],i=t.index,r=t.attributes.position;let s=0;if(null!==i){const t=i.array;s=i.version;for(let e=0,i=t.length;e<i;e+=3){const i=t[e+0],r=t[e+1],a=t[e+2];n.push(i,r,r,a,a,i)}}else{const t=r.array;s=r.version;for(let e=0,i=t.length/3-1;e<i;e+=3){const t=e+0,i=e+1,r=e+2;n.push(t,i,i,r,r,t)}}const o=new(rn(n)>65535?Gi:ki)(n,1);o.version=s;const l=a.get(t);l&&e.remove(l),a.set(t,o)}return{get:function(t,e){return!0===r[e.id]||(e.addEventListener("dispose",s),r[e.id]=!0,n.memory.geometries++),e},update:function(t){const n=t.attributes;for(const t in n)e.update(n[t],34962);const i=t.morphAttributes;for(const t in i){const n=i[t];for(let t=0,i=n.length;t<i;t++)e.update(n[t],34962)}},getWireframeAttribute:function(t){const e=a.get(t);if(e){const n=t.index;null!==n&&e.version<n.version&&o(t)}else o(t);return a.get(t)}}}function va(t,e,n,i){const r=i.isWebGL2;let a,s,o;this.setMode=function(t){a=t},this.setIndex=function(t){s=t.type,o=t.bytesPerElement},this.render=function(e,i){t.drawElements(a,i,s,e*o),n.update(i,a,1)},this.renderInstances=function(i,l,c){if(0===c)return;let h,u;if(r)h=t,u="drawElementsInstanced";else if(h=e.get("ANGLE_instanced_arrays"),u="drawElementsInstancedANGLE",null===h)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");h[u](a,l,s,i*o,c),n.update(l,a,c)}}function ya(t){const e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(t,n,i){switch(e.calls++,n){case 4:e.triangles+=i*(t/3);break;case 1:e.lines+=i*(t/2);break;case 3:e.lines+=i*(t-1);break;case 2:e.lines+=i*t;break;case 0:e.points+=i*t;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",n)}}}}class _a extends cn{constructor(t=null,e=1,n=1,i=1){super(null),this.image={data:t,width:e,height:n,depth:i},this.magFilter=st,this.minFilter=st,this.wrapR=rt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}function ba(t,e){return t[0]-e[0]}function wa(t,e){return Math.abs(e[1])-Math.abs(t[1])}function Ma(t,e){let n=1;const i=e.isInterleavedBufferAttribute?e.data.array:e.array;i instanceof Int8Array?n=127:i instanceof Int16Array?n=32767:i instanceof Int32Array?n=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",i),t.divideScalar(n)}function Sa(t,e,n){const i={},r=new Float32Array(8),a=new WeakMap,s=new mn,o=[];for(let t=0;t<8;t++)o[t]=[t,0];return{update:function(l,c,h,u){const q=l.morphTargetInfluences;if(!0===e.isWebGL2){const i=c.morphAttributes.position.length;let r=a.get(c);if(void 0===r||r.count!==i){void 0!==r&&r.texture.dispose();const t=void 0!==c.morphAttributes.normal,n=c.morphAttributes.position,o=c.morphAttributes.normal||[],l=!0===t?2:1;let h=c.attributes.position.count*l,u=1;h>e.maxTextureSize&&(u=Math.ceil(h/e.maxTextureSize),h=e.maxTextureSize);const q=new Float32Array(h*u*4*i),d=new _a(q,h,u,i);d.format=Tt,d.type=xt;const p=4*l;for(let e=0;e<i;e++){const i=n[e],r=o[e],a=h*u*4*e;for(let e=0;e<i.count;e++){s.fromBufferAttribute(i,e),!0===i.normalized&&Ma(s,i);const n=e*p;q[a+n+0]=s.x,q[a+n+1]=s.y,q[a+n+2]=s.z,q[a+n+3]=0,!0===t&&(s.fromBufferAttribute(r,e),!0===r.normalized&&Ma(s,r),q[a+n+4]=s.x,q[a+n+5]=s.y,q[a+n+6]=s.z,q[a+n+7]=0)}}r={count:i,texture:d,size:new en(h,u)},a.set(c,r)}let o=0;for(let t=0;t<q.length;t++)o+=q[t];const l=c.morphTargetsRelative?1:1-o;u.getUniforms().setValue(t,"morphTargetBaseInfluence",l),u.getUniforms().setValue(t,"morphTargetInfluences",q),u.getUniforms().setValue(t,"morphTargetsTexture",r.texture,n),u.getUniforms().setValue(t,"morphTargetsTextureSize",r.size)}else{const e=void 0===q?0:q.length;let n=i[c.id];if(void 0===n||n.length!==e){n=[];for(let t=0;t<e;t++)n[t]=[t,0];i[c.id]=n}for(let t=0;t<e;t++){const e=n[t];e[0]=t,e[1]=q[t]}n.sort(wa);for(let t=0;t<8;t++)t<e&&n[t][1]?(o[t][0]=n[t][0],o[t][1]=n[t][1]):(o[t][0]=Number.MAX_SAFE_INTEGER,o[t][1]=0);o.sort(ba);const a=c.morphAttributes.position,s=c.morphAttributes.normal;let l=0;for(let t=0;t<8;t++){const e=o[t],n=e[0],i=e[1];n!==Number.MAX_SAFE_INTEGER&&i?(a&&c.getAttribute("morphTarget"+t)!==a[n]&&c.setAttribute("morphTarget"+t,a[n]),s&&c.getAttribute("morphNormal"+t)!==s[n]&&c.setAttribute("morphNormal"+t,s[n]),r[t]=i,l+=i):(a&&!0===c.hasAttribute("morphTarget"+t)&&c.deleteAttribute("morphTarget"+t),s&&!0===c.hasAttribute("morphNormal"+t)&&c.deleteAttribute("morphNormal"+t),r[t]=0)}const h=c.morphTargetsRelative?1:1-l;u.getUniforms().setValue(t,"morphTargetBaseInfluence",h),u.getUniforms().setValue(t,"morphTargetInfluences",r)}}}}function Ta(t,e,n,i){let r=new WeakMap;function a(t){const e=t.target;e.removeEventListener("dispose",a),n.remove(e.instanceMatrix),null!==e.instanceColor&&n.remove(e.instanceColor)}return{update:function(t){const s=i.render.frame,o=t.geometry,l=e.get(t,o);return r.get(l)!==s&&(e.update(l),r.set(l,s)),t.isInstancedMesh&&(!1===t.hasEventListener("dispose",a)&&t.addEventListener("dispose",a),n.update(t.instanceMatrix,34962),null!==t.instanceColor&&n.update(t.instanceColor,34962)),l},dispose:function(){r=new WeakMap}}}_a.prototype.isDataTexture2DArray=!0;class Ea extends cn{constructor(t=null,e=1,n=1,i=1){super(null),this.image={data:t,width:e,height:n,depth:i},this.magFilter=st,this.minFilter=st,this.wrapR=rt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}Ea.prototype.isDataTexture3D=!0;const Aa=new cn,La=new _a,Ra=new Ea,Ca=new Er,Pa=[],za=[],Ia=new Float32Array(16),Da=new Float32Array(9),Na=new Float32Array(4);function Oa(t,e,n){const i=t[0];if(i<=0||i>0)return t;const r=e*n;let a=Pa[r];if(void 0===a&&(a=new Float32Array(r),Pa[r]=a),0!==e){i.toArray(a,0);for(let i=1,r=0;i!==e;++i)r+=n,t[i].toArray(a,r)}return a}function Ba(t,e){if(t.length!==e.length)return!1;for(let n=0,i=t.length;n<i;n++)if(t[n]!==e[n])return!1;return!0}function Fa(t,e){for(let n=0,i=e.length;n<i;n++)t[n]=e[n]}function Ua(t,e){let n=za[e];void 0===n&&(n=new Int32Array(e),za[e]=n);for(let i=0;i!==e;++i)n[i]=t.allocateTextureUnit();return n}function Ha(t,e){const n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function ka(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(Ba(n,e))return;t.uniform2fv(this.addr,e),Fa(n,e)}}function Ga(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(void 0!==e.r)n[0]===e.r&&n[1]===e.g&&n[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(Ba(n,e))return;t.uniform3fv(this.addr,e),Fa(n,e)}}function Va(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(Ba(n,e))return;t.uniform4fv(this.addr,e),Fa(n,e)}}function Wa(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(Ba(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),Fa(n,e)}else{if(Ba(n,i))return;Na.set(i),t.uniformMatrix2fv(this.addr,!1,Na),Fa(n,i)}}function ja(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(Ba(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),Fa(n,e)}else{if(Ba(n,i))return;Da.set(i),t.uniformMatrix3fv(this.addr,!1,Da),Fa(n,i)}}function Xa(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(Ba(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),Fa(n,e)}else{if(Ba(n,i))return;Ia.set(i),t.uniformMatrix4fv(this.addr,!1,Ia),Fa(n,i)}}function Ya(t,e){const n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function Za(t,e){const n=this.cache;Ba(n,e)||(t.uniform2iv(this.addr,e),Fa(n,e))}function Ja(t,e){const n=this.cache;Ba(n,e)||(t.uniform3iv(this.addr,e),Fa(n,e))}function Qa(t,e){const n=this.cache;Ba(n,e)||(t.uniform4iv(this.addr,e),Fa(n,e))}function Ka(t,e){const n=this.cache;n[0]!==e&&(t.uniform1ui(this.addr,e),n[0]=e)}function $a(t,e){const n=this.cache;Ba(n,e)||(t.uniform2uiv(this.addr,e),Fa(n,e))}function ts(t,e){const n=this.cache;Ba(n,e)||(t.uniform3uiv(this.addr,e),Fa(n,e))}function es(t,e){const n=this.cache;Ba(n,e)||(t.uniform4uiv(this.addr,e),Fa(n,e))}function ns(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.safeSetTexture2D(e||Aa,r)}function is(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture3D(e||Ra,r)}function rs(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.safeSetTextureCube(e||Ca,r)}function as(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture2DArray(e||La,r)}function ss(t,e){t.uniform1fv(this.addr,e)}function os(t,e){const n=Oa(e,this.size,2);t.uniform2fv(this.addr,n)}function ls(t,e){const n=Oa(e,this.size,3);t.uniform3fv(this.addr,n)}function cs(t,e){const n=Oa(e,this.size,4);t.uniform4fv(this.addr,n)}function hs(t,e){const n=Oa(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,n)}function us(t,e){const n=Oa(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,n)}function qs(t,e){const n=Oa(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,n)}function ds(t,e){t.uniform1iv(this.addr,e)}function ps(t,e){t.uniform2iv(this.addr,e)}function ms(t,e){t.uniform3iv(this.addr,e)}function fs(t,e){t.uniform4iv(this.addr,e)}function gs(t,e){t.uniform1uiv(this.addr,e)}function xs(t,e){t.uniform2uiv(this.addr,e)}function vs(t,e){t.uniform3uiv(this.addr,e)}function ys(t,e){t.uniform4uiv(this.addr,e)}function _s(t,e,n){const i=e.length,r=Ua(n,i);t.uniform1iv(this.addr,r);for(let t=0;t!==i;++t)n.safeSetTexture2D(e[t]||Aa,r[t])}function bs(t,e,n){const i=e.length,r=Ua(n,i);t.uniform1iv(this.addr,r);for(let t=0;t!==i;++t)n.safeSetTextureCube(e[t]||Ca,r[t])}function ws(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=function(t){switch(t){case 5126:return Ha;case 35664:return ka;case 35665:return Ga;case 35666:return Va;case 35674:return Wa;case 35675:return ja;case 35676:return Xa;case 5124:case 35670:return Ya;case 35667:case 35671:return Za;case 35668:case 35672:return Ja;case 35669:case 35673:return Qa;case 5125:return Ka;case 36294:return $a;case 36295:return ts;case 36296:return es;case 35678:case 36198:case 36298:case 36306:case 35682:return ns;case 35679:case 36299:case 36307:return is;case 35680:case 36300:case 36308:case 36293:return rs;case 36289:case 36303:case 36311:case 36292:return as}}(e.type)}function Ms(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=function(t){switch(t){case 5126:return ss;case 35664:return os;case 35665:return ls;case 35666:return cs;case 35674:return hs;case 35675:return us;case 35676:return qs;case 5124:case 35670:return ds;case 35667:case 35671:return ps;case 35668:case 35672:return ms;case 35669:case 35673:return fs;case 5125:return gs;case 36294:return xs;case 36295:return vs;case 36296:return ys;case 35678:case 36198:case 36298:case 36306:case 35682:return _s;case 35680:case 36300:case 36308:case 36293:return bs}}(e.type)}function Ss(t){this.id=t,this.seq=[],this.map={}}Ms.prototype.updateCache=function(t){const e=this.cache;t instanceof Float32Array&&e.length!==t.length&&(this.cache=new Float32Array(t.length)),Fa(e,t)},Ss.prototype.setValue=function(t,e,n){const i=this.seq;for(let r=0,a=i.length;r!==a;++r){const a=i[r];a.setValue(t,e[a.id],n)}};const Ts=/(\w+)(\])?(\[|\.)?/g;function Es(t,e){t.seq.push(e),t.map[e.id]=e}function As(t,e,n){const i=t.name,r=i.length;for(Ts.lastIndex=0;;){const a=Ts.exec(i),s=Ts.lastIndex;let o=a[1];const l="]"===a[2],c=a[3];if(l&&(o|=0),void 0===c||"["===c&&s+2===r){Es(n,void 0===c?new ws(o,t,e):new Ms(o,t,e));break}{let t=n.map[o];void 0===t&&(t=new Ss(o),Es(n,t)),n=t}}}function Ls(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,35718);for(let i=0;i<n;++i){const n=t.getActiveUniform(e,i);As(n,t.getUniformLocation(e,n.name),this)}}function Rs(t,e,n){const i=t.createShader(e);return t.shaderSource(i,n),t.compileShader(i),i}Ls.prototype.setValue=function(t,e,n,i){const r=this.map[e];void 0!==r&&r.setValue(t,n,i)},Ls.prototype.setOptional=function(t,e,n){const i=e[n];void 0!==i&&this.setValue(t,n,i)},Ls.upload=function(t,e,n,i){for(let r=0,a=e.length;r!==a;++r){const a=e[r],s=n[a.id];!1!==s.needsUpdate&&a.setValue(t,s.value,i)}},Ls.seqWithValue=function(t,e){const n=[];for(let i=0,r=t.length;i!==r;++i){const r=t[i];r.id in e&&n.push(r)}return n};let Cs=0;function Ps(t){switch(t){case Re:return["Linear","( value )"];case Ce:return["sRGB","( value )"];case ze:return["RGBE","( value )"];case De:return["RGBM","( value, 7.0 )"];case Ne:return["RGBM","( value, 16.0 )"];case Oe:return["RGBD","( value, 256.0 )"];case Pe:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case Ie:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",t),["Linear","( value )"]}}function zs(t,e,n){const i=t.getShaderParameter(e,35713),r=t.getShaderInfoLog(e).trim();return i&&""===r?"":n.toUpperCase()+"\n\n"+r+"\n\n"+function(t){const e=t.split("\n");for(let t=0;t<e.length;t++)e[t]=t+1+": "+e[t];return e.join("\n")}(t.getShaderSource(e))}function Is(t,e){const n=Ps(e);return"vec4 "+t+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function Ds(t,e){const n=Ps(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function Ns(t,e){let n;switch(e){case j:n="Linear";break;case X:n="Reinhard";break;case Y:n="OptimizedCineon";break;case Z:n="ACESFilmic";break;case J:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),n="Linear"}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function Os(t){return""!==t}function Bs(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Fs(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const Us=/^[ \t]*#include +<([\w\d./]+)>/gm;function Hs(t){return t.replace(Us,ks)}function ks(t,e){const n=Fr[e];if(void 0===n)throw new Error("Can not resolve #include <"+e+">");return Hs(n)}const Gs=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,Vs=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Ws(t){return t.replace(Vs,Xs).replace(Gs,js)}function js(t,e,n,i){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Xs(0,e,n,i)}function Xs(t,e,n,i){let r="";for(let t=parseInt(e);t<parseInt(n);t++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+t+" ]").replace(/UNROLLED_LOOP_INDEX/g,t);return r}function Ys(t){let e="precision "+t.precision+" float;\nprecision "+t.precision+" int;";return"highp"===t.precision?e+="\n#define HIGH_PRECISION":"mediump"===t.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(e+="\n#define LOW_PRECISION"),e}function Zs(t,e,n,i){const r=t.getContext(),a=n.defines;let c=n.vertexShader,h=n.fragmentShader;const u=function(t){let e="SHADOWMAP_TYPE_BASIC";return t.shadowMapType===s?e="SHADOWMAP_TYPE_PCF":t.shadowMapType===o?e="SHADOWMAP_TYPE_PCF_SOFT":t.shadowMapType===l&&(e="SHADOWMAP_TYPE_VSM"),e}(n),q=function(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case Q:case K:e="ENVMAP_TYPE_CUBE";break;case et:case nt:e="ENVMAP_TYPE_CUBE_UV"}return e}(n),d=function(t){let e="ENVMAP_MODE_REFLECTION";if(t.envMap)switch(t.envMapMode){case K:case nt:e="ENVMAP_MODE_REFRACTION"}return e}(n),p=function(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case k:e="ENVMAP_BLENDING_MULTIPLY";break;case G:e="ENVMAP_BLENDING_MIX";break;case V:e="ENVMAP_BLENDING_ADD"}return e}(n),m=t.gammaFactor>0?t.gammaFactor:1,f=n.isWebGL2?"":function(t){return[t.extensionDerivatives||t.envMapCubeUV||t.bumpMap||t.tangentSpaceNormalMap||t.clearcoatNormalMap||t.flatShading||"physical"===t.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(t.extensionShaderTextureLOD||t.envMap||t.transmission)&&t.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Os).join("\n")}(n),g=function(t){const e=[];for(const n in t){const i=t[n];!1!==i&&e.push("#define "+n+" "+i)}return e.join("\n")}(a),x=r.createProgram();let v,y,_=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?(v=[g].filter(Os).join("\n"),v.length>0&&(v+="\n"),y=[f,g].filter(Os).join("\n"),y.length>0&&(y+="\n")):(v=[Ys(n),"#define SHADER_NAME "+n.shaderName,g,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+m,"#define MAX_BONES "+n.maxBones,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+d:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularTintMap?"#define USE_SPECULARTINTMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.morphTargets&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",n.morphTargets&&n.isWebGL2?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+u:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Os).join("\n"),y=[f,Ys(n),"#define SHADER_NAME "+n.shaderName,g,"#define GAMMA_FACTOR "+m,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+q:"",n.envMap?"#define "+d:"",n.envMap?"#define "+p:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularTintMap?"#define USE_SPECULARTINTMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.sheen?"#define USE_SHEEN":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+u:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==W?"#define TONE_MAPPING":"",n.toneMapping!==W?Fr.tonemapping_pars_fragment:"",n.toneMapping!==W?Ns("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.format===St?"#define OPAQUE":"",Fr.encodings_pars_fragment,n.map?Is("mapTexelToLinear",n.mapEncoding):"",n.matcap?Is("matcapTexelToLinear",n.matcapEncoding):"",n.envMap?Is("envMapTexelToLinear",n.envMapEncoding):"",n.emissiveMap?Is("emissiveMapTexelToLinear",n.emissiveMapEncoding):"",n.specularTintMap?Is("specularTintMapTexelToLinear",n.specularTintMapEncoding):"",n.lightMap?Is("lightMapTexelToLinear",n.lightMapEncoding):"",Ds("linearToOutputTexel",n.outputEncoding),n.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(Os).join("\n")),c=Hs(c),c=Bs(c,n),c=Fs(c,n),h=Hs(h),h=Bs(h,n),h=Fs(h,n),c=Ws(c),h=Ws(h),n.isWebGL2&&!0!==n.isRawShaderMaterial&&(_="#version 300 es\n",v=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+v,y=["#define varying in",n.glslVersion===Ve?"":"out highp vec4 pc_fragColor;",n.glslVersion===Ve?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+y);const b=_+y+h,w=Rs(r,35633,_+v+c),M=Rs(r,35632,b);if(r.attachShader(x,w),r.attachShader(x,M),void 0!==n.index0AttributeName?r.bindAttribLocation(x,0,n.index0AttributeName):!0===n.morphTargets&&r.bindAttribLocation(x,0,"position"),r.linkProgram(x),t.debug.checkShaderErrors){const t=r.getProgramInfoLog(x).trim(),e=r.getShaderInfoLog(w).trim(),n=r.getShaderInfoLog(M).trim();let i=!0,a=!0;if(!1===r.getProgramParameter(x,35714)){i=!1;const e=zs(r,w,"vertex"),n=zs(r,M,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(x,35715)+"\n\nProgram Info Log: "+t+"\n"+e+"\n"+n)}else""!==t?console.warn("THREE.WebGLProgram: Program Info Log:",t):""!==e&&""!==n||(a=!1);a&&(this.diagnostics={runnable:i,programLog:t,vertexShader:{log:e,prefix:v},fragmentShader:{log:n,prefix:y}})}let S,T;return r.deleteShader(w),r.deleteShader(M),this.getUniforms=function(){return void 0===S&&(S=new Ls(r,x)),S},this.getAttributes=function(){return void 0===T&&(T=function(t,e){const n={},i=t.getProgramParameter(e,35721);for(let r=0;r<i;r++){const i=t.getActiveAttrib(e,r),a=i.name;let s=1;35674===i.type&&(s=2),35675===i.type&&(s=3),35676===i.type&&(s=4),n[a]={type:i.type,location:t.getAttribLocation(e,a),locationSize:s}}return n}(r,x)),T},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(x),this.program=void 0},this.name=n.shaderName,this.id=Cs++,this.cacheKey=e,this.usedTimes=1,this.program=x,this.vertexShader=w,this.fragmentShader=M,this}function Js(t,e,n,i,r,a,s){const o=[],l=r.isWebGL2,c=r.logarithmicDepthBuffer,q=r.floatVertexTextures,d=r.maxVertexUniforms,p=r.vertexTextures;let m=r.precision;const f={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},g=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoat","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","specularIntensityMap","specularTintMap","specularTintMapEncoding","roughnessMap","metalnessMap","gradientMap","alphaMap","alphaTest","combine","vertexColors","vertexAlphas","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","morphTargetsCount","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","format","sheen","transmission","transmissionMap","thicknessMap"];function x(t){let e;return t&&t.isTexture?e=t.encoding:t&&t.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),e=t.texture.encoding):e=Re,l&&t&&t.isTexture&&t.format===Tt&&t.type===qt&&t.encoding===Ce&&(e=Re),e}return{getParameters:function(a,o,g,v,y){const _=v.fog,b=a.isMeshStandardMaterial?v.environment:null,w=(a.isMeshStandardMaterial?n:e).get(a.envMap||b),M=f[a.type],S=y.isSkinnedMesh?function(t){const e=t.skeleton.bones;if(q)return 1024;{const t=d,n=Math.floor((t-20)/4),i=Math.min(n,e.length);return i<e.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+e.length+" bones. This GPU supports "+i+"."),0):i}}(y):0;let T,E;if(null!==a.precision&&(m=r.getMaxPrecision(a.precision),m!==a.precision&&console.warn("THREE.WebGLProgram.getParameters:",a.precision,"not supported, using",m,"instead.")),M){const t=Hr[M];T=t.vertexShader,E=t.fragmentShader}else T=a.vertexShader,E=a.fragmentShader;const A=t.getRenderTarget(),L=a.alphaTest>0,R=a.clearcoat>0;return{isWebGL2:l,shaderID:M,shaderName:a.type,vertexShader:T,fragmentShader:E,defines:a.defines,isRawShaderMaterial:!0===a.isRawShaderMaterial,glslVersion:a.glslVersion,precision:m,instancing:!0===y.isInstancedMesh,instancingColor:!0===y.isInstancedMesh&&null!==y.instanceColor,supportsVertexTextures:p,outputEncoding:null!==A?x(A.texture):t.outputEncoding,map:!!a.map,mapEncoding:x(a.map),matcap:!!a.matcap,matcapEncoding:x(a.matcap),envMap:!!w,envMapMode:w&&w.mapping,envMapEncoding:x(w),envMapCubeUV:!!w&&(w.mapping===et||w.mapping===nt),lightMap:!!a.lightMap,lightMapEncoding:x(a.lightMap),aoMap:!!a.aoMap,emissiveMap:!!a.emissiveMap,emissiveMapEncoding:x(a.emissiveMap),bumpMap:!!a.bumpMap,normalMap:!!a.normalMap,objectSpaceNormalMap:a.normalMapType===Ue,tangentSpaceNormalMap:a.normalMapType===Fe,clearcoat:R,clearcoatMap:R&&!!a.clearcoatMap,clearcoatRoughnessMap:R&&!!a.clearcoatRoughnessMap,clearcoatNormalMap:R&&!!a.clearcoatNormalMap,displacementMap:!!a.displacementMap,roughnessMap:!!a.roughnessMap,metalnessMap:!!a.metalnessMap,specularMap:!!a.specularMap,specularIntensityMap:!!a.specularIntensityMap,specularTintMap:!!a.specularTintMap,specularTintMapEncoding:x(a.specularTintMap),alphaMap:!!a.alphaMap,alphaTest:L,gradientMap:!!a.gradientMap,sheen:a.sheen>0,transmission:a.transmission>0,transmissionMap:!!a.transmissionMap,thicknessMap:!!a.thicknessMap,combine:a.combine,vertexTangents:!!a.normalMap&&!!y.geometry&&!!y.geometry.attributes.tangent,vertexColors:a.vertexColors,vertexAlphas:!0===a.vertexColors&&!!y.geometry&&!!y.geometry.attributes.color&&4===y.geometry.attributes.color.itemSize,vertexUvs:!!(a.map||a.bumpMap||a.normalMap||a.specularMap||a.alphaMap||a.emissiveMap||a.roughnessMap||a.metalnessMap||a.clearcoatMap||a.clearcoatRoughnessMap||a.clearcoatNormalMap||a.displacementMap||a.transmissionMap||a.thicknessMap||a.specularIntensityMap||a.specularTintMap),uvsVertexOnly:!(a.map||a.bumpMap||a.normalMap||a.specularMap||a.alphaMap||a.emissiveMap||a.roughnessMap||a.metalnessMap||a.clearcoatNormalMap||a.transmission>0||a.transmissionMap||a.thicknessMap||a.specularIntensityMap||a.specularTintMap||!a.displacementMap),fog:!!_,useFog:a.fog,fogExp2:_&&_.isFogExp2,flatShading:!!a.flatShading,sizeAttenuation:a.sizeAttenuation,logarithmicDepthBuffer:c,skinning:!0===y.isSkinnedMesh&&S>0,maxBones:S,useVertexTexture:q,morphTargets:!!y.geometry&&!!y.geometry.morphAttributes.position,morphNormals:!!y.geometry&&!!y.geometry.morphAttributes.normal,morphTargetsCount:y.geometry&&y.geometry.morphAttributes.position?y.geometry.morphAttributes.position.length:0,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numClippingPlanes:s.numPlanes,numClipIntersection:s.numIntersection,format:a.format,dithering:a.dithering,shadowMapEnabled:t.shadowMap.enabled&&g.length>0,shadowMapType:t.shadowMap.type,toneMapping:a.toneMapped?t.toneMapping:W,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:a.premultipliedAlpha,doubleSided:a.side===u,flipSided:a.side===h,depthPacking:void 0!==a.depthPacking&&a.depthPacking,index0AttributeName:a.index0AttributeName,extensionDerivatives:a.extensions&&a.extensions.derivatives,extensionFragDepth:a.extensions&&a.extensions.fragDepth,extensionDrawBuffers:a.extensions&&a.extensions.drawBuffers,extensionShaderTextureLOD:a.extensions&&a.extensions.shaderTextureLOD,rendererExtensionFragDepth:l||i.has("EXT_frag_depth"),rendererExtensionDrawBuffers:l||i.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:l||i.has("EXT_shader_texture_lod"),customProgramCacheKey:a.customProgramCacheKey()}},getProgramCacheKey:function(e){const n=[];if(e.shaderID?n.push(e.shaderID):(n.push(e.fragmentShader),n.push(e.vertexShader)),void 0!==e.defines)for(const t in e.defines)n.push(t),n.push(e.defines[t]);if(!1===e.isRawShaderMaterial){for(let t=0;t<g.length;t++)n.push(e[g[t]]);n.push(t.outputEncoding),n.push(t.gammaFactor)}return n.push(e.customProgramCacheKey),n.join()},getUniforms:function(t){const e=f[t.type];let n;if(e){const t=Hr[e];n=_r.clone(t.uniforms)}else n=t.uniforms;return n},acquireProgram:function(e,n){let i;for(let t=0,e=o.length;t<e;t++){const e=o[t];if(e.cacheKey===n){i=e,++i.usedTimes;break}}return void 0===i&&(i=new Zs(t,n,e,a),o.push(i)),i},releaseProgram:function(t){if(0==--t.usedTimes){const e=o.indexOf(t);o[e]=o[o.length-1],o.pop(),t.destroy()}},programs:o}}function Qs(){let t=new WeakMap;return{get:function(e){let n=t.get(e);return void 0===n&&(n={},t.set(e,n)),n},remove:function(e){t.delete(e)},update:function(e,n,i){t.get(e)[n]=i},dispose:function(){t=new WeakMap}}}function Ks(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.program!==e.program?t.program.id-e.program.id:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function $s(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function to(t){const e=[];let n=0;const i=[],r=[],a=[],s={id:-1};function o(i,r,a,o,l,c){let h=e[n];const u=t.get(a);return void 0===h?(h={id:i.id,object:i,geometry:r,material:a,program:u.program||s,groupOrder:o,renderOrder:i.renderOrder,z:l,group:c},e[n]=h):(h.id=i.id,h.object=i,h.geometry=r,h.material=a,h.program=u.program||s,h.groupOrder=o,h.renderOrder=i.renderOrder,h.z=l,h.group=c),n++,h}return{opaque:i,transmissive:r,transparent:a,init:function(){n=0,i.length=0,r.length=0,a.length=0},push:function(t,e,n,s,l,c){const h=o(t,e,n,s,l,c);n.transmission>0?r.push(h):!0===n.transparent?a.push(h):i.push(h)},unshift:function(t,e,n,s,l,c){const h=o(t,e,n,s,l,c);n.transmission>0?r.unshift(h):!0===n.transparent?a.unshift(h):i.unshift(h)},finish:function(){for(let t=n,i=e.length;t<i;t++){const n=e[t];if(null===n.id)break;n.id=null,n.object=null,n.geometry=null,n.material=null,n.program=null,n.group=null}},sort:function(t,e){i.length>1&&i.sort(t||Ks),r.length>1&&r.sort(e||$s),a.length>1&&a.sort(e||$s)}}}function eo(t){let e=new WeakMap;return{get:function(n,i){let r;return!1===e.has(n)?(r=new to(t),e.set(n,[r])):i>=e.get(n).length?(r=new to(t),e.get(n).push(r)):r=e.get(n)[i],r},dispose:function(){e=new WeakMap}}}function no(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new mn,color:new Oi};break;case"SpotLight":n={position:new mn,direction:new mn,color:new Oi,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new mn,color:new Oi,distance:0,decay:0};break;case"HemisphereLight":n={direction:new mn,skyColor:new Oi,groundColor:new Oi};break;case"RectAreaLight":n={color:new Oi,position:new mn,halfWidth:new mn,halfHeight:new mn}}return t[e.id]=n,n}}}let io=0;function ro(t,e){return(e.castShadow?1:0)-(t.castShadow?1:0)}function ao(t,e){const n=new no,i=function(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new en};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new en,shadowCameraNear:1,shadowCameraFar:1e3}}return t[e.id]=n,n}}}(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let t=0;t<9;t++)r.probe.push(new mn);const a=new mn,s=new jn,o=new jn;return{setup:function(a,s){let o=0,l=0,c=0;for(let t=0;t<9;t++)r.probe[t].set(0,0,0);let h=0,u=0,q=0,d=0,p=0,m=0,f=0,g=0;a.sort(ro);const x=!0!==s?Math.PI:1;for(let t=0,e=a.length;t<e;t++){const e=a[t],s=e.color,v=e.intensity,y=e.distance,_=e.shadow&&e.shadow.map?e.shadow.map.texture:null;if(e.isAmbientLight)o+=s.r*v*x,l+=s.g*v*x,c+=s.b*v*x;else if(e.isLightProbe)for(let t=0;t<9;t++)r.probe[t].addScaledVector(e.sh.coefficients[t],v);else if(e.isDirectionalLight){const t=n.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity*x),e.castShadow){const t=e.shadow,n=i.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,r.directionalShadow[h]=n,r.directionalShadowMap[h]=_,r.directionalShadowMatrix[h]=e.shadow.matrix,m++}r.directional[h]=t,h++}else if(e.isSpotLight){const t=n.get(e);if(t.position.setFromMatrixPosition(e.matrixWorld),t.color.copy(s).multiplyScalar(v*x),t.distance=y,t.coneCos=Math.cos(e.angle),t.penumbraCos=Math.cos(e.angle*(1-e.penumbra)),t.decay=e.decay,e.castShadow){const t=e.shadow,n=i.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,r.spotShadow[q]=n,r.spotShadowMap[q]=_,r.spotShadowMatrix[q]=e.shadow.matrix,g++}r.spot[q]=t,q++}else if(e.isRectAreaLight){const t=n.get(e);t.color.copy(s).multiplyScalar(v),t.halfWidth.set(.5*e.width,0,0),t.halfHeight.set(0,.5*e.height,0),r.rectArea[d]=t,d++}else if(e.isPointLight){const t=n.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity*x),t.distance=e.distance,t.decay=e.decay,e.castShadow){const t=e.shadow,n=i.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,n.shadowCameraNear=t.camera.near,n.shadowCameraFar=t.camera.far,r.pointShadow[u]=n,r.pointShadowMap[u]=_,r.pointShadowMatrix[u]=e.shadow.matrix,f++}r.point[u]=t,u++}else if(e.isHemisphereLight){const t=n.get(e);t.skyColor.copy(e.color).multiplyScalar(v*x),t.groundColor.copy(e.groundColor).multiplyScalar(v*x),r.hemi[p]=t,p++}}d>0&&(e.isWebGL2||!0===t.has("OES_texture_float_linear")?(r.rectAreaLTC1=Ur.LTC_FLOAT_1,r.rectAreaLTC2=Ur.LTC_FLOAT_2):!0===t.has("OES_texture_half_float_linear")?(r.rectAreaLTC1=Ur.LTC_HALF_1,r.rectAreaLTC2=Ur.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=o,r.ambient[1]=l,r.ambient[2]=c;const v=r.hash;v.directionalLength===h&&v.pointLength===u&&v.spotLength===q&&v.rectAreaLength===d&&v.hemiLength===p&&v.numDirectionalShadows===m&&v.numPointShadows===f&&v.numSpotShadows===g||(r.directional.length=h,r.spot.length=q,r.rectArea.length=d,r.point.length=u,r.hemi.length=p,r.directionalShadow.length=m,r.directionalShadowMap.length=m,r.pointShadow.length=f,r.pointShadowMap.length=f,r.spotShadow.length=g,r.spotShadowMap.length=g,r.directionalShadowMatrix.length=m,r.pointShadowMatrix.length=f,r.spotShadowMatrix.length=g,v.directionalLength=h,v.pointLength=u,v.spotLength=q,v.rectAreaLength=d,v.hemiLength=p,v.numDirectionalShadows=m,v.numPointShadows=f,v.numSpotShadows=g,r.version=io++)},setupView:function(t,e){let n=0,i=0,l=0,c=0,h=0;const u=e.matrixWorldInverse;for(let e=0,q=t.length;e<q;e++){const q=t[e];if(q.isDirectionalLight){const t=r.directional[n];t.direction.setFromMatrixPosition(q.matrixWorld),a.setFromMatrixPosition(q.target.matrixWorld),t.direction.sub(a),t.direction.transformDirection(u),n++}else if(q.isSpotLight){const t=r.spot[l];t.position.setFromMatrixPosition(q.matrixWorld),t.position.applyMatrix4(u),t.direction.setFromMatrixPosition(q.matrixWorld),a.setFromMatrixPosition(q.target.matrixWorld),t.direction.sub(a),t.direction.transformDirection(u),l++}else if(q.isRectAreaLight){const t=r.rectArea[c];t.position.setFromMatrixPosition(q.matrixWorld),t.position.applyMatrix4(u),o.identity(),s.copy(q.matrixWorld),s.premultiply(u),o.extractRotation(s),t.halfWidth.set(.5*q.width,0,0),t.halfHeight.set(0,.5*q.height,0),t.halfWidth.applyMatrix4(o),t.halfHeight.applyMatrix4(o),c++}else if(q.isPointLight){const t=r.point[i];t.position.setFromMatrixPosition(q.matrixWorld),t.position.applyMatrix4(u),i++}else if(q.isHemisphereLight){const t=r.hemi[h];t.direction.setFromMatrixPosition(q.matrixWorld),t.direction.transformDirection(u),t.direction.normalize(),h++}}},state:r}}function so(t,e){const n=new ao(t,e),i=[],r=[];return{init:function(){i.length=0,r.length=0},state:{lightsArray:i,shadowsArray:r,lights:n},setupLights:function(t){n.setup(i,t)},setupLightsView:function(t){n.setupView(i,t)},pushLight:function(t){i.push(t)},pushShadow:function(t){r.push(t)}}}function oo(t,e){let n=new WeakMap;return{get:function(i,r=0){let a;return!1===n.has(i)?(a=new so(t,e),n.set(i,[a])):r>=n.get(i).length?(a=new so(t,e),n.get(i).push(a)):a=n.get(i)[r],a},dispose:function(){n=new WeakMap}}}class lo extends Ri{constructor(t){super(),this.type="MeshDepthMaterial",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}lo.prototype.isMeshDepthMaterial=!0;class co extends Ri{constructor(t){super(),this.type="MeshDistanceMaterial",this.referencePosition=new mn,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(t)}copy(t){return super.copy(t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}co.prototype.isMeshDistanceMaterial=!0;const ho="void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",uo="uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\nuniform float samples;\n#include <packing>\nvoid main() {\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}";function qo(t,e,n){let i=new Dr;const r=new en,a=new en,o=new un,d=new lo({depthPacking:Be}),p=new co,m={},f=n.maxTextureSize,g={0:h,1:c,2:u},x=new br({uniforms:{shadow_pass:{value:null},resolution:{value:new en},radius:{value:4},samples:{value:8}},vertexShader:ho,fragmentShader:uo}),v=x.clone();v.defines.HORIZONTAL_PASS=1;const y=new Ki;y.setAttribute("position",new Hi(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const _=new fr(y,x),b=this;function w(n,i){const r=e.update(_);x.uniforms.shadow_pass.value=n.map.texture,x.uniforms.resolution.value=n.mapSize,x.uniforms.radius.value=n.radius,x.uniforms.samples.value=n.blurSamples,t.setRenderTarget(n.mapPass),t.clear(),t.renderBufferDirect(i,null,r,x,_,null),v.uniforms.shadow_pass.value=n.mapPass.texture,v.uniforms.resolution.value=n.mapSize,v.uniforms.radius.value=n.radius,v.uniforms.samples.value=n.blurSamples,t.setRenderTarget(n.map),t.clear(),t.renderBufferDirect(i,null,r,v,_,null)}function M(e,n,i,r,a,s,o){let c=null;const h=!0===r.isPointLight?e.customDistanceMaterial:e.customDepthMaterial;if(c=void 0!==h?h:!0===r.isPointLight?p:d,t.localClippingEnabled&&!0===i.clipShadows&&0!==i.clippingPlanes.length||i.displacementMap&&0!==i.displacementScale||i.alphaMap&&i.alphaTest>0){const t=c.uuid,e=i.uuid;let n=m[t];void 0===n&&(n={},m[t]=n);let r=n[e];void 0===r&&(r=c.clone(),n[e]=r),c=r}return c.visible=i.visible,c.wireframe=i.wireframe,c.side=o===l?null!==i.shadowSide?i.shadowSide:i.side:null!==i.shadowSide?i.shadowSide:g[i.side],c.alphaMap=i.alphaMap,c.alphaTest=i.alphaTest,c.clipShadows=i.clipShadows,c.clippingPlanes=i.clippingPlanes,c.clipIntersection=i.clipIntersection,c.displacementMap=i.displacementMap,c.displacementScale=i.displacementScale,c.displacementBias=i.displacementBias,c.wireframeLinewidth=i.wireframeLinewidth,c.linewidth=i.linewidth,!0===r.isPointLight&&!0===c.isMeshDistanceMaterial&&(c.referencePosition.setFromMatrixPosition(r.matrixWorld),c.nearDistance=a,c.farDistance=s),c}function S(n,r,a,s,o){if(!1===n.visible)return;if(n.layers.test(r.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&o===l)&&(!n.frustumCulled||i.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,n.matrixWorld);const i=e.update(n),r=n.material;if(Array.isArray(r)){const e=i.groups;for(let l=0,c=e.length;l<c;l++){const c=e[l],h=r[c.materialIndex];if(h&&h.visible){const e=M(n,0,h,s,a.near,a.far,o);t.renderBufferDirect(a,null,i,e,n,c)}}}else if(r.visible){const e=M(n,0,r,s,a.near,a.far,o);t.renderBufferDirect(a,null,i,e,n,null)}}const c=n.children;for(let t=0,e=c.length;t<e;t++)S(c[t],r,a,s,o)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=s,this.render=function(e,n,s){if(!1===b.enabled)return;if(!1===b.autoUpdate&&!1===b.needsUpdate)return;if(0===e.length)return;const c=t.getRenderTarget(),h=t.getActiveCubeFace(),u=t.getActiveMipmapLevel(),d=t.state;d.setBlending(q),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);for(let c=0,h=e.length;c<h;c++){const h=e[c],u=h.shadow;if(void 0===u){console.warn("THREE.WebGLShadowMap:",h,"has no shadow.");continue}if(!1===u.autoUpdate&&!1===u.needsUpdate)continue;r.copy(u.mapSize);const q=u.getFrameExtents();if(r.multiply(q),a.copy(u.mapSize),(r.x>f||r.y>f)&&(r.x>f&&(a.x=Math.floor(f/q.x),r.x=a.x*q.x,u.mapSize.x=a.x),r.y>f&&(a.y=Math.floor(f/q.y),r.y=a.y*q.y,u.mapSize.y=a.y)),null===u.map&&!u.isPointLightShadow&&this.type===l){const t={minFilter:ct,magFilter:ct,format:Tt};u.map=new qn(r.x,r.y,t),u.map.texture.name=h.name+".shadowMap",u.mapPass=new qn(r.x,r.y,t),u.camera.updateProjectionMatrix()}if(null===u.map){const t={minFilter:st,magFilter:st,format:Tt};u.map=new qn(r.x,r.y,t),u.map.texture.name=h.name+".shadowMap",u.camera.updateProjectionMatrix()}t.setRenderTarget(u.map),t.clear();const p=u.getViewportCount();for(let t=0;t<p;t++){const e=u.getViewport(t);o.set(a.x*e.x,a.y*e.y,a.x*e.z,a.y*e.w),d.viewport(o),u.updateMatrices(h,t),i=u.getFrustum(),S(n,s,u.camera,h,this.type)}u.isPointLightShadow||this.type!==l||w(u,s),u.needsUpdate=!1}b.needsUpdate=!1,t.setRenderTarget(c,h,u)}}function po(t,e,n){const s=n.isWebGL2,o=new function(){let e=!1;const n=new un;let i=null;const r=new un(0,0,0,0);return{setMask:function(n){i===n||e||(t.colorMask(n,n,n,n),i=n)},setLocked:function(t){e=t},setClear:function(e,i,a,s,o){!0===o&&(e*=s,i*=s,a*=s),n.set(e,i,a,s),!1===r.equals(n)&&(t.clearColor(e,i,a,s),r.copy(n))},reset:function(){e=!1,i=null,r.set(-1,0,0,0)}}},l=new function(){let e=!1,n=null,i=null,r=null;return{setTest:function(t){t?xt(2929):vt(2929)},setMask:function(i){n===i||e||(t.depthMask(i),n=i)},setFunc:function(e){if(i!==e){if(e)switch(e){case I:t.depthFunc(512);break;case D:t.depthFunc(519);break;case N:t.depthFunc(513);break;case O:t.depthFunc(515);break;case B:t.depthFunc(514);break;case F:t.depthFunc(518);break;case U:t.depthFunc(516);break;case H:t.depthFunc(517);break;default:t.depthFunc(515)}else t.depthFunc(515);i=e}},setLocked:function(t){e=t},setClear:function(e){r!==e&&(t.clearDepth(e),r=e)},reset:function(){e=!1,n=null,i=null,r=null}}},c=new function(){let e=!1,n=null,i=null,r=null,a=null,s=null,o=null,l=null,c=null;return{setTest:function(t){e||(t?xt(2960):vt(2960))},setMask:function(i){n===i||e||(t.stencilMask(i),n=i)},setFunc:function(e,n,s){i===e&&r===n&&a===s||(t.stencilFunc(e,n,s),i=e,r=n,a=s)},setOp:function(e,n,i){s===e&&o===n&&l===i||(t.stencilOp(e,n,i),s=e,o=n,l=i)},setLocked:function(t){e=t},setClear:function(e){c!==e&&(t.clearStencil(e),c=e)},reset:function(){e=!1,n=null,i=null,r=null,a=null,s=null,o=null,l=null,c=null}}};let k={},G=null,V={},W=null,j=!1,X=null,Y=null,Z=null,J=null,Q=null,K=null,$=null,tt=!1,et=null,nt=null,it=null,rt=null,at=null;const st=t.getParameter(35661);let ot=!1,lt=0;const ct=t.getParameter(7938);-1!==ct.indexOf("WebGL")?(lt=parseFloat(/^WebGL (\d)/.exec(ct)[1]),ot=lt>=1):-1!==ct.indexOf("OpenGL ES")&&(lt=parseFloat(/^OpenGL ES (\d)/.exec(ct)[1]),ot=lt>=2);let ht=null,ut={};const qt=t.getParameter(3088),dt=t.getParameter(2978),pt=(new un).fromArray(qt),mt=(new un).fromArray(dt);function ft(e,n,i){const r=new Uint8Array(4),a=t.createTexture();t.bindTexture(e,a),t.texParameteri(e,10241,9728),t.texParameteri(e,10240,9728);for(let e=0;e<i;e++)t.texImage2D(n+e,0,6408,1,1,0,6408,5121,r);return a}const gt={};function xt(e){!0!==k[e]&&(t.enable(e),k[e]=!0)}function vt(e){!1!==k[e]&&(t.disable(e),k[e]=!1)}gt[3553]=ft(3553,3553,1),gt[34067]=ft(34067,34069,6),o.setClear(0,0,0,1),l.setClear(1),c.setClear(0),xt(2929),l.setFunc(O),wt(!1),Mt(r),xt(2884),bt(q);const yt={[x]:32774,[v]:32778,[y]:32779};if(s)yt[_]=32775,yt[b]=32776;else{const t=e.get("EXT_blend_minmax");null!==t&&(yt[_]=t.MIN_EXT,yt[b]=t.MAX_EXT)}const _t={[w]:0,[M]:1,[S]:768,[E]:770,[z]:776,[C]:774,[L]:772,[T]:769,[A]:771,[P]:775,[R]:773};function bt(e,n,i,r,a,s,o,l){if(e!==q){if(!1===j&&(xt(3042),j=!0),e===g)a=a||n,s=s||i,o=o||r,n===Y&&a===Q||(t.blendEquationSeparate(yt[n],yt[a]),Y=n,Q=a),i===Z&&r===J&&s===K&&o===$||(t.blendFuncSeparate(_t[i],_t[r],_t[s],_t[o]),Z=i,J=r,K=s,$=o),X=e,tt=null;else if(e!==X||l!==tt){if(Y===x&&Q===x||(t.blendEquation(32774),Y=x,Q=x),l)switch(e){case d:t.blendFuncSeparate(1,771,1,771);break;case p:t.blendFunc(1,1);break;case m:t.blendFuncSeparate(0,0,769,771);break;case f:t.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case d:t.blendFuncSeparate(770,771,1,771);break;case p:t.blendFunc(770,1);break;case m:t.blendFunc(0,769);break;case f:t.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}Z=null,J=null,K=null,$=null,X=e,tt=l}}else!0===j&&(vt(3042),j=!1)}function wt(e){et!==e&&(e?t.frontFace(2304):t.frontFace(2305),et=e)}function Mt(e){e!==i?(xt(2884),e!==nt&&(e===r?t.cullFace(1029):e===a?t.cullFace(1028):t.cullFace(1032))):vt(2884),nt=e}function St(e,n,i){e?(xt(32823),rt===n&&at===i||(t.polygonOffset(n,i),rt=n,at=i)):vt(32823)}function Tt(e){void 0===e&&(e=33984+st-1),ht!==e&&(t.activeTexture(e),ht=e)}return{buffers:{color:o,depth:l,stencil:c},enable:xt,disable:vt,bindFramebuffer:function(e,n){return null===n&&null!==G&&(n=G),V[e]!==n&&(t.bindFramebuffer(e,n),V[e]=n,s&&(36009===e&&(V[36160]=n),36160===e&&(V[36009]=n)),!0)},bindXRFramebuffer:function(e){e!==G&&(t.bindFramebuffer(36160,e),G=e)},useProgram:function(e){return W!==e&&(t.useProgram(e),W=e,!0)},setBlending:bt,setMaterial:function(t,e){t.side===u?vt(2884):xt(2884);let n=t.side===h;e&&(n=!n),wt(n),t.blending===d&&!1===t.transparent?bt(q):bt(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha),l.setFunc(t.depthFunc),l.setTest(t.depthTest),l.setMask(t.depthWrite),o.setMask(t.colorWrite);const i=t.stencilWrite;c.setTest(i),i&&(c.setMask(t.stencilWriteMask),c.setFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),c.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),St(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits),!0===t.alphaToCoverage?xt(32926):vt(32926)},setFlipSided:wt,setCullFace:Mt,setLineWidth:function(e){e!==it&&(ot&&t.lineWidth(e),it=e)},setPolygonOffset:St,setScissorTest:function(t){t?xt(3089):vt(3089)},activeTexture:Tt,bindTexture:function(e,n){null===ht&&Tt();let i=ut[ht];void 0===i&&(i={type:void 0,texture:void 0},ut[ht]=i),i.type===e&&i.texture===n||(t.bindTexture(e,n||gt[e]),i.type=e,i.texture=n)},unbindTexture:function(){const e=ut[ht];void 0!==e&&void 0!==e.type&&(t.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)},compressedTexImage2D:function(){try{t.compressedTexImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{t.texImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(){try{t.texImage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(e){!1===pt.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),pt.copy(e))},viewport:function(e){!1===mt.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),mt.copy(e))},reset:function(){t.disable(3042),t.disable(2884),t.disable(2929),t.disable(32823),t.disable(3089),t.disable(2960),t.disable(32926),t.blendEquation(32774),t.blendFunc(1,0),t.blendFuncSeparate(1,0,1,0),t.colorMask(!0,!0,!0,!0),t.clearColor(0,0,0,0),t.depthMask(!0),t.depthFunc(513),t.clearDepth(1),t.stencilMask(4294967295),t.stencilFunc(519,0,4294967295),t.stencilOp(7680,7680,7680),t.clearStencil(0),t.cullFace(1029),t.frontFace(2305),t.polygonOffset(0,0),t.activeTexture(33984),t.bindFramebuffer(36160,null),!0===s&&(t.bindFramebuffer(36009,null),t.bindFramebuffer(36008,null)),t.useProgram(null),t.lineWidth(1),t.scissor(0,0,t.canvas.width,t.canvas.height),t.viewport(0,0,t.canvas.width,t.canvas.height),k={},ht=null,ut={},G=null,V={},W=null,j=!1,X=null,Y=null,Z=null,J=null,Q=null,K=null,$=null,tt=!1,et=null,nt=null,it=null,rt=null,at=null,pt.set(0,0,t.canvas.width,t.canvas.height),mt.set(0,0,t.canvas.width,t.canvas.height),o.reset(),l.reset(),c.reset()}}}function mo(t,e,n,i,r,a,s){const o=r.isWebGL2,l=r.maxTextures,c=r.maxCubemapSize,h=r.maxTextureSize,u=r.maxSamples,q=new WeakMap;let d,p=!1;try{p="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(t){}function m(t,e){return p?new OffscreenCanvas(t,e):an("canvas")}function f(t,e,n,i){let r=1;if((t.width>i||t.height>i)&&(r=i/Math.max(t.width,t.height)),r<1||!0===e){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const i=e?tn:Math.floor,a=i(r*t.width),s=i(r*t.height);void 0===d&&(d=m(a,s));const o=n?m(a,s):d;return o.width=a,o.height=s,o.getContext("2d").drawImage(t,0,0,a,s),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+t.width+"x"+t.height+") to ("+a+"x"+s+")."),o}return"data"in t&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+t.width+"x"+t.height+")."),t}return t}function g(t){return $e(t.width)&&$e(t.height)}function x(t,e){return t.generateMipmaps&&e&&t.minFilter!==st&&t.minFilter!==ct}function v(e,n,r,a,s=1){t.generateMipmap(e),i.get(n).__maxMipLevel=Math.log2(Math.max(r,a,s))}function y(n,i,r,a){if(!1===o)return i;if(null!==n){if(void 0!==t[n])return t[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}let s=i;return 6403===i&&(5126===r&&(s=33326),5131===r&&(s=33325),5121===r&&(s=33321)),6407===i&&(5126===r&&(s=34837),5131===r&&(s=34843),5121===r&&(s=32849)),6408===i&&(5126===r&&(s=34836),5131===r&&(s=34842),5121===r&&(s=a===Ce?35907:32856)),33325!==s&&33326!==s&&34842!==s&&34836!==s||e.get("EXT_color_buffer_float"),s}function _(t){return t===st||t===ot||t===lt?9728:9729}function b(e){const n=e.target;n.removeEventListener("dispose",b),function(e){const n=i.get(e);void 0!==n.__webglInit&&(t.deleteTexture(n.__webglTexture),i.remove(e))}(n),n.isVideoTexture&&q.delete(n),s.memory.textures--}function w(e){const n=e.target;n.removeEventListener("dispose",w),function(e){const n=e.texture,r=i.get(e),a=i.get(n);if(e){if(void 0!==a.__webglTexture&&(t.deleteTexture(a.__webglTexture),s.memory.textures--),e.depthTexture&&e.depthTexture.dispose(),e.isWebGLCubeRenderTarget)for(let e=0;e<6;e++)t.deleteFramebuffer(r.__webglFramebuffer[e]),r.__webglDepthbuffer&&t.deleteRenderbuffer(r.__webglDepthbuffer[e]);else t.deleteFramebuffer(r.__webglFramebuffer),r.__webglDepthbuffer&&t.deleteRenderbuffer(r.__webglDepthbuffer),r.__webglMultisampledFramebuffer&&t.deleteFramebuffer(r.__webglMultisampledFramebuffer),r.__webglColorRenderbuffer&&t.deleteRenderbuffer(r.__webglColorRenderbuffer),r.__webglDepthRenderbuffer&&t.deleteRenderbuffer(r.__webglDepthRenderbuffer);if(e.isWebGLMultipleRenderTargets)for(let e=0,r=n.length;e<r;e++){const r=i.get(n[e]);r.__webglTexture&&(t.deleteTexture(r.__webglTexture),s.memory.textures--),i.remove(n[e])}i.remove(n),i.remove(e)}}(n)}let M=0;function S(t,e){const r=i.get(t);if(t.isVideoTexture&&function(t){const e=s.render.frame;q.get(t)!==e&&(q.set(t,e),t.update())}(t),t.version>0&&r.__version!==t.version){const n=t.image;if(void 0===n)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==n.complete)return void C(r,t,e);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.activeTexture(33984+e),n.bindTexture(3553,r.__webglTexture)}function T(e,r){const s=i.get(e);e.version>0&&s.__version!==e.version?function(e,i,r){if(6!==i.image.length)return;R(e,i),n.activeTexture(33984+r),n.bindTexture(34067,e.__webglTexture),t.pixelStorei(37440,i.flipY),t.pixelStorei(37441,i.premultiplyAlpha),t.pixelStorei(3317,i.unpackAlignment),t.pixelStorei(37443,0);const s=i&&(i.isCompressedTexture||i.image[0].isCompressedTexture),l=i.image[0]&&i.image[0].isDataTexture,h=[];for(let t=0;t<6;t++)h[t]=s||l?l?i.image[t].image:i.image[t]:f(i.image[t],!1,!0,c);const u=h[0],q=g(u)||o,d=a.convert(i.format),p=a.convert(i.type),m=y(i.internalFormat,d,p,i.encoding);let _;if(L(34067,i,q),s){for(let t=0;t<6;t++){_=h[t].mipmaps;for(let e=0;e<_.length;e++){const r=_[e];i.format!==Tt&&i.format!==St?null!==d?n.compressedTexImage2D(34069+t,e,m,r.width,r.height,0,r.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):n.texImage2D(34069+t,e,m,r.width,r.height,0,d,p,r.data)}}e.__maxMipLevel=_.length-1}else{_=i.mipmaps;for(let t=0;t<6;t++)if(l){n.texImage2D(34069+t,0,m,h[t].width,h[t].height,0,d,p,h[t].data);for(let e=0;e<_.length;e++){const i=_[e].image[t].image;n.texImage2D(34069+t,e+1,m,i.width,i.height,0,d,p,i.data)}}else{n.texImage2D(34069+t,0,m,d,p,h[t]);for(let e=0;e<_.length;e++){const i=_[e];n.texImage2D(34069+t,e+1,m,d,p,i.image[t])}}e.__maxMipLevel=_.length}x(i,q)&&v(34067,i,u.width,u.height),e.__version=i.version,i.onUpdate&&i.onUpdate(i)}(s,e,r):(n.activeTexture(33984+r),n.bindTexture(34067,s.__webglTexture))}const E={[it]:10497,[rt]:33071,[at]:33648},A={[st]:9728,[ot]:9984,[lt]:9986,[ct]:9729,[ht]:9985,[ut]:9987};function L(n,a,s){if(s?(t.texParameteri(n,10242,E[a.wrapS]),t.texParameteri(n,10243,E[a.wrapT]),32879!==n&&35866!==n||t.texParameteri(n,32882,E[a.wrapR]),t.texParameteri(n,10240,A[a.magFilter]),t.texParameteri(n,10241,A[a.minFilter])):(t.texParameteri(n,10242,33071),t.texParameteri(n,10243,33071),32879!==n&&35866!==n||t.texParameteri(n,32882,33071),a.wrapS===rt&&a.wrapT===rt||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(n,10240,_(a.magFilter)),t.texParameteri(n,10241,_(a.minFilter)),a.minFilter!==st&&a.minFilter!==ct&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===e.has("EXT_texture_filter_anisotropic")){const s=e.get("EXT_texture_filter_anisotropic");if(a.type===xt&&!1===e.has("OES_texture_float_linear"))return;if(!1===o&&a.type===vt&&!1===e.has("OES_texture_half_float_linear"))return;(a.anisotropy>1||i.get(a).__currentAnisotropy)&&(t.texParameterf(n,s.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(a.anisotropy,r.getMaxAnisotropy())),i.get(a).__currentAnisotropy=a.anisotropy)}}function R(e,n){void 0===e.__webglInit&&(e.__webglInit=!0,n.addEventListener("dispose",b),e.__webglTexture=t.createTexture(),s.memory.textures++)}function C(e,i,r){let s=3553;i.isDataTexture2DArray&&(s=35866),i.isDataTexture3D&&(s=32879),R(e,i),n.activeTexture(33984+r),n.bindTexture(s,e.__webglTexture),t.pixelStorei(37440,i.flipY),t.pixelStorei(37441,i.premultiplyAlpha),t.pixelStorei(3317,i.unpackAlignment),t.pixelStorei(37443,0);const l=function(t){return!o&&(t.wrapS!==rt||t.wrapT!==rt||t.minFilter!==st&&t.minFilter!==ct)}(i)&&!1===g(i.image),c=f(i.image,l,!1,h),u=g(c)||o,q=a.convert(i.format);let d,p=a.convert(i.type),m=y(i.internalFormat,q,p,i.encoding);L(s,i,u);const _=i.mipmaps;if(i.isDepthTexture)m=6402,o?m=i.type===xt?36012:i.type===gt?33190:i.type===wt?35056:33189:i.type===xt&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),i.format===Rt&&6402===m&&i.type!==mt&&i.type!==gt&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),i.type=mt,p=a.convert(i.type)),i.format===Ct&&6402===m&&(m=34041,i.type!==wt&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),i.type=wt,p=a.convert(i.type))),n.texImage2D(3553,0,m,c.width,c.height,0,q,p,null);else if(i.isDataTexture)if(_.length>0&&u){for(let t=0,e=_.length;t<e;t++)d=_[t],n.texImage2D(3553,t,m,d.width,d.height,0,q,p,d.data);i.generateMipmaps=!1,e.__maxMipLevel=_.length-1}else n.texImage2D(3553,0,m,c.width,c.height,0,q,p,c.data),e.__maxMipLevel=0;else if(i.isCompressedTexture){for(let t=0,e=_.length;t<e;t++)d=_[t],i.format!==Tt&&i.format!==St?null!==q?n.compressedTexImage2D(3553,t,m,d.width,d.height,0,d.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texImage2D(3553,t,m,d.width,d.height,0,q,p,d.data);e.__maxMipLevel=_.length-1}else if(i.isDataTexture2DArray)n.texImage3D(35866,0,m,c.width,c.height,c.depth,0,q,p,c.data),e.__maxMipLevel=0;else if(i.isDataTexture3D)n.texImage3D(32879,0,m,c.width,c.height,c.depth,0,q,p,c.data),e.__maxMipLevel=0;else if(_.length>0&&u){for(let t=0,e=_.length;t<e;t++)d=_[t],n.texImage2D(3553,t,m,q,p,d);i.generateMipmaps=!1,e.__maxMipLevel=_.length-1}else n.texImage2D(3553,0,m,q,p,c),e.__maxMipLevel=0;x(i,u)&&v(s,i,c.width,c.height),e.__version=i.version,i.onUpdate&&i.onUpdate(i)}function P(e,r,s,o,l){const c=a.convert(s.format),h=a.convert(s.type),u=y(s.internalFormat,c,h,s.encoding);32879===l||35866===l?n.texImage3D(l,0,u,r.width,r.height,r.depth,0,c,h,null):n.texImage2D(l,0,u,r.width,r.height,0,c,h,null),n.bindFramebuffer(36160,e),t.framebufferTexture2D(36160,o,l,i.get(s).__webglTexture,0),n.bindFramebuffer(36160,null)}function z(e,n,i){if(t.bindRenderbuffer(36161,e),n.depthBuffer&&!n.stencilBuffer){let r=33189;if(i){const e=n.depthTexture;e&&e.isDepthTexture&&(e.type===xt?r=36012:e.type===gt&&(r=33190));const i=I(n);t.renderbufferStorageMultisample(36161,i,r,n.width,n.height)}else t.renderbufferStorage(36161,r,n.width,n.height);t.framebufferRenderbuffer(36160,36096,36161,e)}else if(n.depthBuffer&&n.stencilBuffer){if(i){const e=I(n);t.renderbufferStorageMultisample(36161,e,35056,n.width,n.height)}else t.renderbufferStorage(36161,34041,n.width,n.height);t.framebufferRenderbuffer(36160,33306,36161,e)}else{const e=!0===n.isWebGLMultipleRenderTargets?n.texture[0]:n.texture,r=a.convert(e.format),s=a.convert(e.type),o=y(e.internalFormat,r,s,e.encoding);if(i){const e=I(n);t.renderbufferStorageMultisample(36161,e,o,n.width,n.height)}else t.renderbufferStorage(36161,o,n.width,n.height)}t.bindRenderbuffer(36161,null)}function I(t){return o&&t.isWebGLMultisampleRenderTarget?Math.min(u,t.samples):0}let D=!1,N=!1;this.allocateTextureUnit=function(){const t=M;return t>=l&&console.warn("THREE.WebGLTextures: Trying to use "+t+" texture units while this GPU supports only "+l),M+=1,t},this.resetTextureUnits=function(){M=0},this.setTexture2D=S,this.setTexture2DArray=function(t,e){const r=i.get(t);t.version>0&&r.__version!==t.version?C(r,t,e):(n.activeTexture(33984+e),n.bindTexture(35866,r.__webglTexture))},this.setTexture3D=function(t,e){const r=i.get(t);t.version>0&&r.__version!==t.version?C(r,t,e):(n.activeTexture(33984+e),n.bindTexture(32879,r.__webglTexture))},this.setTextureCube=T,this.setupRenderTarget=function(e){const l=e.texture,c=i.get(e),h=i.get(l);e.addEventListener("dispose",w),!0!==e.isWebGLMultipleRenderTargets&&(h.__webglTexture=t.createTexture(),h.__version=l.version,s.memory.textures++);const u=!0===e.isWebGLCubeRenderTarget,q=!0===e.isWebGLMultipleRenderTargets,d=!0===e.isWebGLMultisampleRenderTarget,p=l.isDataTexture3D||l.isDataTexture2DArray,m=g(e)||o;if(!o||l.format!==St||l.type!==xt&&l.type!==vt||(l.format=Tt,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),u){c.__webglFramebuffer=[];for(let e=0;e<6;e++)c.__webglFramebuffer[e]=t.createFramebuffer()}else if(c.__webglFramebuffer=t.createFramebuffer(),q)if(r.drawBuffers){const n=e.texture;for(let e=0,r=n.length;e<r;e++){const r=i.get(n[e]);void 0===r.__webglTexture&&(r.__webglTexture=t.createTexture(),s.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");else if(d)if(o){c.__webglMultisampledFramebuffer=t.createFramebuffer(),c.__webglColorRenderbuffer=t.createRenderbuffer(),t.bindRenderbuffer(36161,c.__webglColorRenderbuffer);const i=a.convert(l.format),r=a.convert(l.type),s=y(l.internalFormat,i,r,l.encoding),o=I(e);t.renderbufferStorageMultisample(36161,o,s,e.width,e.height),n.bindFramebuffer(36160,c.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(36160,36064,36161,c.__webglColorRenderbuffer),t.bindRenderbuffer(36161,null),e.depthBuffer&&(c.__webglDepthRenderbuffer=t.createRenderbuffer(),z(c.__webglDepthRenderbuffer,e,!0)),n.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(u){n.bindTexture(34067,h.__webglTexture),L(34067,l,m);for(let t=0;t<6;t++)P(c.__webglFramebuffer[t],e,l,36064,34069+t);x(l,m)&&v(34067,l,e.width,e.height),n.unbindTexture()}else if(q){const t=e.texture;for(let r=0,a=t.length;r<a;r++){const a=t[r],s=i.get(a);n.bindTexture(3553,s.__webglTexture),L(3553,a,m),P(c.__webglFramebuffer,e,a,36064+r,3553),x(a,m)&&v(3553,a,e.width,e.height)}n.unbindTexture()}else{let t=3553;p&&(o?t=l.isDataTexture3D?32879:35866:console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.")),n.bindTexture(t,h.__webglTexture),L(t,l,m),P(c.__webglFramebuffer,e,l,36064,t),x(l,m)&&v(t,l,e.width,e.height,e.depth),n.unbindTexture()}e.depthBuffer&&function(e){const r=i.get(e),a=!0===e.isWebGLCubeRenderTarget;if(e.depthTexture){if(a)throw new Error("target.depthTexture not supported in Cube render targets");!function(e,r){if(r&&r.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(36160,e),!r.depthTexture||!r.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");i.get(r.depthTexture).__webglTexture&&r.depthTexture.image.width===r.width&&r.depthTexture.image.height===r.height||(r.depthTexture.image.width=r.width,r.depthTexture.image.height=r.height,r.depthTexture.needsUpdate=!0),S(r.depthTexture,0);const a=i.get(r.depthTexture).__webglTexture;if(r.depthTexture.format===Rt)t.framebufferTexture2D(36160,36096,3553,a,0);else{if(r.depthTexture.format!==Ct)throw new Error("Unknown depthTexture format");t.framebufferTexture2D(36160,33306,3553,a,0)}}(r.__webglFramebuffer,e)}else if(a){r.__webglDepthbuffer=[];for(let i=0;i<6;i++)n.bindFramebuffer(36160,r.__webglFramebuffer[i]),r.__webglDepthbuffer[i]=t.createRenderbuffer(),z(r.__webglDepthbuffer[i],e,!1)}else n.bindFramebuffer(36160,r.__webglFramebuffer),r.__webglDepthbuffer=t.createRenderbuffer(),z(r.__webglDepthbuffer,e,!1);n.bindFramebuffer(36160,null)}(e)},this.updateRenderTargetMipmap=function(t){const e=g(t)||o,r=!0===t.isWebGLMultipleRenderTargets?t.texture:[t.texture];for(let a=0,s=r.length;a<s;a++){const s=r[a];if(x(s,e)){const e=t.isWebGLCubeRenderTarget?34067:3553,r=i.get(s).__webglTexture;n.bindTexture(e,r),v(e,s,t.width,t.height),n.unbindTexture()}}},this.updateMultisampleRenderTarget=function(e){if(e.isWebGLMultisampleRenderTarget)if(o){const r=e.width,a=e.height;let s=16384;e.depthBuffer&&(s|=256),e.stencilBuffer&&(s|=1024);const o=i.get(e);n.bindFramebuffer(36008,o.__webglMultisampledFramebuffer),n.bindFramebuffer(36009,o.__webglFramebuffer),t.blitFramebuffer(0,0,r,a,0,0,r,a,s,9728),n.bindFramebuffer(36008,null),n.bindFramebuffer(36009,o.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=function(t,e){t&&t.isWebGLRenderTarget&&(!1===D&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),D=!0),t=t.texture),S(t,e)},this.safeSetTextureCube=function(t,e){t&&t.isWebGLCubeRenderTarget&&(!1===N&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),N=!0),t=t.texture),T(t,e)}}function fo(t,e,n){const i=n.isWebGL2;return{convert:function(t){let n;if(t===qt)return 5121;if(t===yt)return 32819;if(t===_t)return 32820;if(t===bt)return 33635;if(t===dt)return 5120;if(t===pt)return 5122;if(t===mt)return 5123;if(t===ft)return 5124;if(t===gt)return 5125;if(t===xt)return 5126;if(t===vt)return i?5131:(n=e.get("OES_texture_half_float"),null!==n?n.HALF_FLOAT_OES:null);if(t===Mt)return 6406;if(t===St)return 6407;if(t===Tt)return 6408;if(t===Et)return 6409;if(t===At)return 6410;if(t===Rt)return 6402;if(t===Ct)return 34041;if(t===Pt)return 6403;if(t===zt)return 36244;if(t===It)return 33319;if(t===Dt)return 33320;if(t===Nt)return 36248;if(t===Ot)return 36249;if(t===Bt||t===Ft||t===Ut||t===Ht){if(n=e.get("WEBGL_compressed_texture_s3tc"),null===n)return null;if(t===Bt)return n.COMPRESSED_RGB_S3TC_DXT1_EXT;if(t===Ft)return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(t===Ut)return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(t===Ht)return n.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(t===kt||t===Gt||t===Vt||t===Wt){if(n=e.get("WEBGL_compressed_texture_pvrtc"),null===n)return null;if(t===kt)return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(t===Gt)return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(t===Vt)return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(t===Wt)return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(t===jt)return n=e.get("WEBGL_compressed_texture_etc1"),null!==n?n.COMPRESSED_RGB_ETC1_WEBGL:null;if((t===Xt||t===Yt)&&(n=e.get("WEBGL_compressed_texture_etc"),null!==n)){if(t===Xt)return n.COMPRESSED_RGB8_ETC2;if(t===Yt)return n.COMPRESSED_RGBA8_ETC2_EAC}return t===Zt||t===Jt||t===Qt||t===Kt||t===$t||t===te||t===ee||t===ne||t===ie||t===re||t===ae||t===se||t===oe||t===le||t===he||t===ue||t===qe||t===de||t===pe||t===me||t===fe||t===ge||t===xe||t===ve||t===ye||t===_e||t===be||t===we?(n=e.get("WEBGL_compressed_texture_astc"),null!==n?t:null):t===ce?(n=e.get("EXT_texture_compression_bptc"),null!==n?t:null):t===wt?i?34042:(n=e.get("WEBGL_depth_texture"),null!==n?n.UNSIGNED_INT_24_8_WEBGL:null):void 0}}}class go extends Mr{constructor(t=[]){super(),this.cameras=t}}go.prototype.isArrayCamera=!0;class xo extends gi{constructor(){super(),this.type="Group"}}xo.prototype.isGroup=!0;const vo={type:"move"};class yo{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new xo,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new xo,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new mn,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new mn),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new xo,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new mn,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new mn),this._grip}dispatchEvent(t){return null!==this._targetRay&&this._targetRay.dispatchEvent(t),null!==this._grip&&this._grip.dispatchEvent(t),null!==this._hand&&this._hand.dispatchEvent(t),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(t,e,n){let i=null,r=null,a=null;const s=this._targetRay,o=this._grip,l=this._hand;if(t&&"visible-blurred"!==e.session.visibilityState)if(null!==s&&(i=e.getPose(t.targetRaySpace,n),null!==i&&(s.matrix.fromArray(i.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),i.linearVelocity?(s.hasLinearVelocity=!0,s.linearVelocity.copy(i.linearVelocity)):s.hasLinearVelocity=!1,i.angularVelocity?(s.hasAngularVelocity=!0,s.angularVelocity.copy(i.angularVelocity)):s.hasAngularVelocity=!1,this.dispatchEvent(vo))),l&&t.hand){a=!0;for(const i of t.hand.values()){const t=e.getJointPose(i,n);if(void 0===l.joints[i.jointName]){const t=new xo;t.matrixAutoUpdate=!1,t.visible=!1,l.joints[i.jointName]=t,l.add(t)}const r=l.joints[i.jointName];null!==t&&(r.matrix.fromArray(t.transform.matrix),r.matrix.decompose(r.position,r.rotation,r.scale),r.jointRadius=t.radius),r.visible=null!==t}const i=l.joints["index-finger-tip"],r=l.joints["thumb-tip"],s=i.position.distanceTo(r.position),o=.02,c=.005;l.inputState.pinching&&s>o+c?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!l.inputState.pinching&&s<=o-c&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else null!==o&&t.gripSpace&&(r=e.getPose(t.gripSpace,n),null!==r&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),r.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(r.linearVelocity)):o.hasLinearVelocity=!1,r.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(r.angularVelocity)):o.hasAngularVelocity=!1));return null!==s&&(s.visible=null!==i),null!==o&&(o.visible=null!==r),null!==l&&(l.visible=null!==a),this}}class _o extends We{constructor(t,e){super();const n=this,i=t.state;let r=null,a=1,s=null,o="local-floor",l=null,c=null,h=null,u=null,q=null,d=!1,p=null,m=null,f=null,g=null,x=null,v=null;const y=[],_=new Map,b=new Mr;b.layers.enable(1),b.viewport=new un;const w=new Mr;w.layers.enable(2),w.viewport=new un;const M=[b,w],S=new go;S.layers.enable(1),S.layers.enable(2);let T=null,E=null;function A(t){const e=_.get(t.inputSource);e&&e.dispatchEvent({type:t.type,data:t.inputSource})}function L(){_.forEach((function(t,e){t.disconnect(e)})),_.clear(),T=null,E=null,i.bindXRFramebuffer(null),t.setRenderTarget(t.getRenderTarget()),h&&e.deleteFramebuffer(h),p&&e.deleteFramebuffer(p),m&&e.deleteRenderbuffer(m),f&&e.deleteRenderbuffer(f),h=null,p=null,m=null,f=null,q=null,u=null,c=null,r=null,D.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function R(t){const e=r.inputSources;for(let t=0;t<y.length;t++)_.set(e[t],y[t]);for(let e=0;e<t.removed.length;e++){const n=t.removed[e],i=_.get(n);i&&(i.dispatchEvent({type:"disconnected",data:n}),_.delete(n))}for(let e=0;e<t.added.length;e++){const n=t.added[e],i=_.get(n);i&&i.dispatchEvent({type:"connected",data:n})}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(t){let e=y[t];return void 0===e&&(e=new yo,y[t]=e),e.getTargetRaySpace()},this.getControllerGrip=function(t){let e=y[t];return void 0===e&&(e=new yo,y[t]=e),e.getGripSpace()},this.getHand=function(t){let e=y[t];return void 0===e&&(e=new yo,y[t]=e),e.getHandSpace()},this.setFramebufferScaleFactor=function(t){a=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(t){o=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return s},this.getBaseLayer=function(){return null!==u?u:q},this.getBinding=function(){return c},this.getFrame=function(){return g},this.getSession=function(){return r},this.setSession=async function(t){if(r=t,null!==r){r.addEventListener("select",A),r.addEventListener("selectstart",A),r.addEventListener("selectend",A),r.addEventListener("squeeze",A),r.addEventListener("squeezestart",A),r.addEventListener("squeezeend",A),r.addEventListener("end",L),r.addEventListener("inputsourceschange",R);const t=e.getContextAttributes();if(!0!==t.xrCompatible&&await e.makeXRCompatible(),void 0===r.renderState.layers){const n={antialias:t.antialias,alpha:t.alpha,depth:t.depth,stencil:t.stencil,framebufferScaleFactor:a};q=new XRWebGLLayer(r,e,n),r.updateRenderState({baseLayer:q})}else if(e instanceof WebGLRenderingContext){const n={antialias:!0,alpha:t.alpha,depth:t.depth,stencil:t.stencil,framebufferScaleFactor:a};q=new XRWebGLLayer(r,e,n),r.updateRenderState({layers:[q]})}else{d=t.antialias;let n=null;t.depth&&(v=256,t.stencil&&(v|=1024),x=t.stencil?33306:36096,n=t.stencil?35056:33190);const s={colorFormat:t.alpha?32856:32849,depthFormat:n,scaleFactor:a};c=new XRWebGLBinding(r,e),u=c.createProjectionLayer(s),h=e.createFramebuffer(),r.updateRenderState({layers:[u]}),d&&(p=e.createFramebuffer(),m=e.createRenderbuffer(),e.bindRenderbuffer(36161,m),e.renderbufferStorageMultisample(36161,4,32856,u.textureWidth,u.textureHeight),i.bindFramebuffer(36160,p),e.framebufferRenderbuffer(36160,36064,36161,m),e.bindRenderbuffer(36161,null),null!==n&&(f=e.createRenderbuffer(),e.bindRenderbuffer(36161,f),e.renderbufferStorageMultisample(36161,4,n,u.textureWidth,u.textureHeight),e.framebufferRenderbuffer(36160,x,36161,f),e.bindRenderbuffer(36161,null)),i.bindFramebuffer(36160,null))}s=await r.requestReferenceSpace(o),D.setContext(r),D.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};const C=new mn,P=new mn;function z(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.copy(t.matrixWorld).invert()}this.updateCamera=function(t){if(null===r)return;S.near=w.near=b.near=t.near,S.far=w.far=b.far=t.far,T===S.near&&E===S.far||(r.updateRenderState({depthNear:S.near,depthFar:S.far}),T=S.near,E=S.far);const e=t.parent,n=S.cameras;z(S,e);for(let t=0;t<n.length;t++)z(n[t],e);S.matrixWorld.decompose(S.position,S.quaternion,S.scale),t.position.copy(S.position),t.quaternion.copy(S.quaternion),t.scale.copy(S.scale),t.matrix.copy(S.matrix),t.matrixWorld.copy(S.matrixWorld);const i=t.children;for(let t=0,e=i.length;t<e;t++)i[t].updateMatrixWorld(!0);2===n.length?function(t,e,n){C.setFromMatrixPosition(e.matrixWorld),P.setFromMatrixPosition(n.matrixWorld);const i=C.distanceTo(P),r=e.projectionMatrix.elements,a=n.projectionMatrix.elements,s=r[14]/(r[10]-1),o=r[14]/(r[10]+1),l=(r[9]+1)/r[5],c=(r[9]-1)/r[5],h=(r[8]-1)/r[0],u=(a[8]+1)/a[0],q=s*h,d=s*u,p=i/(-h+u),m=p*-h;e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(m),t.translateZ(p),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.copy(t.matrixWorld).invert();const f=s+p,g=o+p,x=q-m,v=d+(i-m),y=l*o/g*f,_=c*o/g*f;t.projectionMatrix.makePerspective(x,v,y,_,f,g)}(S,b,w):S.projectionMatrix.copy(b.projectionMatrix)},this.getCamera=function(){return S},this.getFoveation=function(){return null!==u?u.fixedFoveation:null!==q?q.fixedFoveation:void 0},this.setFoveation=function(t){null!==u&&(u.fixedFoveation=t),null!==q&&void 0!==q.fixedFoveation&&(q.fixedFoveation=t)};let I=null;const D=new Nr;D.setAnimationLoop((function(t,n){if(l=n.getViewerPose(s),g=n,null!==l){const t=l.views;null!==q&&i.bindXRFramebuffer(q.framebuffer);let n=!1;t.length!==S.cameras.length&&(S.cameras.length=0,n=!0);for(let r=0;r<t.length;r++){const a=t[r];let s=null;if(null!==q)s=q.getViewport(a);else{const t=c.getViewSubImage(u,a);i.bindXRFramebuffer(h),void 0!==t.depthStencilTexture&&e.framebufferTexture2D(36160,x,3553,t.depthStencilTexture,0),e.framebufferTexture2D(36160,36064,3553,t.colorTexture,0),s=t.viewport}const o=M[r];o.matrix.fromArray(a.transform.matrix),o.projectionMatrix.fromArray(a.projectionMatrix),o.viewport.set(s.x,s.y,s.width,s.height),0===r&&S.matrix.copy(o.matrix),!0===n&&S.cameras.push(o)}d&&(i.bindXRFramebuffer(p),null!==v&&e.clear(v))}const a=r.inputSources;for(let t=0;t<y.length;t++){const e=y[t],i=a[t];e.update(i,n,s)}if(I&&I(t,n),d){const t=u.textureWidth,n=u.textureHeight;i.bindFramebuffer(36008,p),i.bindFramebuffer(36009,h),e.invalidateFramebuffer(36008,[x]),e.invalidateFramebuffer(36009,[x]),e.blitFramebuffer(0,0,t,n,0,0,t,n,16384,9728),e.invalidateFramebuffer(36008,[36064]),i.bindFramebuffer(36008,null),i.bindFramebuffer(36009,null),i.bindFramebuffer(36160,p)}g=null})),this.setAnimationLoop=function(t){I=t},this.dispose=function(){}}}function bo(t){function e(e,n){e.opacity.value=n.opacity,n.color&&e.diffuse.value.copy(n.color),n.emissive&&e.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity),n.map&&(e.map.value=n.map),n.alphaMap&&(e.alphaMap.value=n.alphaMap),n.specularMap&&(e.specularMap.value=n.specularMap),n.alphaTest>0&&(e.alphaTest.value=n.alphaTest);const i=t.get(n).envMap;if(i){e.envMap.value=i,e.flipEnvMap.value=i.isCubeTexture&&!1===i.isRenderTargetTexture?-1:1,e.reflectivity.value=n.reflectivity,e.ior.value=n.ior,e.refractionRatio.value=n.refractionRatio;const r=t.get(i).__maxMipLevel;void 0!==r&&(e.maxMipLevel.value=r)}let r,a;n.lightMap&&(e.lightMap.value=n.lightMap,e.lightMapIntensity.value=n.lightMapIntensity),n.aoMap&&(e.aoMap.value=n.aoMap,e.aoMapIntensity.value=n.aoMapIntensity),n.map?r=n.map:n.specularMap?r=n.specularMap:n.displacementMap?r=n.displacementMap:n.normalMap?r=n.normalMap:n.bumpMap?r=n.bumpMap:n.roughnessMap?r=n.roughnessMap:n.metalnessMap?r=n.metalnessMap:n.alphaMap?r=n.alphaMap:n.emissiveMap?r=n.emissiveMap:n.clearcoatMap?r=n.clearcoatMap:n.clearcoatNormalMap?r=n.clearcoatNormalMap:n.clearcoatRoughnessMap?r=n.clearcoatRoughnessMap:n.specularIntensityMap?r=n.specularIntensityMap:n.specularTintMap?r=n.specularTintMap:n.transmissionMap?r=n.transmissionMap:n.thicknessMap&&(r=n.thicknessMap),void 0!==r&&(r.isWebGLRenderTarget&&(r=r.texture),!0===r.matrixAutoUpdate&&r.updateMatrix(),e.uvTransform.value.copy(r.matrix)),n.aoMap?a=n.aoMap:n.lightMap&&(a=n.lightMap),void 0!==a&&(a.isWebGLRenderTarget&&(a=a.texture),!0===a.matrixAutoUpdate&&a.updateMatrix(),e.uv2Transform.value.copy(a.matrix))}function n(e,n){e.roughness.value=n.roughness,e.metalness.value=n.metalness,n.roughnessMap&&(e.roughnessMap.value=n.roughnessMap),n.metalnessMap&&(e.metalnessMap.value=n.metalnessMap),n.emissiveMap&&(e.emissiveMap.value=n.emissiveMap),n.bumpMap&&(e.bumpMap.value=n.bumpMap,e.bumpScale.value=n.bumpScale,n.side===h&&(e.bumpScale.value*=-1)),n.normalMap&&(e.normalMap.value=n.normalMap,e.normalScale.value.copy(n.normalScale),n.side===h&&e.normalScale.value.negate()),n.displacementMap&&(e.displacementMap.value=n.displacementMap,e.displacementScale.value=n.displacementScale,e.displacementBias.value=n.displacementBias),t.get(n).envMap&&(e.envMapIntensity.value=n.envMapIntensity)}return{refreshFogUniforms:function(t,e){t.fogColor.value.copy(e.color),e.isFog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e.isFogExp2&&(t.fogDensity.value=e.density)},refreshMaterialUniforms:function(t,i,r,a,s){i.isMeshBasicMaterial?e(t,i):i.isMeshLambertMaterial?(e(t,i),function(t,e){e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap)}(t,i)):i.isMeshToonMaterial?(e(t,i),function(t,e){e.gradientMap&&(t.gradientMap.value=e.gradientMap),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===h&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===h&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isMeshPhongMaterial?(e(t,i),function(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===h&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===h&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isMeshStandardMaterial?(e(t,i),i.isMeshPhysicalMaterial?function(t,e,i){n(t,e),t.ior.value=e.ior,e.sheen>0&&(t.sheenTint.value.copy(e.sheenTint).multiplyScalar(e.sheen),t.sheenRoughness.value=e.sheenRoughness),e.clearcoat>0&&(t.clearcoat.value=e.clearcoat,t.clearcoatRoughness.value=e.clearcoatRoughness,e.clearcoatMap&&(t.clearcoatMap.value=e.clearcoatMap),e.clearcoatRoughnessMap&&(t.clearcoatRoughnessMap.value=e.clearcoatRoughnessMap),e.clearcoatNormalMap&&(t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),t.clearcoatNormalMap.value=e.clearcoatNormalMap,e.side===h&&t.clearcoatNormalScale.value.negate())),e.transmission>0&&(t.transmission.value=e.transmission,t.transmissionSamplerMap.value=i.texture,t.transmissionSamplerSize.value.set(i.width,i.height),e.transmissionMap&&(t.transmissionMap.value=e.transmissionMap),t.thickness.value=e.thickness,e.thicknessMap&&(t.thicknessMap.value=e.thicknessMap),t.attenuationDistance.value=e.attenuationDistance,t.attenuationTint.value.copy(e.attenuationTint)),t.specularIntensity.value=e.specularIntensity,t.specularTint.value.copy(e.specularTint),e.specularIntensityMap&&(t.specularIntensityMap.value=e.specularIntensityMap),e.specularTintMap&&(t.specularTintMap.value=e.specularTintMap)}(t,i,s):n(t,i)):i.isMeshMatcapMaterial?(e(t,i),function(t,e){e.matcap&&(t.matcap.value=e.matcap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===h&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===h&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isMeshDepthMaterial?(e(t,i),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isMeshDistanceMaterial?(e(t,i),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias),t.referencePosition.value.copy(e.referencePosition),t.nearDistance.value=e.nearDistance,t.farDistance.value=e.farDistance}(t,i)):i.isMeshNormalMaterial?(e(t,i),function(t,e){e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===h&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===h&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isLineBasicMaterial?(function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity}(t,i),i.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(t,i)):i.isPointsMaterial?function(t,e,n,i){let r;t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*n,t.scale.value=.5*i,e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.alphaTest>0&&(t.alphaTest.value=e.alphaTest),e.map?r=e.map:e.alphaMap&&(r=e.alphaMap),void 0!==r&&(!0===r.matrixAutoUpdate&&r.updateMatrix(),t.uvTransform.value.copy(r.matrix))}(t,i,r,a):i.isSpriteMaterial?function(t,e){let n;t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.alphaTest>0&&(t.alphaTest.value=e.alphaTest),e.map?n=e.map:e.alphaMap&&(n=e.alphaMap),void 0!==n&&(!0===n.matrixAutoUpdate&&n.updateMatrix(),t.uvTransform.value.copy(n.matrix))}(t,i):i.isShadowMaterial?(t.color.value.copy(i.color),t.opacity.value=i.opacity):i.isShaderMaterial&&(i.uniformsNeedUpdate=!1)}}}function wo(t={}){const e=void 0!==t.canvas?t.canvas:function(){const t=an("canvas");return t.style.display="block",t}(),n=void 0!==t.context?t.context:null,i=void 0!==t.alpha&&t.alpha,r=void 0===t.depth||t.depth,a=void 0===t.stencil||t.stencil,s=void 0!==t.antialias&&t.antialias,o=void 0===t.premultipliedAlpha||t.premultipliedAlpha,l=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,q=void 0!==t.powerPreference?t.powerPreference:"default",d=void 0!==t.failIfMajorPerformanceCaveat&&t.failIfMajorPerformanceCaveat;let p=null,m=null;const f=[],g=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=Re,this.physicallyCorrectLights=!1,this.toneMapping=W,this.toneMappingExposure=1;const x=this;let v=!1,y=0,_=0,b=null,w=-1,M=null;const S=new un,T=new un;let E=null,A=e.width,L=e.height,R=1,C=null,P=null;const z=new un(0,0,A,L),I=new un(0,0,A,L);let D=!1;const N=[],O=new Dr;let B=!1,F=!1,U=null;const H=new jn,k=new mn,G={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function V(){return null===b?R:1}let j,X,Y,Z,J,Q,K,$,tt,et,nt,it,at,ot,lt,ct,ht,dt,pt,mt,ft,gt,yt,_t=n;function bt(t,n){for(let i=0;i<t.length;i++){const r=t[i],a=e.getContext(r,n);if(null!==a)return a}return null}try{const t={alpha:i,depth:r,stencil:a,antialias:s,premultipliedAlpha:o,preserveDrawingBuffer:l,powerPreference:q,failIfMajorPerformanceCaveat:d};if(e.addEventListener("webglcontextlost",St,!1),e.addEventListener("webglcontextrestored",Et,!1),null===_t){const e=["webgl2","webgl","experimental-webgl"];if(!0===x.isWebGL1Renderer&&e.shift(),_t=bt(e,t),null===_t)throw bt(e)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===_t.getShaderPrecisionFormat&&(_t.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(t){throw console.error("THREE.WebGLRenderer: "+t.message),t}function wt(){j=new ga(_t),X=new Wr(_t,j,t),j.init(X),gt=new fo(_t,j,X),Y=new po(_t,j,X),N[0]=1029,Z=new ya(_t),J=new Qs,Q=new mo(_t,j,Y,J,X,gt,Z),K=new Xr(x),$=new fa(x),tt=new Or(_t,X),yt=new Gr(_t,j,tt,X),et=new xa(_t,tt,Z,yt),nt=new Ta(_t,et,tt,Z),pt=new Sa(_t,X,Q),ct=new jr(J),it=new Js(x,K,$,j,X,yt,ct),at=new bo(J),ot=new eo(J),lt=new oo(j,X),dt=new kr(x,K,Y,nt,o),ht=new qo(x,nt,X),mt=new Vr(_t,j,Z,X),ft=new va(_t,j,Z,X),Z.programs=it.programs,x.capabilities=X,x.extensions=j,x.properties=J,x.renderLists=ot,x.shadowMap=ht,x.state=Y,x.info=Z}wt();const Mt=new _o(x,_t);function St(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),v=!0}function Et(){console.log("THREE.WebGLRenderer: Context Restored."),v=!1;const t=Z.autoReset,e=ht.enabled,n=ht.autoUpdate,i=ht.needsUpdate,r=ht.type;wt(),Z.autoReset=t,ht.enabled=e,ht.autoUpdate=n,ht.needsUpdate=i,ht.type=r}function At(t){const e=t.target;e.removeEventListener("dispose",At),function(t){(function(t){const e=J.get(t).programs;void 0!==e&&e.forEach((function(t){it.releaseProgram(t)}))})(t),J.remove(t)}(e)}this.xr=Mt,this.getContext=function(){return _t},this.getContextAttributes=function(){return _t.getContextAttributes()},this.forceContextLoss=function(){const t=j.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){const t=j.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return R},this.setPixelRatio=function(t){void 0!==t&&(R=t,this.setSize(A,L,!1))},this.getSize=function(t){return t.set(A,L)},this.setSize=function(t,n,i){Mt.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(A=t,L=n,e.width=Math.floor(t*R),e.height=Math.floor(n*R),!1!==i&&(e.style.width=t+"px",e.style.height=n+"px"),this.setViewport(0,0,t,n))},this.getDrawingBufferSize=function(t){return t.set(A*R,L*R).floor()},this.setDrawingBufferSize=function(t,n,i){A=t,L=n,R=i,e.width=Math.floor(t*i),e.height=Math.floor(n*i),this.setViewport(0,0,t,n)},this.getCurrentViewport=function(t){return t.copy(S)},this.getViewport=function(t){return t.copy(z)},this.setViewport=function(t,e,n,i){t.isVector4?z.set(t.x,t.y,t.z,t.w):z.set(t,e,n,i),Y.viewport(S.copy(z).multiplyScalar(R).floor())},this.getScissor=function(t){return t.copy(I)},this.setScissor=function(t,e,n,i){t.isVector4?I.set(t.x,t.y,t.z,t.w):I.set(t,e,n,i),Y.scissor(T.copy(I).multiplyScalar(R).floor())},this.getScissorTest=function(){return D},this.setScissorTest=function(t){Y.setScissorTest(D=t)},this.setOpaqueSort=function(t){C=t},this.setTransparentSort=function(t){P=t},this.getClearColor=function(t){return t.copy(dt.getClearColor())},this.setClearColor=function(){dt.setClearColor.apply(dt,arguments)},this.getClearAlpha=function(){return dt.getClearAlpha()},this.setClearAlpha=function(){dt.setClearAlpha.apply(dt,arguments)},this.clear=function(t,e,n){let i=0;(void 0===t||t)&&(i|=16384),(void 0===e||e)&&(i|=256),(void 0===n||n)&&(i|=1024),_t.clear(i)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",St,!1),e.removeEventListener("webglcontextrestored",Et,!1),ot.dispose(),lt.dispose(),J.dispose(),K.dispose(),$.dispose(),nt.dispose(),yt.dispose(),Mt.dispose(),Mt.removeEventListener("sessionstart",Rt),Mt.removeEventListener("sessionend",Ct),U&&(U.dispose(),U=null),Pt.stop()},this.renderBufferImmediate=function(t,e){yt.initAttributes();const n=J.get(t);t.hasPositions&&!n.position&&(n.position=_t.createBuffer()),t.hasNormals&&!n.normal&&(n.normal=_t.createBuffer()),t.hasUvs&&!n.uv&&(n.uv=_t.createBuffer()),t.hasColors&&!n.color&&(n.color=_t.createBuffer());const i=e.getAttributes();t.hasPositions&&(_t.bindBuffer(34962,n.position),_t.bufferData(34962,t.positionArray,35048),yt.enableAttribute(i.position.location),_t.vertexAttribPointer(i.position.location,3,5126,!1,0,0)),t.hasNormals&&(_t.bindBuffer(34962,n.normal),_t.bufferData(34962,t.normalArray,35048),yt.enableAttribute(i.normal.location),_t.vertexAttribPointer(i.normal.location,3,5126,!1,0,0)),t.hasUvs&&(_t.bindBuffer(34962,n.uv),_t.bufferData(34962,t.uvArray,35048),yt.enableAttribute(i.uv.location),_t.vertexAttribPointer(i.uv.location,2,5126,!1,0,0)),t.hasColors&&(_t.bindBuffer(34962,n.color),_t.bufferData(34962,t.colorArray,35048),yt.enableAttribute(i.color.location),_t.vertexAttribPointer(i.color.location,3,5126,!1,0,0)),yt.disableUnusedAttributes(),_t.drawArrays(4,0,t.count),t.count=0},this.renderBufferDirect=function(t,e,n,i,r,a){null===e&&(e=G);const s=r.isMesh&&r.matrixWorld.determinant()<0,o=Ft(t,e,n,i,r);Y.setMaterial(i,s);let l=n.index;const c=n.attributes.position;if(null===l){if(void 0===c||0===c.count)return}else if(0===l.count)return;let h,u=1;!0===i.wireframe&&(l=et.getWireframeAttribute(n),u=2),yt.setup(r,i,o,n,l);let q=mt;null!==l&&(h=tt.get(l),q=ft,q.setIndex(h));const d=null!==l?l.count:c.count,p=n.drawRange.start*u,m=n.drawRange.count*u,f=null!==a?a.start*u:0,g=null!==a?a.count*u:1/0,x=Math.max(p,f),v=Math.min(d,p+m,f+g)-1,y=Math.max(0,v-x+1);if(0!==y){if(r.isMesh)!0===i.wireframe?(Y.setLineWidth(i.wireframeLinewidth*V()),q.setMode(1)):q.setMode(4);else if(r.isLine){let t=i.linewidth;void 0===t&&(t=1),Y.setLineWidth(t*V()),r.isLineSegments?q.setMode(1):r.isLineLoop?q.setMode(2):q.setMode(3)}else r.isPoints?q.setMode(0):r.isSprite&&q.setMode(4);if(r.isInstancedMesh)q.renderInstances(x,y,r.count);else if(n.isInstancedBufferGeometry){const t=Math.min(n.instanceCount,n._maxInstanceCount);q.renderInstances(x,y,t)}else q.render(x,y)}},this.compile=function(t,e){m=lt.get(t),m.init(),g.push(m),t.traverseVisible((function(t){t.isLight&&t.layers.test(e.layers)&&(m.pushLight(t),t.castShadow&&m.pushShadow(t))})),m.setupLights(x.physicallyCorrectLights),t.traverse((function(e){const n=e.material;if(n)if(Array.isArray(n))for(let i=0;i<n.length;i++)Ot(n[i],t,e);else Ot(n,t,e)})),g.pop(),m=null};let Lt=null;function Rt(){Pt.stop()}function Ct(){Pt.start()}const Pt=new Nr;function zt(t,e,n,i){if(!1===t.visible)return;if(t.layers.test(e.layers))if(t.isGroup)n=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(e);else if(t.isLight)m.pushLight(t),t.castShadow&&m.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||O.intersectsSprite(t)){i&&k.setFromMatrixPosition(t.matrixWorld).applyMatrix4(H);const e=nt.update(t),r=t.material;r.visible&&p.push(t,e,r,n,k.z,null)}}else if(t.isImmediateRenderObject)i&&k.setFromMatrixPosition(t.matrixWorld).applyMatrix4(H),p.push(t,null,t.material,n,k.z,null);else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.frame!==Z.render.frame&&(t.skeleton.update(),t.skeleton.frame=Z.render.frame),!t.frustumCulled||O.intersectsObject(t))){i&&k.setFromMatrixPosition(t.matrixWorld).applyMatrix4(H);const e=nt.update(t),r=t.material;if(Array.isArray(r)){const i=e.groups;for(let a=0,s=i.length;a<s;a++){const s=i[a],o=r[s.materialIndex];o&&o.visible&&p.push(t,e,o,n,k.z,s)}}else r.visible&&p.push(t,e,r,n,k.z,null)}const r=t.children;for(let t=0,a=r.length;t<a;t++)zt(r[t],e,n,i)}function It(t,e,n,i){const r=t.opaque,a=t.transmissive,o=t.transparent;m.setupLightsView(n),a.length>0&&function(t,e,n){if(null===U){const t=!0===s&&!0===X.isWebGL2;U=new(t?dn:qn)(1024,1024,{generateMipmaps:!0,type:null!==gt.convert(vt)?vt:qt,minFilter:ut,magFilter:st,wrapS:rt,wrapT:rt})}const i=x.getRenderTarget();x.setRenderTarget(U),x.clear();const r=x.toneMapping;x.toneMapping=W,Dt(t,e,n),x.toneMapping=r,Q.updateMultisampleRenderTarget(U),Q.updateRenderTargetMipmap(U),x.setRenderTarget(i)}(r,e,n),i&&Y.viewport(S.copy(i)),r.length>0&&Dt(r,e,n),a.length>0&&Dt(a,e,n),o.length>0&&Dt(o,e,n)}function Dt(t,e,n){const i=!0===e.isScene?e.overrideMaterial:null;for(let r=0,a=t.length;r<a;r++){const a=t[r],s=a.object,o=a.geometry,l=null===i?a.material:i,c=a.group;s.layers.test(n.layers)&&Nt(s,e,n,o,l,c)}}function Nt(t,e,n,i,r,a){if(t.onBeforeRender(x,e,n,i,r,a),t.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),r.onBeforeRender(x,e,n,i,t,a),t.isImmediateRenderObject){const a=Ft(n,e,i,r,t);Y.setMaterial(r),yt.reset(),function(t,e){t.render((function(t){x.renderBufferImmediate(t,e)}))}(t,a)}else!0===r.transparent&&r.side===u?(r.side=h,r.needsUpdate=!0,x.renderBufferDirect(n,e,i,r,t,a),r.side=c,r.needsUpdate=!0,x.renderBufferDirect(n,e,i,r,t,a),r.side=u):x.renderBufferDirect(n,e,i,r,t,a);t.onAfterRender(x,e,n,i,r,a)}function Ot(t,e,n){!0!==e.isScene&&(e=G);const i=J.get(t),r=m.state.lights,a=m.state.shadowsArray,s=r.state.version,o=it.getParameters(t,r.state,a,e,n),l=it.getProgramCacheKey(o);let c=i.programs;i.environment=t.isMeshStandardMaterial?e.environment:null,i.fog=e.fog,i.envMap=(t.isMeshStandardMaterial?$:K).get(t.envMap||i.environment),void 0===c&&(t.addEventListener("dispose",At),c=new Map,i.programs=c);let h=c.get(l);if(void 0!==h){if(i.currentProgram===h&&i.lightsStateVersion===s)return Bt(t,o),h}else o.uniforms=it.getUniforms(t),t.onBuild(o,x),t.onBeforeCompile(o,x),h=it.acquireProgram(o,l),c.set(l,h),i.uniforms=o.uniforms;const u=i.uniforms;(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(u.clippingPlanes=ct.uniform),Bt(t,o),i.needsLights=function(t){return t.isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights}(t),i.lightsStateVersion=s,i.needsLights&&(u.ambientLightColor.value=r.state.ambient,u.lightProbe.value=r.state.probe,u.directionalLights.value=r.state.directional,u.directionalLightShadows.value=r.state.directionalShadow,u.spotLights.value=r.state.spot,u.spotLightShadows.value=r.state.spotShadow,u.rectAreaLights.value=r.state.rectArea,u.ltc_1.value=r.state.rectAreaLTC1,u.ltc_2.value=r.state.rectAreaLTC2,u.pointLights.value=r.state.point,u.pointLightShadows.value=r.state.pointShadow,u.hemisphereLights.value=r.state.hemi,u.directionalShadowMap.value=r.state.directionalShadowMap,u.directionalShadowMatrix.value=r.state.directionalShadowMatrix,u.spotShadowMap.value=r.state.spotShadowMap,u.spotShadowMatrix.value=r.state.spotShadowMatrix,u.pointShadowMap.value=r.state.pointShadowMap,u.pointShadowMatrix.value=r.state.pointShadowMatrix);const q=h.getUniforms(),d=Ls.seqWithValue(q.seq,u);return i.currentProgram=h,i.uniformsList=d,h}function Bt(t,e){const n=J.get(t);n.outputEncoding=e.outputEncoding,n.instancing=e.instancing,n.skinning=e.skinning,n.morphTargets=e.morphTargets,n.morphNormals=e.morphNormals,n.morphTargetsCount=e.morphTargetsCount,n.numClippingPlanes=e.numClippingPlanes,n.numIntersection=e.numClipIntersection,n.vertexAlphas=e.vertexAlphas,n.vertexTangents=e.vertexTangents}function Ft(t,e,n,i,r){!0!==e.isScene&&(e=G),Q.resetTextureUnits();const a=e.fog,s=i.isMeshStandardMaterial?e.environment:null,o=null===b?x.outputEncoding:b.texture.encoding,l=(i.isMeshStandardMaterial?$:K).get(i.envMap||s),c=!0===i.vertexColors&&!!n&&!!n.attributes.color&&4===n.attributes.color.itemSize,h=!!i.normalMap&&!!n&&!!n.attributes.tangent,u=!!n&&!!n.morphAttributes.position,q=!!n&&!!n.morphAttributes.normal,d=n&&n.morphAttributes.position?n.morphAttributes.position.length:0,p=J.get(i),f=m.state.lights;if(!0===B&&(!0===F||t!==M)){const e=t===M&&i.id===w;ct.setState(i,t,e)}let g=!1;i.version===p.__version?p.needsLights&&p.lightsStateVersion!==f.state.version||p.outputEncoding!==o||r.isInstancedMesh&&!1===p.instancing?g=!0:r.isInstancedMesh||!0!==p.instancing?r.isSkinnedMesh&&!1===p.skinning?g=!0:r.isSkinnedMesh||!0!==p.skinning?p.envMap!==l||i.fog&&p.fog!==a?g=!0:void 0===p.numClippingPlanes||p.numClippingPlanes===ct.numPlanes&&p.numIntersection===ct.numIntersection?(p.vertexAlphas!==c||p.vertexTangents!==h||p.morphTargets!==u||p.morphNormals!==q||!0===X.isWebGL2&&p.morphTargetsCount!==d)&&(g=!0):g=!0:g=!0:g=!0:(g=!0,p.__version=i.version);let v=p.currentProgram;!0===g&&(v=Ot(i,e,r));let y=!1,_=!1,S=!1;const T=v.getUniforms(),E=p.uniforms;if(Y.useProgram(v.program)&&(y=!0,_=!0,S=!0),i.id!==w&&(w=i.id,_=!0),y||M!==t){if(T.setValue(_t,"projectionMatrix",t.projectionMatrix),X.logarithmicDepthBuffer&&T.setValue(_t,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),M!==t&&(M=t,_=!0,S=!0),i.isShaderMaterial||i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshStandardMaterial||i.envMap){const e=T.map.cameraPosition;void 0!==e&&e.setValue(_t,k.setFromMatrixPosition(t.matrixWorld))}(i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial)&&T.setValue(_t,"isOrthographic",!0===t.isOrthographicCamera),(i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial||i.isShadowMaterial||r.isSkinnedMesh)&&T.setValue(_t,"viewMatrix",t.matrixWorldInverse)}if(r.isSkinnedMesh){T.setOptional(_t,r,"bindMatrix"),T.setOptional(_t,r,"bindMatrixInverse");const t=r.skeleton;t&&(X.floatVertexTextures?(null===t.boneTexture&&t.computeBoneTexture(),T.setValue(_t,"boneTexture",t.boneTexture,Q),T.setValue(_t,"boneTextureSize",t.boneTextureSize)):T.setOptional(_t,t,"boneMatrices"))}var A,C;return!n||void 0===n.morphAttributes.position&&void 0===n.morphAttributes.normal||pt.update(r,n,i,v),(_||p.receiveShadow!==r.receiveShadow)&&(p.receiveShadow=r.receiveShadow,T.setValue(_t,"receiveShadow",r.receiveShadow)),_&&(T.setValue(_t,"toneMappingExposure",x.toneMappingExposure),p.needsLights&&(C=S,(A=E).ambientLightColor.needsUpdate=C,A.lightProbe.needsUpdate=C,A.directionalLights.needsUpdate=C,A.directionalLightShadows.needsUpdate=C,A.pointLights.needsUpdate=C,A.pointLightShadows.needsUpdate=C,A.spotLights.needsUpdate=C,A.spotLightShadows.needsUpdate=C,A.rectAreaLights.needsUpdate=C,A.hemisphereLights.needsUpdate=C),a&&i.fog&&at.refreshFogUniforms(E,a),at.refreshMaterialUniforms(E,i,R,L,U),Ls.upload(_t,p.uniformsList,E,Q)),i.isShaderMaterial&&!0===i.uniformsNeedUpdate&&(Ls.upload(_t,p.uniformsList,E,Q),i.uniformsNeedUpdate=!1),i.isSpriteMaterial&&T.setValue(_t,"center",r.center),T.setValue(_t,"modelViewMatrix",r.modelViewMatrix),T.setValue(_t,"normalMatrix",r.normalMatrix),T.setValue(_t,"modelMatrix",r.matrixWorld),v}Pt.setAnimationLoop((function(t){Lt&&Lt(t)})),"undefined"!=typeof window&&Pt.setContext(window),this.setAnimationLoop=function(t){Lt=t,Mt.setAnimationLoop(t),null===t?Pt.stop():Pt.start()},Mt.addEventListener("sessionstart",Rt),Mt.addEventListener("sessionend",Ct),this.render=function(t,e){if(void 0!==e&&!0!==e.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===v)return;!0===t.autoUpdate&&t.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),!0===Mt.enabled&&!0===Mt.isPresenting&&(!0===Mt.cameraAutoUpdate&&Mt.updateCamera(e),e=Mt.getCamera()),!0===t.isScene&&t.onBeforeRender(x,t,e,b),m=lt.get(t,g.length),m.init(),g.push(m),H.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),O.setFromProjectionMatrix(H),F=this.localClippingEnabled,B=ct.init(this.clippingPlanes,F,e),p=ot.get(t,f.length),p.init(),f.push(p),zt(t,e,0,x.sortObjects),p.finish(),!0===x.sortObjects&&p.sort(C,P),!0===B&&ct.beginShadows();const n=m.state.shadowsArray;if(ht.render(n,t,e),!0===B&&ct.endShadows(),!0===this.info.autoReset&&this.info.reset(),dt.render(p,t),m.setupLights(x.physicallyCorrectLights),e.isArrayCamera){const n=e.cameras;for(let e=0,i=n.length;e<i;e++){const i=n[e];It(p,t,i,i.viewport)}}else It(p,t,e);null!==b&&(Q.updateMultisampleRenderTarget(b),Q.updateRenderTargetMipmap(b)),!0===t.isScene&&t.onAfterRender(x,t,e),Y.buffers.depth.setTest(!0),Y.buffers.depth.setMask(!0),Y.buffers.color.setMask(!0),Y.setPolygonOffset(!1),yt.resetDefaultState(),w=-1,M=null,g.pop(),m=g.length>0?g[g.length-1]:null,f.pop(),p=f.length>0?f[f.length-1]:null},this.getActiveCubeFace=function(){return y},this.getActiveMipmapLevel=function(){return _},this.getRenderTarget=function(){return b},this.setRenderTarget=function(t,e=0,n=0){b=t,y=e,_=n,t&&void 0===J.get(t).__webglFramebuffer&&Q.setupRenderTarget(t);let i=null,r=!1,a=!1;if(t){const n=t.texture;(n.isDataTexture3D||n.isDataTexture2DArray)&&(a=!0);const s=J.get(t).__webglFramebuffer;t.isWebGLCubeRenderTarget?(i=s[e],r=!0):i=t.isWebGLMultisampleRenderTarget?J.get(t).__webglMultisampledFramebuffer:s,S.copy(t.viewport),T.copy(t.scissor),E=t.scissorTest}else S.copy(z).multiplyScalar(R).floor(),T.copy(I).multiplyScalar(R).floor(),E=D;if(Y.bindFramebuffer(36160,i)&&X.drawBuffers){let e=!1;if(t)if(t.isWebGLMultipleRenderTargets){const n=t.texture;if(N.length!==n.length||36064!==N[0]){for(let t=0,e=n.length;t<e;t++)N[t]=36064+t;N.length=n.length,e=!0}}else 1===N.length&&36064===N[0]||(N[0]=36064,N.length=1,e=!0);else 1===N.length&&1029===N[0]||(N[0]=1029,N.length=1,e=!0);e&&(X.isWebGL2?_t.drawBuffers(N):j.get("WEBGL_draw_buffers").drawBuffersWEBGL(N))}if(Y.viewport(S),Y.scissor(T),Y.setScissorTest(E),r){const i=J.get(t.texture);_t.framebufferTexture2D(36160,36064,34069+e,i.__webglTexture,n)}else if(a){const i=J.get(t.texture),r=e||0;_t.framebufferTextureLayer(36160,36064,i.__webglTexture,n||0,r)}w=-1},this.readRenderTargetPixels=function(t,e,n,i,r,a,s){if(!t||!t.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let o=J.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==s&&(o=o[s]),o){Y.bindFramebuffer(36160,o);try{const s=t.texture,o=s.format,l=s.type;if(o!==Tt&&gt.convert(o)!==_t.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const c=l===vt&&(j.has("EXT_color_buffer_half_float")||X.isWebGL2&&j.has("EXT_color_buffer_float"));if(!(l===qt||gt.convert(l)===_t.getParameter(35738)||l===xt&&(X.isWebGL2||j.has("OES_texture_float")||j.has("WEBGL_color_buffer_float"))||c))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===_t.checkFramebufferStatus(36160)?e>=0&&e<=t.width-i&&n>=0&&n<=t.height-r&&_t.readPixels(e,n,i,r,gt.convert(o),gt.convert(l),a):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{const t=null!==b?J.get(b).__webglFramebuffer:null;Y.bindFramebuffer(36160,t)}}},this.copyFramebufferToTexture=function(t,e,n=0){const i=Math.pow(2,-n),r=Math.floor(e.image.width*i),a=Math.floor(e.image.height*i);let s=gt.convert(e.format);X.isWebGL2&&(6407===s&&(s=32849),6408===s&&(s=32856)),Q.setTexture2D(e,0),_t.copyTexImage2D(3553,n,s,t.x,t.y,r,a,0),Y.unbindTexture()},this.copyTextureToTexture=function(t,e,n,i=0){const r=e.image.width,a=e.image.height,s=gt.convert(n.format),o=gt.convert(n.type);Q.setTexture2D(n,0),_t.pixelStorei(37440,n.flipY),_t.pixelStorei(37441,n.premultiplyAlpha),_t.pixelStorei(3317,n.unpackAlignment),e.isDataTexture?_t.texSubImage2D(3553,i,t.x,t.y,r,a,s,o,e.image.data):e.isCompressedTexture?_t.compressedTexSubImage2D(3553,i,t.x,t.y,e.mipmaps[0].width,e.mipmaps[0].height,s,e.mipmaps[0].data):_t.texSubImage2D(3553,i,t.x,t.y,s,o,e.image),0===i&&n.generateMipmaps&&_t.generateMipmap(3553),Y.unbindTexture()},this.copyTextureToTexture3D=function(t,e,n,i,r=0){if(x.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const a=t.max.x-t.min.x+1,s=t.max.y-t.min.y+1,o=t.max.z-t.min.z+1,l=gt.convert(i.format),c=gt.convert(i.type);let h;if(i.isDataTexture3D)Q.setTexture3D(i,0),h=32879;else{if(!i.isDataTexture2DArray)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");Q.setTexture2DArray(i,0),h=35866}_t.pixelStorei(37440,i.flipY),_t.pixelStorei(37441,i.premultiplyAlpha),_t.pixelStorei(3317,i.unpackAlignment);const u=_t.getParameter(3314),q=_t.getParameter(32878),d=_t.getParameter(3316),p=_t.getParameter(3315),m=_t.getParameter(32877),f=n.isCompressedTexture?n.mipmaps[0]:n.image;_t.pixelStorei(3314,f.width),_t.pixelStorei(32878,f.height),_t.pixelStorei(3316,t.min.x),_t.pixelStorei(3315,t.min.y),_t.pixelStorei(32877,t.min.z),n.isDataTexture||n.isDataTexture3D?_t.texSubImage3D(h,r,e.x,e.y,e.z,a,s,o,l,c,f.data):n.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),_t.compressedTexSubImage3D(h,r,e.x,e.y,e.z,a,s,o,l,f.data)):_t.texSubImage3D(h,r,e.x,e.y,e.z,a,s,o,l,c,f),_t.pixelStorei(3314,u),_t.pixelStorei(32878,q),_t.pixelStorei(3316,d),_t.pixelStorei(3315,p),_t.pixelStorei(32877,m),0===r&&i.generateMipmaps&&_t.generateMipmap(h),Y.unbindTexture()},this.initTexture=function(t){Q.setTexture2D(t,0),Y.unbindTexture()},this.resetState=function(){y=0,_=0,b=null,Y.reset(),yt.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}(class extends wo{}).prototype.isWebGL1Renderer=!0;class Mo{constructor(t,e=25e-5){this.name="",this.color=new Oi(t),this.density=e}clone(){return new Mo(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}Mo.prototype.isFogExp2=!0;class So{constructor(t,e=1,n=1e3){this.name="",this.color=new Oi(t),this.near=e,this.far=n}clone(){return new So(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}So.prototype.isFog=!0;class To extends gi{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.environment&&(this.environment=t.environment.clone()),null!==t.fog&&(this.fog=t.fog.clone()),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return null!==this.fog&&(e.object.fog=this.fog.toJSON()),e}}To.prototype.isScene=!0;class Eo{constructor(t,e){this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.usage=ke,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Je()}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this}copyAt(t,e,n){t*=this.stride,n*=e.stride;for(let i=0,r=this.stride;i<r;i++)this.array[t+i]=e.array[n+i];return this}set(t,e=0){return this.array.set(t,e),this}clone(t){void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Je()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(e,this.stride);return n.setUsage(this.usage),n}onUpload(t){return this.onUploadCallback=t,this}toJSON(t){return void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Je()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}Eo.prototype.isInterleavedBuffer=!0;const Ao=new mn;class Lo{constructor(t,e,n,i=!1){this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=!0===i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let e=0,n=this.data.count;e<n;e++)Ao.x=this.getX(e),Ao.y=this.getY(e),Ao.z=this.getZ(e),Ao.applyMatrix4(t),this.setXYZ(e,Ao.x,Ao.y,Ao.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)Ao.x=this.getX(e),Ao.y=this.getY(e),Ao.z=this.getZ(e),Ao.applyNormalMatrix(t),this.setXYZ(e,Ao.x,Ao.y,Ao.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)Ao.x=this.getX(e),Ao.y=this.getY(e),Ao.z=this.getZ(e),Ao.transformDirection(t),this.setXYZ(e,Ao.x,Ao.y,Ao.z);return this}setX(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){return this.data.array[t*this.data.stride+this.offset]}getY(t){return this.data.array[t*this.data.stride+this.offset+1]}getZ(t){return this.data.array[t*this.data.stride+this.offset+2]}getW(t){return this.data.array[t*this.data.stride+this.offset+3]}setXY(t,e,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this}setXYZ(t,e,n,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this}setXYZW(t,e,n,i,r){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this.data.array[t+3]=r,this}clone(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return new Hi(new this.array.constructor(t),this.itemSize,this.normalized)}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new Lo(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}Lo.prototype.isInterleavedBufferAttribute=!0;class Ro extends Ri{constructor(t){super(),this.type="SpriteMaterial",this.color=new Oi(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this}}let Co;Ro.prototype.isSpriteMaterial=!0;const Po=new mn,zo=new mn,Io=new mn,Do=new en,No=new en,Oo=new jn,Bo=new mn,Fo=new mn,Uo=new mn,Ho=new en,ko=new en,Go=new en;class Vo extends gi{constructor(t){if(super(),this.type="Sprite",void 0===Co){Co=new Ki;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),e=new Eo(t,5);Co.setIndex([0,1,2,0,2,3]),Co.setAttribute("position",new Lo(e,3,0,!1)),Co.setAttribute("uv",new Lo(e,2,3,!1))}this.geometry=Co,this.material=void 0!==t?t:new Ro,this.center=new en(.5,.5)}raycast(t,e){null===t.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),zo.setFromMatrixScale(this.matrixWorld),Oo.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),Io.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&zo.multiplyScalar(-Io.z);const n=this.material.rotation;let i,r;0!==n&&(r=Math.cos(n),i=Math.sin(n));const a=this.center;Wo(Bo.set(-.5,-.5,0),Io,a,zo,i,r),Wo(Fo.set(.5,-.5,0),Io,a,zo,i,r),Wo(Uo.set(.5,.5,0),Io,a,zo,i,r),Ho.set(0,0),ko.set(1,0),Go.set(1,1);let s=t.ray.intersectTriangle(Bo,Fo,Uo,!1,Po);if(null===s&&(Wo(Fo.set(-.5,.5,0),Io,a,zo,i,r),ko.set(0,1),s=t.ray.intersectTriangle(Bo,Uo,Fo,!1,Po),null===s))return;const o=t.ray.origin.distanceTo(Po);o<t.near||o>t.far||e.push({distance:o,point:Po.clone(),uv:Ai.getUV(Po,Bo,Fo,Uo,Ho,ko,Go,new en),face:null,object:this})}copy(t){return super.copy(t),void 0!==t.center&&this.center.copy(t.center),this.material=t.material,this}}function Wo(t,e,n,i,r,a){Do.subVectors(t,n).addScalar(.5).multiply(i),void 0!==r?(No.x=a*Do.x-r*Do.y,No.y=r*Do.x+a*Do.y):No.copy(Do),t.copy(e),t.x+=No.x,t.y+=No.y,t.applyMatrix4(Oo)}Vo.prototype.isSprite=!0;const jo=new mn,Xo=new un,Yo=new un,Zo=new mn,Jo=new jn;class Qo extends fr{constructor(t,e){super(t,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new jn,this.bindMatrixInverse=new jn}copy(t){return super.copy(t),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,this}bind(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const t=new un,e=this.geometry.attributes.skinWeight;for(let n=0,i=e.count;n<i;n++){t.x=e.getX(n),t.y=e.getY(n),t.z=e.getZ(n),t.w=e.getW(n);const i=1/t.manhattanLength();i!==1/0?t.multiplyScalar(i):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}}updateMatrixWorld(t){super.updateMatrixWorld(t),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(t,e){const n=this.skeleton,i=this.geometry;Xo.fromBufferAttribute(i.attributes.skinIndex,t),Yo.fromBufferAttribute(i.attributes.skinWeight,t),jo.copy(e).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let t=0;t<4;t++){const i=Yo.getComponent(t);if(0!==i){const r=Xo.getComponent(t);Jo.multiplyMatrices(n.bones[r].matrixWorld,n.boneInverses[r]),e.addScaledVector(Zo.copy(jo).applyMatrix4(Jo),i)}}return e.applyMatrix4(this.bindMatrixInverse)}}Qo.prototype.isSkinnedMesh=!0;(class extends gi{constructor(){super(),this.type="Bone"}}).prototype.isBone=!0;(class extends cn{constructor(t=null,e=1,n=1,i,r,a,s,o,l=st,c=st,h,u){super(null,a,s,o,l,c,i,r,h,u),this.image={data:t,width:e,height:n},this.magFilter=l,this.minFilter=c,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}).prototype.isDataTexture=!0;class Ko extends Hi{constructor(t,e,n,i=1){"number"==typeof n&&(i=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(t,e,n),this.meshPerAttribute=i}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}toJSON(){const t=super.toJSON();return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}Ko.prototype.isInstancedBufferAttribute=!0;const $o=new jn,tl=new jn,el=[],nl=new fr;(class extends fr{constructor(t,e,n){super(t,e),this.instanceMatrix=new Ko(new Float32Array(16*n),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}copy(t){return super.copy(t),this.instanceMatrix.copy(t.instanceMatrix),null!==t.instanceColor&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,this}getColorAt(t,e){e.fromArray(this.instanceColor.array,3*t)}getMatrixAt(t,e){e.fromArray(this.instanceMatrix.array,16*t)}raycast(t,e){const n=this.matrixWorld,i=this.count;if(nl.geometry=this.geometry,nl.material=this.material,void 0!==nl.material)for(let r=0;r<i;r++){this.getMatrixAt(r,$o),tl.multiplyMatrices(n,$o),nl.matrixWorld=tl,nl.raycast(t,el);for(let t=0,n=el.length;t<n;t++){const n=el[t];n.instanceId=r,n.object=this,e.push(n)}el.length=0}}setColorAt(t,e){null===this.instanceColor&&(this.instanceColor=new Ko(new Float32Array(3*this.instanceMatrix.count),3)),e.toArray(this.instanceColor.array,3*t)}setMatrixAt(t,e){e.toArray(this.instanceMatrix.array,16*t)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}).prototype.isInstancedMesh=!0;class il extends Ri{constructor(t){super(),this.type="LineBasicMaterial",this.color=new Oi(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this}}il.prototype.isLineBasicMaterial=!0;const rl=new mn,al=new mn,sl=new jn,ol=new Wn,ll=new On;class cl extends gi{constructor(t=new Ki,e=new il){super(),this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t){return super.copy(t),this.material=t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,n=[0];for(let t=1,i=e.count;t<i;t++)rl.fromBufferAttribute(e,t-1),al.fromBufferAttribute(e,t),n[t]=n[t-1],n[t]+=rl.distanceTo(al);t.setAttribute("lineDistance",new Vi(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else t.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,r=t.params.Line.threshold,a=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),ll.copy(n.boundingSphere),ll.applyMatrix4(i),ll.radius+=r,!1===t.ray.intersectsSphere(ll))return;sl.copy(i).invert(),ol.copy(t.ray).applyMatrix4(sl);const s=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s,l=new mn,c=new mn,h=new mn,u=new mn,q=this.isLineSegments?2:1;if(n.isBufferGeometry){const i=n.index,r=n.attributes.position;if(null!==i)for(let n=Math.max(0,a.start),s=Math.min(i.count,a.start+a.count)-1;n<s;n+=q){const a=i.getX(n),s=i.getX(n+1);if(l.fromBufferAttribute(r,a),c.fromBufferAttribute(r,s),ol.distanceSqToSegment(l,c,u,h)>o)continue;u.applyMatrix4(this.matrixWorld);const q=t.ray.origin.distanceTo(u);q<t.near||q>t.far||e.push({distance:q,point:h.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}else for(let n=Math.max(0,a.start),i=Math.min(r.count,a.start+a.count)-1;n<i;n+=q){if(l.fromBufferAttribute(r,n),c.fromBufferAttribute(r,n+1),ol.distanceSqToSegment(l,c,u,h)>o)continue;u.applyMatrix4(this.matrixWorld);const i=t.ray.origin.distanceTo(u);i<t.near||i>t.far||e.push({distance:i,point:h.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}else n.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}cl.prototype.isLine=!0;const hl=new mn,ul=new mn;class ql extends cl{constructor(t,e){super(t,e),this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,n=[];for(let t=0,i=e.count;t<i;t+=2)hl.fromBufferAttribute(e,t),ul.fromBufferAttribute(e,t+1),n[t]=0===t?0:n[t-1],n[t+1]=n[t]+hl.distanceTo(ul);t.setAttribute("lineDistance",new Vi(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else t.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}ql.prototype.isLineSegments=!0;(class extends cl{constructor(t,e){super(t,e),this.type="LineLoop"}}).prototype.isLineLoop=!0;class dl extends Ri{constructor(t){super(),this.type="PointsMaterial",this.color=new Oi(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this}}dl.prototype.isPointsMaterial=!0;const pl=new jn,ml=new Wn,fl=new On,gl=new mn;function xl(t,e,n,i,r,a,s){const o=ml.distanceSqToPoint(t);if(o<n){const n=new mn;ml.closestPointToPoint(t,n),n.applyMatrix4(i);const l=r.ray.origin.distanceTo(n);if(l<r.near||l>r.far)return;a.push({distance:l,distanceToRay:Math.sqrt(o),point:n,index:e,face:null,object:s})}}(class extends gi{constructor(t=new Ki,e=new dl){super(),this.type="Points",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t){return super.copy(t),this.material=t.material,this.geometry=t.geometry,this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,r=t.params.Points.threshold,a=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),fl.copy(n.boundingSphere),fl.applyMatrix4(i),fl.radius+=r,!1===t.ray.intersectsSphere(fl))return;pl.copy(i).invert(),ml.copy(t.ray).applyMatrix4(pl);const s=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s;if(n.isBufferGeometry){const r=n.index,s=n.attributes.position;if(null!==r)for(let n=Math.max(0,a.start),l=Math.min(r.count,a.start+a.count);n<l;n++){const a=r.getX(n);gl.fromBufferAttribute(s,a),xl(gl,a,o,i,t,e,this)}else for(let n=Math.max(0,a.start),r=Math.min(s.count,a.start+a.count);n<r;n++)gl.fromBufferAttribute(s,n),xl(gl,n,o,i,t,e,this)}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}).prototype.isPoints=!0,class extends cn{constructor(t,e,n,i,r,a,s,o,l){super(t,e,n,i,r,a,s,o,l),this.format=void 0!==s?s:St,this.minFilter=void 0!==a?a:ct,this.magFilter=void 0!==r?r:ct,this.generateMipmaps=!1;const c=this;"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback((function e(){c.needsUpdate=!0,t.requestVideoFrameCallback(e)}))}clone(){return new this.constructor(this.image).copy(this)}update(){const t=this.image;!1=="requestVideoFrameCallback"in t&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}.prototype.isVideoTexture=!0;(class extends cn{constructor(t,e,n,i,r,a,s,o,l,c,h,u){super(null,a,s,o,l,c,i,r,h,u),this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}}).prototype.isCompressedTexture=!0,class extends cn{constructor(t,e,n,i,r,a,s,o,l){super(t,e,n,i,r,a,s,o,l),this.needsUpdate=!0}}.prototype.isCanvasTexture=!0,class extends cn{constructor(t,e,n,i,r,a,s,o,l,c){if((c=void 0!==c?c:Rt)!==Rt&&c!==Ct)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&c===Rt&&(n=mt),void 0===n&&c===Ct&&(n=wt),super(null,i,r,a,s,o,c,n,l),this.image={width:t,height:e},this.magFilter=void 0!==s?s:st,this.minFilter=void 0!==o?o:st,this.flipY=!1,this.generateMipmaps=!1}}.prototype.isDepthTexture=!0,new mn,new mn,new mn,new Ai;class vl{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)}getPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e}getSpacedPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,i=this.getPoint(0),r=0;e.push(0);for(let a=1;a<=t;a++)n=this.getPoint(a/t),r+=n.distanceTo(i),e.push(r),i=n;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e){const n=this.getLengths();let i=0;const r=n.length;let a;a=e||t*n[r-1];let s,o=0,l=r-1;for(;o<=l;)if(i=Math.floor(o+(l-o)/2),s=n[i]-a,s<0)o=i+1;else{if(!(s>0)){l=i;break}l=i-1}if(i=l,n[i]===a)return i/(r-1);const c=n[i];return(i+(a-c)/(n[i+1]-c))/(r-1)}getTangent(t,e){const n=1e-4;let i=t-n,r=t+n;i<0&&(i=0),r>1&&(r=1);const a=this.getPoint(i),s=this.getPoint(r),o=e||(a.isVector2?new en:new mn);return o.copy(s).sub(a).normalize(),o}getTangentAt(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)}computeFrenetFrames(t,e){const n=new mn,i=[],r=[],a=[],s=new mn,o=new jn;for(let e=0;e<=t;e++){const n=e/t;i[e]=this.getTangentAt(n,new mn)}r[0]=new mn,a[0]=new mn;let l=Number.MAX_VALUE;const c=Math.abs(i[0].x),h=Math.abs(i[0].y),u=Math.abs(i[0].z);c<=l&&(l=c,n.set(1,0,0)),h<=l&&(l=h,n.set(0,1,0)),u<=l&&n.set(0,0,1),s.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],s),a[0].crossVectors(i[0],r[0]);for(let e=1;e<=t;e++){if(r[e]=r[e-1].clone(),a[e]=a[e-1].clone(),s.crossVectors(i[e-1],i[e]),s.length()>Number.EPSILON){s.normalize();const t=Math.acos(Qe(i[e-1].dot(i[e]),-1,1));r[e].applyMatrix4(o.makeRotationAxis(s,t))}a[e].crossVectors(i[e],r[e])}if(!0===e){let e=Math.acos(Qe(r[0].dot(r[t]),-1,1));e/=t,i[0].dot(s.crossVectors(r[0],r[t]))>0&&(e=-e);for(let n=1;n<=t;n++)r[n].applyMatrix4(o.makeRotationAxis(i[n],e*n)),a[n].crossVectors(i[n],r[n])}return{tangents:i,normals:r,binormals:a}}clone(){return(new this.constructor).copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class yl extends vl{constructor(t=0,e=0,n=1,i=1,r=0,a=2*Math.PI,s=!1,o=0){super(),this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=a,this.aClockwise=s,this.aRotation=o}getPoint(t,e){const n=e||new en,i=2*Math.PI;let r=this.aEndAngle-this.aStartAngle;const a=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(r=a?0:i),!0!==this.aClockwise||a||(r===i?r=-i:r-=i);const s=this.aStartAngle+t*r;let o=this.aX+this.xRadius*Math.cos(s),l=this.aY+this.yRadius*Math.sin(s);if(0!==this.aRotation){const t=Math.cos(this.aRotation),e=Math.sin(this.aRotation),n=o-this.aX,i=l-this.aY;o=n*t-i*e+this.aX,l=n*e+i*t+this.aY}return n.set(o,l)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}yl.prototype.isEllipseCurve=!0;class _l extends yl{constructor(t,e,n,i,r,a){super(t,e,n,n,i,r,a),this.type="ArcCurve"}}function bl(){let t=0,e=0,n=0,i=0;function r(r,a,s,o){t=r,e=s,n=-3*r+3*a-2*s-o,i=2*r-2*a+s+o}return{initCatmullRom:function(t,e,n,i,a){r(e,n,a*(n-t),a*(i-e))},initNonuniformCatmullRom:function(t,e,n,i,a,s,o){let l=(e-t)/a-(n-t)/(a+s)+(n-e)/s,c=(n-e)/s-(i-e)/(s+o)+(i-n)/o;l*=s,c*=s,r(e,n,l,c)},calc:function(r){const a=r*r;return t+e*r+n*a+i*(a*r)}}}_l.prototype.isArcCurve=!0;const wl=new mn,Ml=new bl,Sl=new bl,Tl=new bl;class El extends vl{constructor(t=[],e=!1,n="centripetal",i=.5){super(),this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=i}getPoint(t,e=new mn){const n=e,i=this.points,r=i.length,a=(r-(this.closed?0:1))*t;let s,o,l=Math.floor(a),c=a-l;this.closed?l+=l>0?0:(Math.floor(Math.abs(l)/r)+1)*r:0===c&&l===r-1&&(l=r-2,c=1),this.closed||l>0?s=i[(l-1)%r]:(wl.subVectors(i[0],i[1]).add(i[0]),s=wl);const h=i[l%r],u=i[(l+1)%r];if(this.closed||l+2<r?o=i[(l+2)%r]:(wl.subVectors(i[r-1],i[r-2]).add(i[r-1]),o=wl),"centripetal"===this.curveType||"chordal"===this.curveType){const t="chordal"===this.curveType?.5:.25;let e=Math.pow(s.distanceToSquared(h),t),n=Math.pow(h.distanceToSquared(u),t),i=Math.pow(u.distanceToSquared(o),t);n<1e-4&&(n=1),e<1e-4&&(e=n),i<1e-4&&(i=n),Ml.initNonuniformCatmullRom(s.x,h.x,u.x,o.x,e,n,i),Sl.initNonuniformCatmullRom(s.y,h.y,u.y,o.y,e,n,i),Tl.initNonuniformCatmullRom(s.z,h.z,u.z,o.z,e,n,i)}else"catmullrom"===this.curveType&&(Ml.initCatmullRom(s.x,h.x,u.x,o.x,this.tension),Sl.initCatmullRom(s.y,h.y,u.y,o.y,this.tension),Tl.initCatmullRom(s.z,h.z,u.z,o.z,this.tension));return n.set(Ml.calc(c),Sl.calc(c),Tl.calc(c)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new mn).fromArray(n))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function Al(t,e,n,i,r){const a=.5*(i-e),s=.5*(r-n),o=t*t;return(2*n-2*i+a+s)*(t*o)+(-3*n+3*i-2*a-s)*o+a*t+n}function Ll(t,e,n,i){return function(t,e){const n=1-t;return n*n*e}(t,e)+function(t,e){return 2*(1-t)*t*e}(t,n)+function(t,e){return t*t*e}(t,i)}function Rl(t,e,n,i,r){return function(t,e){const n=1-t;return n*n*n*e}(t,e)+function(t,e){const n=1-t;return 3*n*n*t*e}(t,n)+function(t,e){return 3*(1-t)*t*t*e}(t,i)+function(t,e){return t*t*t*e}(t,r)}El.prototype.isCatmullRomCurve3=!0;class Cl extends vl{constructor(t=new en,e=new en,n=new en,i=new en){super(),this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new en){const n=e,i=this.v0,r=this.v1,a=this.v2,s=this.v3;return n.set(Rl(t,i.x,r.x,a.x,s.x),Rl(t,i.y,r.y,a.y,s.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}Cl.prototype.isCubicBezierCurve=!0;class Pl extends vl{constructor(t=new mn,e=new mn,n=new mn,i=new mn){super(),this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new mn){const n=e,i=this.v0,r=this.v1,a=this.v2,s=this.v3;return n.set(Rl(t,i.x,r.x,a.x,s.x),Rl(t,i.y,r.y,a.y,s.y),Rl(t,i.z,r.z,a.z,s.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}Pl.prototype.isCubicBezierCurve3=!0;class zl extends vl{constructor(t=new en,e=new en){super(),this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new en){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e){const n=e||new en;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}zl.prototype.isLineCurve=!0;class Il extends vl{constructor(t=new en,e=new en,n=new en){super(),this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new en){const n=e,i=this.v0,r=this.v1,a=this.v2;return n.set(Ll(t,i.x,r.x,a.x),Ll(t,i.y,r.y,a.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}Il.prototype.isQuadraticBezierCurve=!0;class Dl extends vl{constructor(t=new mn,e=new mn,n=new mn){super(),this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new mn){const n=e,i=this.v0,r=this.v1,a=this.v2;return n.set(Ll(t,i.x,r.x,a.x),Ll(t,i.y,r.y,a.y),Ll(t,i.z,r.z,a.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}Dl.prototype.isQuadraticBezierCurve3=!0;class Nl extends vl{constructor(t=[]){super(),this.type="SplineCurve",this.points=t}getPoint(t,e=new en){const n=e,i=this.points,r=(i.length-1)*t,a=Math.floor(r),s=r-a,o=i[0===a?a:a-1],l=i[a],c=i[a>i.length-2?i.length-1:a+1],h=i[a>i.length-3?i.length-1:a+2];return n.set(Al(s,o.x,l.x,c.x,h.x),Al(s,o.y,l.y,c.y,h.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new en).fromArray(n))}return this}}Nl.prototype.isSplineCurve=!0;var Ol=Object.freeze({__proto__:null,ArcCurve:_l,CatmullRomCurve3:El,CubicBezierCurve:Cl,CubicBezierCurve3:Pl,EllipseCurve:yl,LineCurve:zl,LineCurve3:class extends vl{constructor(t=new mn,e=new mn){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=t,this.v2=e}getPoint(t,e=new mn){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}},QuadraticBezierCurve:Il,QuadraticBezierCurve3:Dl,SplineCurve:Nl});class Bl extends vl{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new zl(e,t))}getPoint(t,e){const n=t*this.getLength(),i=this.getCurveLengths();let r=0;for(;r<i.length;){if(i[r]>=n){const t=i[r]-n,a=this.curves[r],s=a.getLength(),o=0===s?0:1-t/s;return a.getPointAt(o,e)}r++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,i=this.curves.length;n<i;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const a=r[i],s=a&&a.isEllipseCurve?2*t:a&&(a.isLineCurve||a.isLineCurve3)?1:a&&a.isSplineCurve?t*a.points.length:t,o=a.getPoints(s);for(let t=0;t<o.length;t++){const i=o[t];n&&n.equals(i)||(e.push(i),n=i)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push(n.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const n=this.curves[e];t.curves.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push((new Ol[n.type]).fromJSON(n))}return this}}class Fl extends Bl{constructor(t){super(),this.type="Path",this.currentPoint=new en,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new zl(this.currentPoint.clone(),new en(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,i){const r=new Il(this.currentPoint.clone(),new en(t,e),new en(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this}bezierCurveTo(t,e,n,i,r,a){const s=new Cl(this.currentPoint.clone(),new en(t,e),new en(n,i),new en(r,a));return this.curves.push(s),this.currentPoint.set(r,a),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new Nl(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,i,r,a){const s=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(t+s,e+o,n,i,r,a),this}absarc(t,e,n,i,r,a){return this.absellipse(t,e,n,n,i,r,a),this}ellipse(t,e,n,i,r,a,s,o){const l=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(t+l,e+c,n,i,r,a,s,o),this}absellipse(t,e,n,i,r,a,s,o){const l=new yl(t,e,n,i,r,a,s,o);if(this.curves.length>0){const t=l.getPoint(0);t.equals(this.currentPoint)||this.lineTo(t.x,t.y)}this.curves.push(l);const c=l.getPoint(1);return this.currentPoint.copy(c),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class Ul extends Fl{constructor(t){super(t),this.uuid=Je(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,i=this.holes.length;n<i;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const n=this.holes[e];t.holes.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push((new Fl).fromJSON(n))}return this}}function Hl(t,e,n,i,r){let a,s;if(r===function(t,e,n,i){let r=0;for(let a=e,s=n-i;a<n;a+=i)r+=(t[s]-t[a])*(t[a+1]+t[s+1]),s=a;return r}(t,e,n,i)>0)for(a=e;a<n;a+=i)s=lc(a,t[a],t[a+1],s);else for(a=n-i;a>=e;a-=i)s=lc(a,t[a],t[a+1],s);return s&&nc(s,s.next)&&(cc(s),s=s.next),s}function kl(t,e){if(!t)return t;e||(e=t);let n,i=t;do{if(n=!1,i.steiner||!nc(i,i.next)&&0!==ec(i.prev,i,i.next))i=i.next;else{if(cc(i),i=e=i.prev,i===i.next)break;n=!0}}while(n||i!==e);return e}function Gl(t,e,n,i,r,a,s){if(!t)return;!s&&a&&function(t,e,n,i){let r=t;do{null===r.z&&(r.z=Ql(r.x,r.y,e,n,i)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next}while(r!==t);r.prevZ.nextZ=null,r.prevZ=null,function(t){let e,n,i,r,a,s,o,l,c=1;do{for(n=t,t=null,a=null,s=0;n;){for(s++,i=n,o=0,e=0;e<c&&(o++,i=i.nextZ,i);e++);for(l=c;o>0||l>0&&i;)0!==o&&(0===l||!i||n.z<=i.z)?(r=n,n=n.nextZ,o--):(r=i,i=i.nextZ,l--),a?a.nextZ=r:t=r,r.prevZ=a,a=r;n=i}a.nextZ=null,c*=2}while(s>1)}(r)}(t,i,r,a);let o,l,c=t;for(;t.prev!==t.next;)if(o=t.prev,l=t.next,a?Wl(t,i,r,a):Vl(t))e.push(o.i/n),e.push(t.i/n),e.push(l.i/n),cc(t),t=l.next,c=l.next;else if((t=l)===c){s?1===s?Gl(t=jl(kl(t),e,n),e,n,i,r,a,2):2===s&&Xl(t,e,n,i,r,a):Gl(kl(t),e,n,i,r,a,1);break}}function Vl(t){const e=t.prev,n=t,i=t.next;if(ec(e,n,i)>=0)return!1;let r=t.next.next;for(;r!==t.prev;){if($l(e.x,e.y,n.x,n.y,i.x,i.y,r.x,r.y)&&ec(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}function Wl(t,e,n,i){const r=t.prev,a=t,s=t.next;if(ec(r,a,s)>=0)return!1;const o=r.x<a.x?r.x<s.x?r.x:s.x:a.x<s.x?a.x:s.x,l=r.y<a.y?r.y<s.y?r.y:s.y:a.y<s.y?a.y:s.y,c=r.x>a.x?r.x>s.x?r.x:s.x:a.x>s.x?a.x:s.x,h=r.y>a.y?r.y>s.y?r.y:s.y:a.y>s.y?a.y:s.y,u=Ql(o,l,e,n,i),q=Ql(c,h,e,n,i);let d=t.prevZ,p=t.nextZ;for(;d&&d.z>=u&&p&&p.z<=q;){if(d!==t.prev&&d!==t.next&&$l(r.x,r.y,a.x,a.y,s.x,s.y,d.x,d.y)&&ec(d.prev,d,d.next)>=0)return!1;if(d=d.prevZ,p!==t.prev&&p!==t.next&&$l(r.x,r.y,a.x,a.y,s.x,s.y,p.x,p.y)&&ec(p.prev,p,p.next)>=0)return!1;p=p.nextZ}for(;d&&d.z>=u;){if(d!==t.prev&&d!==t.next&&$l(r.x,r.y,a.x,a.y,s.x,s.y,d.x,d.y)&&ec(d.prev,d,d.next)>=0)return!1;d=d.prevZ}for(;p&&p.z<=q;){if(p!==t.prev&&p!==t.next&&$l(r.x,r.y,a.x,a.y,s.x,s.y,p.x,p.y)&&ec(p.prev,p,p.next)>=0)return!1;p=p.nextZ}return!0}function jl(t,e,n){let i=t;do{const r=i.prev,a=i.next.next;!nc(r,a)&&ic(r,i,i.next,a)&&sc(r,a)&&sc(a,r)&&(e.push(r.i/n),e.push(i.i/n),e.push(a.i/n),cc(i),cc(i.next),i=t=a),i=i.next}while(i!==t);return kl(i)}function Xl(t,e,n,i,r,a){let s=t;do{let t=s.next.next;for(;t!==s.prev;){if(s.i!==t.i&&tc(s,t)){let o=oc(s,t);return s=kl(s,s.next),o=kl(o,o.next),Gl(s,e,n,i,r,a),void Gl(o,e,n,i,r,a)}t=t.next}s=s.next}while(s!==t)}function Yl(t,e){return t.x-e.x}function Zl(t,e){if(e=function(t,e){let n=e;const i=t.x,r=t.y;let a,s=-1/0;do{if(r<=n.y&&r>=n.next.y&&n.next.y!==n.y){const t=n.x+(r-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(t<=i&&t>s){if(s=t,t===i){if(r===n.y)return n;if(r===n.next.y)return n.next}a=n.x<n.next.x?n:n.next}}n=n.next}while(n!==e);if(!a)return null;if(i===s)return a;const o=a,l=a.x,c=a.y;let h,u=1/0;n=a;do{i>=n.x&&n.x>=l&&i!==n.x&&$l(r<c?i:s,r,l,c,r<c?s:i,r,n.x,n.y)&&(h=Math.abs(r-n.y)/(i-n.x),sc(n,t)&&(h<u||h===u&&(n.x>a.x||n.x===a.x&&Jl(a,n)))&&(a=n,u=h)),n=n.next}while(n!==o);return a}(t,e),e){const n=oc(e,t);kl(e,e.next),kl(n,n.next)}}function Jl(t,e){return ec(t.prev,t,e.prev)<0&&ec(e.next,t,t.next)<0}function Ql(t,e,n,i,r){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-n)*r)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-i)*r)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function Kl(t){let e=t,n=t;do{(e.x<n.x||e.x===n.x&&e.y<n.y)&&(n=e),e=e.next}while(e!==t);return n}function $l(t,e,n,i,r,a,s,o){return(r-s)*(e-o)-(t-s)*(a-o)>=0&&(t-s)*(i-o)-(n-s)*(e-o)>=0&&(n-s)*(a-o)-(r-s)*(i-o)>=0}function tc(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!function(t,e){let n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&ic(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}(t,e)&&(sc(t,e)&&sc(e,t)&&function(t,e){let n=t,i=!1;const r=(t.x+e.x)/2,a=(t.y+e.y)/2;do{n.y>a!=n.next.y>a&&n.next.y!==n.y&&r<(n.next.x-n.x)*(a-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next}while(n!==t);return i}(t,e)&&(ec(t.prev,t,e.prev)||ec(t,e.prev,e))||nc(t,e)&&ec(t.prev,t,t.next)>0&&ec(e.prev,e,e.next)>0)}function ec(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function nc(t,e){return t.x===e.x&&t.y===e.y}function ic(t,e,n,i){const r=ac(ec(t,e,n)),a=ac(ec(t,e,i)),s=ac(ec(n,i,t)),o=ac(ec(n,i,e));return r!==a&&s!==o||!(0!==r||!rc(t,n,e))||!(0!==a||!rc(t,i,e))||!(0!==s||!rc(n,t,i))||!(0!==o||!rc(n,e,i))}function rc(t,e,n){return e.x<=Math.max(t.x,n.x)&&e.x>=Math.min(t.x,n.x)&&e.y<=Math.max(t.y,n.y)&&e.y>=Math.min(t.y,n.y)}function ac(t){return t>0?1:t<0?-1:0}function sc(t,e){return ec(t.prev,t,t.next)<0?ec(t,e,t.next)>=0&&ec(t,t.prev,e)>=0:ec(t,e,t.prev)<0||ec(t,t.next,e)<0}function oc(t,e){const n=new hc(t.i,t.x,t.y),i=new hc(e.i,e.x,e.y),r=t.next,a=e.prev;return t.next=e,e.prev=t,n.next=r,r.prev=n,i.next=n,n.prev=i,a.next=i,i.prev=a,i}function lc(t,e,n,i){const r=new hc(t,e,n);return i?(r.next=i.next,r.prev=i,i.next.prev=r,i.next=r):(r.prev=r,r.next=r),r}function cc(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function hc(t,e,n){this.i=t,this.x=e,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}class uc{static area(t){const e=t.length;let n=0;for(let i=e-1,r=0;r<e;i=r++)n+=t[i].x*t[r].y-t[r].x*t[i].y;return.5*n}static isClockWise(t){return uc.area(t)<0}static triangulateShape(t,e){const n=[],i=[],r=[];qc(t),dc(n,t);let a=t.length;e.forEach(qc);for(let t=0;t<e.length;t++)i.push(a),a+=e[t].length,dc(n,e[t]);const s=function(t,e,n=2){const i=e&&e.length,r=i?e[0]*n:t.length;let a=Hl(t,0,r,n,!0);const s=[];if(!a||a.next===a.prev)return s;let o,l,c,h,u,q,d;if(i&&(a=function(t,e,n,i){const r=[];let a,s,o,l,c;for(a=0,s=e.length;a<s;a++)o=e[a]*i,l=a<s-1?e[a+1]*i:t.length,c=Hl(t,o,l,i,!1),c===c.next&&(c.steiner=!0),r.push(Kl(c));for(r.sort(Yl),a=0;a<r.length;a++)Zl(r[a],n),n=kl(n,n.next);return n}(t,e,a,n)),t.length>80*n){o=c=t[0],l=h=t[1];for(let e=n;e<r;e+=n)u=t[e],q=t[e+1],u<o&&(o=u),q<l&&(l=q),u>c&&(c=u),q>h&&(h=q);d=Math.max(c-o,h-l),d=0!==d?1/d:0}return Gl(a,s,n,o,l,d),s}(n,i);for(let t=0;t<s.length;t+=3)r.push(s.slice(t,t+3));return r}}function qc(t){const e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function dc(t,e){for(let n=0;n<e.length;n++)t.push(e[n].x),t.push(e[n].y)}class pc extends Ki{constructor(t=new Ul([new en(.5,.5),new en(-.5,.5),new en(-.5,-.5),new en(.5,-.5)]),e={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,i=[],r=[];for(let e=0,n=t.length;e<n;e++)a(t[e]);function a(t){const a=[],s=void 0!==e.curveSegments?e.curveSegments:12,o=void 0!==e.steps?e.steps:1;let l=void 0!==e.depth?e.depth:1,c=void 0===e.bevelEnabled||e.bevelEnabled,h=void 0!==e.bevelThickness?e.bevelThickness:.2,u=void 0!==e.bevelSize?e.bevelSize:h-.1,q=void 0!==e.bevelOffset?e.bevelOffset:0,d=void 0!==e.bevelSegments?e.bevelSegments:3;const p=e.extrudePath,m=void 0!==e.UVGenerator?e.UVGenerator:mc;void 0!==e.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),l=e.amount);let f,g,x,v,y,_=!1;p&&(f=p.getSpacedPoints(o),_=!0,c=!1,g=p.computeFrenetFrames(o,!1),x=new mn,v=new mn,y=new mn),c||(d=0,h=0,u=0,q=0);const b=t.extractPoints(s);let w=b.shape;const M=b.holes;if(!uc.isClockWise(w)){w=w.reverse();for(let t=0,e=M.length;t<e;t++){const e=M[t];uc.isClockWise(e)&&(M[t]=e.reverse())}}const S=uc.triangulateShape(w,M),T=w;for(let t=0,e=M.length;t<e;t++){const e=M[t];w=w.concat(e)}function E(t,e,n){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().multiplyScalar(n).add(t)}const A=w.length,L=S.length;function R(t,e,n){let i,r,a;const s=t.x-e.x,o=t.y-e.y,l=n.x-t.x,c=n.y-t.y,h=s*s+o*o,u=s*c-o*l;if(Math.abs(u)>Number.EPSILON){const u=Math.sqrt(h),q=Math.sqrt(l*l+c*c),d=e.x-o/u,p=e.y+s/u,m=((n.x-c/q-d)*c-(n.y+l/q-p)*l)/(s*c-o*l);i=d+s*m-t.x,r=p+o*m-t.y;const f=i*i+r*r;if(f<=2)return new en(i,r);a=Math.sqrt(f/2)}else{let t=!1;s>Number.EPSILON?l>Number.EPSILON&&(t=!0):s<-Number.EPSILON?l<-Number.EPSILON&&(t=!0):Math.sign(o)===Math.sign(c)&&(t=!0),t?(i=-o,r=s,a=Math.sqrt(h)):(i=s,r=o,a=Math.sqrt(h/2))}return new en(i/a,r/a)}const C=[];for(let t=0,e=T.length,n=e-1,i=t+1;t<e;t++,n++,i++)n===e&&(n=0),i===e&&(i=0),C[t]=R(T[t],T[n],T[i]);const P=[];let z,I=C.concat();for(let t=0,e=M.length;t<e;t++){const e=M[t];z=[];for(let t=0,n=e.length,i=n-1,r=t+1;t<n;t++,i++,r++)i===n&&(i=0),r===n&&(r=0),z[t]=R(e[t],e[i],e[r]);P.push(z),I=I.concat(z)}for(let t=0;t<d;t++){const e=t/d,n=h*Math.cos(e*Math.PI/2),i=u*Math.sin(e*Math.PI/2)+q;for(let t=0,e=T.length;t<e;t++){const e=E(T[t],C[t],i);O(e.x,e.y,-n)}for(let t=0,e=M.length;t<e;t++){const e=M[t];z=P[t];for(let t=0,r=e.length;t<r;t++){const r=E(e[t],z[t],i);O(r.x,r.y,-n)}}}const D=u+q;for(let t=0;t<A;t++){const e=c?E(w[t],I[t],D):w[t];_?(v.copy(g.normals[0]).multiplyScalar(e.x),x.copy(g.binormals[0]).multiplyScalar(e.y),y.copy(f[0]).add(v).add(x),O(y.x,y.y,y.z)):O(e.x,e.y,0)}for(let t=1;t<=o;t++)for(let e=0;e<A;e++){const n=c?E(w[e],I[e],D):w[e];_?(v.copy(g.normals[t]).multiplyScalar(n.x),x.copy(g.binormals[t]).multiplyScalar(n.y),y.copy(f[t]).add(v).add(x),O(y.x,y.y,y.z)):O(n.x,n.y,l/o*t)}for(let t=d-1;t>=0;t--){const e=t/d,n=h*Math.cos(e*Math.PI/2),i=u*Math.sin(e*Math.PI/2)+q;for(let t=0,e=T.length;t<e;t++){const e=E(T[t],C[t],i);O(e.x,e.y,l+n)}for(let t=0,e=M.length;t<e;t++){const e=M[t];z=P[t];for(let t=0,r=e.length;t<r;t++){const r=E(e[t],z[t],i);_?O(r.x,r.y+f[o-1].y,f[o-1].x+n):O(r.x,r.y,l+n)}}}function N(t,e){let n=t.length;for(;--n>=0;){const i=n;let r=n-1;r<0&&(r=t.length-1);for(let t=0,n=o+2*d;t<n;t++){const n=A*t,a=A*(t+1);F(e+i+n,e+r+n,e+r+a,e+i+a)}}}function O(t,e,n){a.push(t),a.push(e),a.push(n)}function B(t,e,r){U(t),U(e),U(r);const a=i.length/3,s=m.generateTopUV(n,i,a-3,a-2,a-1);H(s[0]),H(s[1]),H(s[2])}function F(t,e,r,a){U(t),U(e),U(a),U(e),U(r),U(a);const s=i.length/3,o=m.generateSideWallUV(n,i,s-6,s-3,s-2,s-1);H(o[0]),H(o[1]),H(o[3]),H(o[1]),H(o[2]),H(o[3])}function U(t){i.push(a[3*t+0]),i.push(a[3*t+1]),i.push(a[3*t+2])}function H(t){r.push(t.x),r.push(t.y)}!function(){const t=i.length/3;if(c){let t=0,e=A*t;for(let t=0;t<L;t++){const n=S[t];B(n[2]+e,n[1]+e,n[0]+e)}t=o+2*d,e=A*t;for(let t=0;t<L;t++){const n=S[t];B(n[0]+e,n[1]+e,n[2]+e)}}else{for(let t=0;t<L;t++){const e=S[t];B(e[2],e[1],e[0])}for(let t=0;t<L;t++){const e=S[t];B(e[0]+A*o,e[1]+A*o,e[2]+A*o)}}n.addGroup(t,i.length/3-t,0)}(),function(){const t=i.length/3;let e=0;N(T,e),e+=T.length;for(let t=0,n=M.length;t<n;t++){const n=M[t];N(n,e),e+=n.length}n.addGroup(t,i.length/3-t,1)}()}this.setAttribute("position",new Vi(i,3)),this.setAttribute("uv",new Vi(r,2)),this.computeVertexNormals()}toJSON(){const t=super.toJSON();return function(t,e,n){if(n.shapes=[],Array.isArray(t))for(let e=0,i=t.length;e<i;e++){const i=t[e];n.shapes.push(i.uuid)}else n.shapes.push(t.uuid);return void 0!==e.extrudePath&&(n.options.extrudePath=e.extrudePath.toJSON()),n}(this.parameters.shapes,this.parameters.options,t)}static fromJSON(t,e){const n=[];for(let i=0,r=t.shapes.length;i<r;i++){const r=e[t.shapes[i]];n.push(r)}const i=t.options.extrudePath;return void 0!==i&&(t.options.extrudePath=(new Ol[i.type]).fromJSON(i)),new pc(n,t.options)}}const mc={generateTopUV:function(t,e,n,i,r){const a=e[3*n],s=e[3*n+1],o=e[3*i],l=e[3*i+1],c=e[3*r],h=e[3*r+1];return[new en(a,s),new en(o,l),new en(c,h)]},generateSideWallUV:function(t,e,n,i,r,a){const s=e[3*n],o=e[3*n+1],l=e[3*n+2],c=e[3*i],h=e[3*i+1],u=e[3*i+2],q=e[3*r],d=e[3*r+1],p=e[3*r+2],m=e[3*a],f=e[3*a+1],g=e[3*a+2];return Math.abs(o-h)<Math.abs(s-c)?[new en(s,1-l),new en(c,1-u),new en(q,1-p),new en(m,1-g)]:[new en(o,1-l),new en(h,1-u),new en(d,1-p),new en(f,1-g)]}};class fc extends Ki{constructor(t=new Ul([new en(0,.5),new en(-.5,-.5),new en(.5,-.5)]),e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],i=[],r=[],a=[];let s=0,o=0;if(!1===Array.isArray(t))l(t);else for(let e=0;e<t.length;e++)l(t[e]),this.addGroup(s,o,e),s+=o,o=0;function l(t){const s=i.length/3,l=t.extractPoints(e);let c=l.shape;const h=l.holes;!1===uc.isClockWise(c)&&(c=c.reverse());for(let t=0,e=h.length;t<e;t++){const e=h[t];!0===uc.isClockWise(e)&&(h[t]=e.reverse())}const u=uc.triangulateShape(c,h);for(let t=0,e=h.length;t<e;t++){const e=h[t];c=c.concat(e)}for(let t=0,e=c.length;t<e;t++){const e=c[t];i.push(e.x,e.y,0),r.push(0,0,1),a.push(e.x,e.y)}for(let t=0,e=u.length;t<e;t++){const e=u[t],i=e[0]+s,r=e[1]+s,a=e[2]+s;n.push(i,r,a),o+=3}}this.setIndex(n),this.setAttribute("position",new Vi(i,3)),this.setAttribute("normal",new Vi(r,3)),this.setAttribute("uv",new Vi(a,2))}toJSON(){const t=super.toJSON();return function(t,e){if(e.shapes=[],Array.isArray(t))for(let n=0,i=t.length;n<i;n++){const i=t[n];e.shapes.push(i.uuid)}else e.shapes.push(t.uuid);return e}(this.parameters.shapes,t)}static fromJSON(t,e){const n=[];for(let i=0,r=t.shapes.length;i<r;i++){const r=e[t.shapes[i]];n.push(r)}return new fc(n,t.curveSegments)}}(class extends Ri{constructor(t){super(),this.type="ShadowMaterial",this.color=new Oi(0),this.transparent=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this}}).prototype.isShadowMaterial=!0;class gc extends Ri{constructor(t){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Oi(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Oi(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Fe,this.normalScale=new en(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this}}gc.prototype.isMeshStandardMaterial=!0;(class extends gc{constructor(t){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new en(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Qe(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.sheenTint=new Oi(0),this.sheenRoughness=1,this.transmissionMap=null,this.thickness=.01,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationTint=new Oi(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularTint=new Oi(1,1,1),this.specularTintMap=null,this._sheen=0,this._clearcoat=0,this._transmission=0,this.setValues(t)}get sheen(){return this._sheen}set sheen(t){this._sheen>0!=t>0&&this.version++,this._sheen=t}get clearcoat(){return this._clearcoat}set clearcoat(t){this._clearcoat>0!=t>0&&this.version++,this._clearcoat=t}get transmission(){return this._transmission}set transmission(t){this._transmission>0!=t>0&&this.version++,this._transmission=t}copy(t){return super.copy(t),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.ior=t.ior,this.sheen=t.sheen,this.sheenTint.copy(t.sheenTint),this.sheenRoughness=t.sheenRoughness,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this.thickness=t.thickness,this.thicknessMap=t.thicknessMap,this.attenuationDistance=t.attenuationDistance,this.attenuationTint.copy(t.attenuationTint),this.specularIntensity=t.specularIntensity,this.specularIntensityMap=t.specularIntensityMap,this.specularTint.copy(t.specularTint),this.specularTintMap=t.specularTintMap,this}}).prototype.isMeshPhysicalMaterial=!0;(class extends Ri{constructor(t){super(),this.type="MeshPhongMaterial",this.color=new Oi(16777215),this.specular=new Oi(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Oi(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Fe,this.normalScale=new en(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=k,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this}}).prototype.isMeshPhongMaterial=!0;(class extends Ri{constructor(t){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Oi(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Oi(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Fe,this.normalScale=new en(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this}}).prototype.isMeshToonMaterial=!0;(class extends Ri{constructor(t){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Fe,this.normalScale=new en(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.flatShading=t.flatShading,this}}).prototype.isMeshNormalMaterial=!0;(class extends Ri{constructor(t){super(),this.type="MeshLambertMaterial",this.color=new Oi(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Oi(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=k,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this}}).prototype.isMeshLambertMaterial=!0;(class extends Ri{constructor(t){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Oi(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Fe,this.normalScale=new en(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.flatShading=t.flatShading,this}}).prototype.isMeshMatcapMaterial=!0;(class extends il{constructor(t){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}).prototype.isLineDashedMaterial=!0;const xc={arraySlice:function(t,e,n){return xc.isTypedArray(t)?new t.constructor(t.subarray(e,void 0!==n?n:t.length)):t.slice(e,n)},convertArray:function(t,e,n){return!t||!n&&t.constructor===e?t:"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},getKeyframeOrder:function(t){const e=t.length,n=new Array(e);for(let t=0;t!==e;++t)n[t]=t;return n.sort((function(e,n){return t[e]-t[n]})),n},sortedArray:function(t,e,n){const i=t.length,r=new t.constructor(i);for(let a=0,s=0;s!==i;++a){const i=n[a]*e;for(let n=0;n!==e;++n)r[s++]=t[i+n]}return r},flattenJSON:function(t,e,n,i){let r=1,a=t[0];for(;void 0!==a&&void 0===a[i];)a=t[r++];if(void 0===a)return;let s=a[i];if(void 0!==s)if(Array.isArray(s))do{s=a[i],void 0!==s&&(e.push(a.time),n.push.apply(n,s)),a=t[r++]}while(void 0!==a);else if(void 0!==s.toArray)do{s=a[i],void 0!==s&&(e.push(a.time),s.toArray(n,n.length)),a=t[r++]}while(void 0!==a);else do{s=a[i],void 0!==s&&(e.push(a.time),n.push(s)),a=t[r++]}while(void 0!==a)},subclip:function(t,e,n,i,r=30){const a=t.clone();a.name=e;const s=[];for(let t=0;t<a.tracks.length;++t){const e=a.tracks[t],o=e.getValueSize(),l=[],c=[];for(let t=0;t<e.times.length;++t){const a=e.times[t]*r;if(!(a<n||a>=i)){l.push(e.times[t]);for(let n=0;n<o;++n)c.push(e.values[t*o+n])}}0!==l.length&&(e.times=xc.convertArray(l,e.times.constructor),e.values=xc.convertArray(c,e.values.constructor),s.push(e))}a.tracks=s;let o=1/0;for(let t=0;t<a.tracks.length;++t)o>a.tracks[t].times[0]&&(o=a.tracks[t].times[0]);for(let t=0;t<a.tracks.length;++t)a.tracks[t].shift(-1*o);return a.resetDuration(),a},makeClipAdditive:function(t,e=0,n=t,i=30){i<=0&&(i=30);const r=n.tracks.length,a=e/i;for(let e=0;e<r;++e){const i=n.tracks[e],r=i.ValueTypeName;if("bool"===r||"string"===r)continue;const s=t.tracks.find((function(t){return t.name===i.name&&t.ValueTypeName===r}));if(void 0===s)continue;let o=0;const l=i.getValueSize();i.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(o=l/3);let c=0;const h=s.getValueSize();s.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(c=h/3);const u=i.times.length-1;let q;if(a<=i.times[0]){const t=o,e=l-o;q=xc.arraySlice(i.values,t,e)}else if(a>=i.times[u]){const t=u*l+o,e=t+l-o;q=xc.arraySlice(i.values,t,e)}else{const t=i.createInterpolant(),e=o,n=l-o;t.evaluate(a),q=xc.arraySlice(t.resultBuffer,e,n)}"quaternion"===r&&(new pn).fromArray(q).normalize().conjugate().toArray(q);const d=s.times.length;for(let t=0;t<d;++t){const e=t*h+c;if("quaternion"===r)pn.multiplyQuaternionsFlat(s.values,e,q,0,s.values,e);else{const t=h-2*c;for(let n=0;n<t;++n)s.values[e+n]-=q[n]}}}return t.blendMode=2501,t}};class vc{constructor(t,e,n,i){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==i?i:new e.constructor(n),this.sampleValues=e,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let n=this._cachedIndex,i=e[n],r=e[n-1];t:{e:{let a;n:{i:if(!(t<i)){for(let a=n+2;;){if(void 0===i){if(t<r)break i;return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,t,r)}if(n===a)break;if(r=i,i=e[++n],t<i)break e}a=e.length;break n}if(t>=r)break t;{const s=e[1];t<s&&(n=2,r=s);for(let a=n-2;;){if(void 0===r)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(n===a)break;if(i=r,r=e[--n-1],t>=r)break e}a=n,n=0}}for(;n<a;){const i=n+a>>>1;t<e[i]?a=i:n=i+1}if(i=e[n],r=e[n-1],void 0===r)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(void 0===i)return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,r,t)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,t,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=t*i;for(let t=0;t!==i;++t)e[t]=n[r+t];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}vc.prototype.beforeStart_=vc.prototype.copySampleValue_,vc.prototype.afterEnd_=vc.prototype.copySampleValue_;class yc extends vc{constructor(t,e,n,i){super(t,e,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Ee,endingEnd:Ee}}intervalChanged_(t,e,n){const i=this.parameterPositions;let r=t-2,a=t+1,s=i[r],o=i[a];if(void 0===s)switch(this.getSettings_().endingStart){case Ae:r=t,s=2*e-n;break;case Le:r=i.length-2,s=e+i[r]-i[r+1];break;default:r=t,s=n}if(void 0===o)switch(this.getSettings_().endingEnd){case Ae:a=t,o=2*n-e;break;case Le:a=1,o=n+i[1]-i[0];break;default:a=t-1,o=e}const l=.5*(n-e),c=this.valueSize;this._weightPrev=l/(e-s),this._weightNext=l/(o-n),this._offsetPrev=r*c,this._offsetNext=a*c}interpolate_(t,e,n,i){const r=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=t*s,l=o-s,c=this._offsetPrev,h=this._offsetNext,u=this._weightPrev,q=this._weightNext,d=(n-e)/(i-e),p=d*d,m=p*d,f=-u*m+2*u*p-u*d,g=(1+u)*m+(-1.5-2*u)*p+(-.5+u)*d+1,x=(-1-q)*m+(1.5+q)*p+.5*d,v=q*m-q*p;for(let t=0;t!==s;++t)r[t]=f*a[c+t]+g*a[l+t]+x*a[o+t]+v*a[h+t];return r}}class _c extends vc{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t,e,n,i){const r=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=t*s,l=o-s,c=(n-e)/(i-e),h=1-c;for(let t=0;t!==s;++t)r[t]=a[l+t]*h+a[o+t]*c;return r}}class bc extends vc{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t){return this.copySampleValue_(t-1)}}class wc{constructor(t,e,n,i){if(void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=xc.convertArray(e,this.TimeBufferType),this.values=xc.convertArray(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let n;if(e.toJSON!==this.toJSON)n=e.toJSON(t);else{n={name:t.name,times:xc.convertArray(t.times,Array),values:xc.convertArray(t.values,Array)};const e=t.getInterpolation();e!==t.DefaultInterpolation&&(n.interpolation=e)}return n.type=t.ValueTypeName,n}InterpolantFactoryMethodDiscrete(t){return new bc(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new _c(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new yc(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case Me:e=this.InterpolantFactoryMethodDiscrete;break;case Se:e=this.InterpolantFactoryMethodLinear;break;case Te:e=this.InterpolantFactoryMethodSmooth}if(void 0===e){const e="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(e);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",e),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Me;case this.InterpolantFactoryMethodLinear:return Se;case this.InterpolantFactoryMethodSmooth:return Te}}getValueSize(){return this.values.length/this.times.length}shift(t){if(0!==t){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]+=t}return this}scale(t){if(1!==t){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]*=t}return this}trim(t,e){const n=this.times,i=n.length;let r=0,a=i-1;for(;r!==i&&n[r]<t;)++r;for(;-1!==a&&n[a]>e;)--a;if(++a,0!==r||a!==i){r>=a&&(a=Math.max(a,1),r=a-1);const t=this.getValueSize();this.times=xc.arraySlice(n,r,a),this.values=xc.arraySlice(this.values,r*t,a*t)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,i=this.values,r=n.length;0===r&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let a=null;for(let e=0;e!==r;e++){const i=n[e];if("number"==typeof i&&isNaN(i)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,e,i),t=!1;break}if(null!==a&&a>i){console.error("THREE.KeyframeTrack: Out of order keys.",this,e,i,a),t=!1;break}a=i}if(void 0!==i&&xc.isTypedArray(i))for(let e=0,n=i.length;e!==n;++e){const n=i[e];if(isNaN(n)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,e,n),t=!1;break}}return t}optimize(){const t=xc.arraySlice(this.times),e=xc.arraySlice(this.values),n=this.getValueSize(),i=this.getInterpolation()===Te,r=t.length-1;let a=1;for(let s=1;s<r;++s){let r=!1;const o=t[s];if(o!==t[s+1]&&(1!==s||o!==t[0]))if(i)r=!0;else{const t=s*n,i=t-n,a=t+n;for(let s=0;s!==n;++s){const n=e[t+s];if(n!==e[i+s]||n!==e[a+s]){r=!0;break}}}if(r){if(s!==a){t[a]=t[s];const i=s*n,r=a*n;for(let t=0;t!==n;++t)e[r+t]=e[i+t]}++a}}if(r>0){t[a]=t[r];for(let t=r*n,i=a*n,s=0;s!==n;++s)e[i+s]=e[t+s];++a}return a!==t.length?(this.times=xc.arraySlice(t,0,a),this.values=xc.arraySlice(e,0,a*n)):(this.times=t,this.values=e),this}clone(){const t=xc.arraySlice(this.times,0),e=xc.arraySlice(this.values,0),n=new(0,this.constructor)(this.name,t,e);return n.createInterpolant=this.createInterpolant,n}}wc.prototype.TimeBufferType=Float32Array,wc.prototype.ValueBufferType=Float32Array,wc.prototype.DefaultInterpolation=Se;class Mc extends wc{}Mc.prototype.ValueTypeName="bool",Mc.prototype.ValueBufferType=Array,Mc.prototype.DefaultInterpolation=Me,Mc.prototype.InterpolantFactoryMethodLinear=void 0,Mc.prototype.InterpolantFactoryMethodSmooth=void 0;class Sc extends wc{}Sc.prototype.ValueTypeName="color";class Tc extends wc{}Tc.prototype.ValueTypeName="number";class Ec extends vc{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t,e,n,i){const r=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=(n-e)/(i-e);let l=t*s;for(let t=l+s;l!==t;l+=4)pn.slerpFlat(r,0,a,l-s,a,l,o);return r}}class Ac extends wc{InterpolantFactoryMethodLinear(t){return new Ec(this.times,this.values,this.getValueSize(),t)}}Ac.prototype.ValueTypeName="quaternion",Ac.prototype.DefaultInterpolation=Se,Ac.prototype.InterpolantFactoryMethodSmooth=void 0;class Lc extends wc{}Lc.prototype.ValueTypeName="string",Lc.prototype.ValueBufferType=Array,Lc.prototype.DefaultInterpolation=Me,Lc.prototype.InterpolantFactoryMethodLinear=void 0,Lc.prototype.InterpolantFactoryMethodSmooth=void 0;class Rc extends wc{}Rc.prototype.ValueTypeName="vector";class Cc{constructor(t,e=-1,n,i=2500){this.name=t,this.tracks=n,this.duration=e,this.blendMode=i,this.uuid=Je(),this.duration<0&&this.resetDuration()}static parse(t){const e=[],n=t.tracks,i=1/(t.fps||1);for(let t=0,r=n.length;t!==r;++t)e.push(Pc(n[t]).scale(i));const r=new this(t.name,t.duration,e,t.blendMode);return r.uuid=t.uuid,r}static toJSON(t){const e=[],n=t.tracks,i={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let t=0,i=n.length;t!==i;++t)e.push(wc.toJSON(n[t]));return i}static CreateFromMorphTargetSequence(t,e,n,i){const r=e.length,a=[];for(let t=0;t<r;t++){let s=[],o=[];s.push((t+r-1)%r,t,(t+1)%r),o.push(0,1,0);const l=xc.getKeyframeOrder(s);s=xc.sortedArray(s,1,l),o=xc.sortedArray(o,1,l),i||0!==s[0]||(s.push(r),o.push(o[0])),a.push(new Tc(".morphTargetInfluences["+e[t].name+"]",s,o).scale(1/n))}return new this(t,-1,a)}static findByName(t,e){let n=t;if(!Array.isArray(t)){const e=t;n=e.geometry&&e.geometry.animations||e.animations}for(let t=0;t<n.length;t++)if(n[t].name===e)return n[t];return null}static CreateClipsFromMorphTargetSequences(t,e,n){const i={},r=/^([\w-]*?)([\d]+)$/;for(let e=0,n=t.length;e<n;e++){const n=t[e],a=n.name.match(r);if(a&&a.length>1){const t=a[1];let e=i[t];e||(i[t]=e=[]),e.push(n)}}const a=[];for(const t in i)a.push(this.CreateFromMorphTargetSequence(t,i[t],e,n));return a}static parseAnimation(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(t,e,n,i,r){if(0!==n.length){const a=[],s=[];xc.flattenJSON(n,a,s,i),0!==a.length&&r.push(new t(e,a,s))}},i=[],r=t.name||"default",a=t.fps||30,s=t.blendMode;let o=t.length||-1;const l=t.hierarchy||[];for(let t=0;t<l.length;t++){const r=l[t].keys;if(r&&0!==r.length)if(r[0].morphTargets){const t={};let e;for(e=0;e<r.length;e++)if(r[e].morphTargets)for(let n=0;n<r[e].morphTargets.length;n++)t[r[e].morphTargets[n]]=-1;for(const n in t){const t=[],a=[];for(let i=0;i!==r[e].morphTargets.length;++i){const i=r[e];t.push(i.time),a.push(i.morphTarget===n?1:0)}i.push(new Tc(".morphTargetInfluence["+n+"]",t,a))}o=t.length*(a||1)}else{const a=".bones["+e[t].name+"]";n(Rc,a+".position",r,"pos",i),n(Ac,a+".quaternion",r,"rot",i),n(Rc,a+".scale",r,"scl",i)}}return 0===i.length?null:new this(r,o,i,s)}resetDuration(){let t=0;for(let e=0,n=this.tracks.length;e!==n;++e){const n=this.tracks[e];t=Math.max(t,n.times[n.times.length-1])}return this.duration=t,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function Pc(t){if(void 0===t.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=function(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Tc;case"vector":case"vector2":case"vector3":case"vector4":return Rc;case"color":return Sc;case"quaternion":return Ac;case"bool":case"boolean":return Mc;case"string":return Lc}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}(t.type);if(void 0===t.times){const e=[],n=[];xc.flattenJSON(t.keys,e,n,"value"),t.times=e,t.values=n}return void 0!==e.parse?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}const zc={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};const Ic=new class{constructor(t,e,n){const i=this;let r,a=!1,s=0,o=0;const l=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(t){o++,!1===a&&void 0!==i.onStart&&i.onStart(t,s,o),a=!0},this.itemEnd=function(t){s++,void 0!==i.onProgress&&i.onProgress(t,s,o),s===o&&(a=!1,void 0!==i.onLoad&&i.onLoad())},this.itemError=function(t){void 0!==i.onError&&i.onError(t)},this.resolveURL=function(t){return r?r(t):t},this.setURLModifier=function(t){return r=t,this},this.addHandler=function(t,e){return l.push(t,e),this},this.removeHandler=function(t){const e=l.indexOf(t);return-1!==e&&l.splice(e,2),this},this.getHandler=function(t){for(let e=0,n=l.length;e<n;e+=2){const n=l[e],i=l[e+1];if(n.global&&(n.lastIndex=0),n.test(t))return i}return null}}};class Dc{constructor(t){this.manager=void 0!==t?t:Ic,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const n=this;return new Promise((function(i,r){n.load(t,i,e,r)}))}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}const Nc={};class Oc extends Dc{constructor(t){super(t)}load(t,e,n,i){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,a=zc.get(t);if(void 0!==a)return r.manager.itemStart(t),setTimeout((function(){e&&e(a),r.manager.itemEnd(t)}),0),a;if(void 0!==Nc[t])return void Nc[t].push({onLoad:e,onProgress:n,onError:i});const s=t.match(/^data:(.*?)(;base64)?,(.*)$/);let o;if(s){const n=s[1],a=!!s[2];let o=s[3];o=decodeURIComponent(o),a&&(o=atob(o));try{let i;const a=(this.responseType||"").toLowerCase();switch(a){case"arraybuffer":case"blob":const t=new Uint8Array(o.length);for(let e=0;e<o.length;e++)t[e]=o.charCodeAt(e);i="blob"===a?new Blob([t.buffer],{type:n}):t.buffer;break;case"document":const e=new DOMParser;i=e.parseFromString(o,n);break;case"json":i=JSON.parse(o);break;default:i=o}setTimeout((function(){e&&e(i),r.manager.itemEnd(t)}),0)}catch(e){setTimeout((function(){i&&i(e),r.manager.itemError(t),r.manager.itemEnd(t)}),0)}}else{Nc[t]=[],Nc[t].push({onLoad:e,onProgress:n,onError:i}),o=new XMLHttpRequest,o.open("GET",t,!0),o.addEventListener("load",(function(e){const n=this.response,i=Nc[t];if(delete Nc[t],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),zc.add(t,n);for(let t=0,e=i.length;t<e;t++){const e=i[t];e.onLoad&&e.onLoad(n)}r.manager.itemEnd(t)}else{for(let t=0,n=i.length;t<n;t++){const n=i[t];n.onError&&n.onError(e)}r.manager.itemError(t),r.manager.itemEnd(t)}}),!1),o.addEventListener("progress",(function(e){const n=Nc[t];for(let t=0,i=n.length;t<i;t++){const i=n[t];i.onProgress&&i.onProgress(e)}}),!1),o.addEventListener("error",(function(e){const n=Nc[t];delete Nc[t];for(let t=0,i=n.length;t<i;t++){const i=n[t];i.onError&&i.onError(e)}r.manager.itemError(t),r.manager.itemEnd(t)}),!1),o.addEventListener("abort",(function(e){const n=Nc[t];delete Nc[t];for(let t=0,i=n.length;t<i;t++){const i=n[t];i.onError&&i.onError(e)}r.manager.itemError(t),r.manager.itemEnd(t)}),!1),void 0!==this.responseType&&(o.responseType=this.responseType),void 0!==this.withCredentials&&(o.withCredentials=this.withCredentials),o.overrideMimeType&&o.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(const t in this.requestHeader)o.setRequestHeader(t,this.requestHeader[t]);o.send(null)}return r.manager.itemStart(t),o}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}}class Bc extends Dc{constructor(t){super(t)}load(t,e,n,i){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,a=zc.get(t);if(void 0!==a)return r.manager.itemStart(t),setTimeout((function(){e&&e(a),r.manager.itemEnd(t)}),0),a;const s=an("img");function o(){s.removeEventListener("load",o,!1),s.removeEventListener("error",l,!1),zc.add(t,this),e&&e(this),r.manager.itemEnd(t)}function l(e){s.removeEventListener("load",o,!1),s.removeEventListener("error",l,!1),i&&i(e),r.manager.itemError(t),r.manager.itemEnd(t)}return s.addEventListener("load",o,!1),s.addEventListener("error",l,!1),"data:"!==t.substr(0,5)&&void 0!==this.crossOrigin&&(s.crossOrigin=this.crossOrigin),r.manager.itemStart(t),s.src=t,s}}class Fc extends Dc{constructor(t){super(t)}load(t,e,n,i){const r=new Er,a=new Bc(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let s=0;function o(n){a.load(t[n],(function(t){r.images[n]=t,s++,6===s&&(r.needsUpdate=!0,e&&e(r))}),void 0,i)}for(let e=0;e<t.length;++e)o(e);return r}}class Uc extends Dc{constructor(t){super(t)}load(t,e,n,i){const r=new cn,a=new Bc(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(t,(function(t){r.image=t,r.needsUpdate=!0,void 0!==e&&e(r)}),n,i),r}}class Hc extends gi{constructor(t,e=1){super(),this.type="Light",this.color=new Oi(t),this.intensity=e}dispose(){}copy(t){return super.copy(t),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),e}}Hc.prototype.isLight=!0;class kc extends Hc{constructor(t,e,n){super(t,n),this.type="HemisphereLight",this.position.copy(gi.DefaultUp),this.updateMatrix(),this.groundColor=new Oi(e)}copy(t){return Hc.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this}}kc.prototype.isHemisphereLight=!0;const Gc=new jn,Vc=new mn,Wc=new mn;class jc{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new en(512,512),this.map=null,this.mapPass=null,this.matrix=new jn,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Dr,this._frameExtents=new en(1,1),this._viewportCount=1,this._viewports=[new un(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;Vc.setFromMatrixPosition(t.matrixWorld),e.position.copy(Vc),Wc.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(Wc),e.updateMatrixWorld(),Gc.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Gc),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(e.projectionMatrix),n.multiply(e.matrixWorldInverse)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const t={};return 0!==this.bias&&(t.bias=this.bias),0!==this.normalBias&&(t.normalBias=this.normalBias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class Xc extends jc{constructor(){super(new Mr(50,1,.5,500)),this.focus=1}updateMatrices(t){const e=this.camera,n=2*Xe*t.angle*this.focus,i=this.mapSize.width/this.mapSize.height,r=t.distance||e.far;n===e.fov&&i===e.aspect&&r===e.far||(e.fov=n,e.aspect=i,e.far=r,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}Xc.prototype.isSpotLightShadow=!0;class Yc extends Hc{constructor(t,e,n=0,i=Math.PI/3,r=0,a=1){super(t,e),this.type="SpotLight",this.position.copy(gi.DefaultUp),this.updateMatrix(),this.target=new gi,this.distance=n,this.angle=i,this.penumbra=r,this.decay=a,this.shadow=new Xc}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}Yc.prototype.isSpotLight=!0;const Zc=new jn,Jc=new mn,Qc=new mn;class Kc extends jc{constructor(){super(new Mr(90,1,.5,500)),this._frameExtents=new en(4,2),this._viewportCount=6,this._viewports=[new un(2,1,1,1),new un(0,1,1,1),new un(3,1,1,1),new un(1,1,1,1),new un(3,0,1,1),new un(1,0,1,1)],this._cubeDirections=[new mn(1,0,0),new mn(-1,0,0),new mn(0,0,1),new mn(0,0,-1),new mn(0,1,0),new mn(0,-1,0)],this._cubeUps=[new mn(0,1,0),new mn(0,1,0),new mn(0,1,0),new mn(0,1,0),new mn(0,0,1),new mn(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,i=this.matrix,r=t.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),Jc.setFromMatrixPosition(t.matrixWorld),n.position.copy(Jc),Qc.copy(n.position),Qc.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(Qc),n.updateMatrixWorld(),i.makeTranslation(-Jc.x,-Jc.y,-Jc.z),Zc.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Zc)}}Kc.prototype.isPointLightShadow=!0;(class extends Hc{constructor(t,e,n=0,i=1){super(t,e),this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new Kc}get power(){return 4*this.intensity*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}).prototype.isPointLight=!0;class $c extends jc{constructor(){super(new Yr(-5,5,5,-5,.5,500))}}$c.prototype.isDirectionalLightShadow=!0;(class extends Hc{constructor(t,e){super(t,e),this.type="DirectionalLight",this.position.copy(gi.DefaultUp),this.updateMatrix(),this.target=new gi,this.shadow=new $c}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}).prototype.isDirectionalLight=!0;class th extends Hc{constructor(t,e){super(t,e),this.type="AmbientLight"}}th.prototype.isAmbientLight=!0;(class extends Hc{constructor(t,e,n=10,i=10){super(t,e),this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(t){this.intensity=t/(this.width*this.height*Math.PI)}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){const e=super.toJSON(t);return e.object.width=this.width,e.object.height=this.height,e}}).prototype.isRectAreaLight=!0;class eh{constructor(){this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new mn)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const n=t.x,i=t.y,r=t.z,a=this.coefficients;return e.copy(a[0]).multiplyScalar(.282095),e.addScaledVector(a[1],.488603*i),e.addScaledVector(a[2],.488603*r),e.addScaledVector(a[3],.488603*n),e.addScaledVector(a[4],n*i*1.092548),e.addScaledVector(a[5],i*r*1.092548),e.addScaledVector(a[6],.315392*(3*r*r-1)),e.addScaledVector(a[7],n*r*1.092548),e.addScaledVector(a[8],.546274*(n*n-i*i)),e}getIrradianceAt(t,e){const n=t.x,i=t.y,r=t.z,a=this.coefficients;return e.copy(a[0]).multiplyScalar(.886227),e.addScaledVector(a[1],1.023328*i),e.addScaledVector(a[2],1.023328*r),e.addScaledVector(a[3],1.023328*n),e.addScaledVector(a[4],.858086*n*i),e.addScaledVector(a[5],.858086*i*r),e.addScaledVector(a[6],.743125*r*r-.247708),e.addScaledVector(a[7],.858086*n*r),e.addScaledVector(a[8],.429043*(n*n-i*i)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(t.coefficients[n],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let n=0;n<9;n++)this.coefficients[n].lerp(t.coefficients[n],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(t,e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(t,e+3*i);return this}toArray(t=[],e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(t,e+3*i);return t}static getBasisAt(t,e){const n=t.x,i=t.y,r=t.z;e[0]=.282095,e[1]=.488603*i,e[2]=.488603*r,e[3]=.488603*n,e[4]=1.092548*n*i,e[5]=1.092548*i*r,e[6]=.315392*(3*r*r-1),e[7]=1.092548*n*r,e[8]=.546274*(n*n-i*i)}}eh.prototype.isSphericalHarmonics3=!0;class nh extends Hc{constructor(t=new eh,e=1){super(void 0,e),this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){const e=super.toJSON(t);return e.object.sh=this.sh.toArray(),e}}nh.prototype.isLightProbe=!0;class ih{static decodeText(t){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(t);let e="";for(let n=0,i=t.length;n<i;n++)e+=String.fromCharCode(t[n]);try{return decodeURIComponent(escape(e))}catch(t){return e}}static extractUrlBase(t){const e=t.lastIndexOf("/");return-1===e?"./":t.substr(0,e+1)}}let rh;(class extends Ki{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(t){return super.copy(t),this.instanceCount=t.instanceCount,this}clone(){return(new this.constructor).copy(this)}toJSON(){const t=super.toJSON(this);return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}).prototype.isInstancedBufferGeometry=!0,class extends Dc{constructor(t){super(t),"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(t){return this.options=t,this}load(t,e,n,i){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,a=zc.get(t);if(void 0!==a)return r.manager.itemStart(t),setTimeout((function(){e&&e(a),r.manager.itemEnd(t)}),0),a;const s={};s.credentials="anonymous"===this.crossOrigin?"same-origin":"include",s.headers=this.requestHeader,fetch(t,s).then((function(t){return t.blob()})).then((function(t){return createImageBitmap(t,Object.assign(r.options,{colorSpaceConversion:"none"}))})).then((function(n){zc.add(t,n),e&&e(n),r.manager.itemEnd(t)})).catch((function(e){i&&i(e),r.manager.itemError(t),r.manager.itemEnd(t)})),r.manager.itemStart(t)}}.prototype.isImageBitmapLoader=!0;const ah=function(){return void 0===rh&&(rh=new(window.AudioContext||window.webkitAudioContext)),rh};class sh extends Dc{constructor(t){super(t)}load(t,e,n,i){const r=this,a=new Oc(this.manager);a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(t,(function(n){try{const t=n.slice(0);ah().decodeAudioData(t,(function(t){e(t)}))}catch(e){i?i(e):console.error(e),r.manager.itemError(t)}}),n,i)}}(class extends nh{constructor(t,e,n=1){super(void 0,n);const i=(new Oi).set(t),r=(new Oi).set(e),a=new mn(i.r,i.g,i.b),s=new mn(r.r,r.g,r.b),o=Math.sqrt(Math.PI),l=o*Math.sqrt(.75);this.sh.coefficients[0].copy(a).add(s).multiplyScalar(o),this.sh.coefficients[1].copy(a).sub(s).multiplyScalar(l)}}).prototype.isHemisphereLightProbe=!0,class extends nh{constructor(t,e=1){super(void 0,e);const n=(new Oi).set(t);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}.prototype.isAmbientLightProbe=!0;class oh{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=lh(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=lh();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}function lh(){return("undefined"==typeof performance?Date:performance).now()}const ch=new mn,hh=new pn,uh=new mn,qh=new mn;class dh extends gi{constructor(){super(),this.type="AudioListener",this.context=ah(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new oh}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(t){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}updateMatrixWorld(t){super.updateMatrixWorld(t);const e=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(ch,hh,uh),qh.set(0,0,-1).applyQuaternion(hh),e.positionX){const t=this.context.currentTime+this.timeDelta;e.positionX.linearRampToValueAtTime(ch.x,t),e.positionY.linearRampToValueAtTime(ch.y,t),e.positionZ.linearRampToValueAtTime(ch.z,t),e.forwardX.linearRampToValueAtTime(qh.x,t),e.forwardY.linearRampToValueAtTime(qh.y,t),e.forwardZ.linearRampToValueAtTime(qh.z,t),e.upX.linearRampToValueAtTime(n.x,t),e.upY.linearRampToValueAtTime(n.y,t),e.upZ.linearRampToValueAtTime(n.z,t)}else e.setPosition(ch.x,ch.y,ch.z),e.setOrientation(qh.x,qh.y,qh.z,n.x,n.y,n.z)}}class ph extends gi{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(t){return t||(t=[]),!0===this._connected?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){if(this.detune=t,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(!1!==this.hasPlaybackControl)return this.playbackRate=t,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(!1!==this.hasPlaybackControl)return this.loop=t,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}}class mh{constructor(t,e,n){let i,r,a;switch(this.binding=t,this.valueSize=n,e){case"quaternion":i=this._slerp,r=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*n),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(5*n);break;default:i=this._lerp,r=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*n)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const n=this.buffer,i=this.valueSize,r=t*i+i;let a=this.cumulativeWeight;if(0===a){for(let t=0;t!==i;++t)n[r+t]=n[t];a=e}else{a+=e;const t=e/a;this._mixBufferRegion(n,r,0,t,i)}this.cumulativeWeight=a}accumulateAdditive(t){const e=this.buffer,n=this.valueSize,i=n*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(e,i,0,t,n),this.cumulativeWeightAdditive+=t}apply(t){const e=this.valueSize,n=this.buffer,i=t*e+e,r=this.cumulativeWeight,a=this.cumulativeWeightAdditive,s=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const t=e*this._origIndex;this._mixBufferRegion(n,i,t,1-r,e)}a>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*e,1,e);for(let t=e,r=e+e;t!==r;++t)if(n[t]!==n[t+e]){s.setValue(n,i);break}}saveOriginalState(){const t=this.binding,e=this.buffer,n=this.valueSize,i=n*this._origIndex;t.getValue(e,i);for(let t=n,r=i;t!==r;++t)e[t]=e[i+t%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=3*this.valueSize;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let n=t;n<e;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[e+n]=this.buffer[t+n]}_select(t,e,n,i,r){if(i>=.5)for(let i=0;i!==r;++i)t[e+i]=t[n+i]}_slerp(t,e,n,i){pn.slerpFlat(t,e,t,e,t,n,i)}_slerpAdditive(t,e,n,i,r){const a=this._workIndex*r;pn.multiplyQuaternionsFlat(t,a,t,e,t,n),pn.slerpFlat(t,e,t,e,t,a,i)}_lerp(t,e,n,i,r){const a=1-i;for(let s=0;s!==r;++s){const r=e+s;t[r]=t[r]*a+t[n+s]*i}}_lerpAdditive(t,e,n,i,r){for(let a=0;a!==r;++a){const r=e+a;t[r]=t[r]+t[n+a]*i}}}const fh="\\[\\]\\.:\\/",gh=new RegExp("["+fh+"]","g"),xh="[^"+fh+"]",vh="[^"+fh.replace("\\.","")+"]",yh=/((?:WC+[\/:])*)/.source.replace("WC",xh),_h=/(WCOD+)?/.source.replace("WCOD",vh),bh=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",xh),wh=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",xh),Mh=new RegExp("^"+yh+_h+bh+wh+"$"),Sh=["material","materials","bones"];class Th{constructor(t,e,n){this.path=e,this.parsedPath=n||Th.parseTrackName(e),this.node=Th.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,n){return t&&t.isAnimationObjectGroup?new Th.Composite(t,e,n):new Th(t,e,n)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(gh,"")}static parseTrackName(t){const e=Mh.exec(t);if(!e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==i&&-1!==i){const t=n.nodeName.substring(i+1);-1!==Sh.indexOf(t)&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=t)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n}static findNode(t,e){if(!e||""===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(void 0!==n)return n}if(t.children){const n=function(t){for(let i=0;i<t.length;i++){const r=t[i];if(r.name===e||r.uuid===e)return r;const a=n(r.children);if(a)return a}return null},i=n(t.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.targetObject[this.propertyName]}_getValue_array(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)t[e++]=n[i]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,n=e.objectName,i=e.propertyName;let r=e.propertyIndex;if(t||(t=Th.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(n){let i=e.objectIndex;switch(n){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(let e=0;e<t.length;e++)if(t[e].name===i){i=e;break}break;default:if(void 0===t[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[n]}if(void 0!==i){if(void 0===t[i])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[i]}}const a=t[i];if(void 0===a){const n=e.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+n+"."+i+" but it wasn't found.",t)}let s=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?s=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(s=this.Versioning.MatrixWorldNeedsUpdate);let o=this.BindingType.Direct;if(void 0!==r){if("morphTargetInfluences"===i){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!t.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==t.morphTargetDictionary[r]&&(r=t.morphTargetDictionary[r])}o=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=r}else void 0!==a.fromArray&&void 0!==a.toArray?(o=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(o=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=i;this.getValue=this.GetterByBindingType[o],this.setValue=this.SetterByBindingTypeAndVersioning[o][s]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Th.Composite=class{constructor(t,e,n){const i=n||Th.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,i)}getValue(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];void 0!==i&&i.getValue(t,e)}setValue(t,e){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(t,e)}bind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()}unbind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}},Th.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Th.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},Th.prototype.GetterByBindingType=[Th.prototype._getValue_direct,Th.prototype._getValue_array,Th.prototype._getValue_arrayElement,Th.prototype._getValue_toArray],Th.prototype.SetterByBindingTypeAndVersioning=[[Th.prototype._setValue_direct,Th.prototype._setValue_direct_setNeedsUpdate,Th.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Th.prototype._setValue_array,Th.prototype._setValue_array_setNeedsUpdate,Th.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Th.prototype._setValue_arrayElement,Th.prototype._setValue_arrayElement_setNeedsUpdate,Th.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Th.prototype._setValue_fromArray,Th.prototype._setValue_fromArray_setNeedsUpdate,Th.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class Eh{constructor(t,e,n=null,i=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=n,this.blendMode=i;const r=e.tracks,a=r.length,s=new Array(a),o={endingStart:Ee,endingEnd:Ee};for(let t=0;t!==a;++t){const e=r[t].createInterpolant(null);s[t]=e,e.settings=o}this._interpolantSettings=o,this._interpolants=s,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,n){if(t.fadeOut(e),this.fadeIn(e),n){const n=this._clip.duration,i=t._clip.duration,r=i/n,a=n/i;t.warp(1,r,e),this.warp(a,1,e)}return this}crossFadeTo(t,e,n){return t.crossFadeFrom(this,e,n)}stopFading(){const t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,n){const i=this._mixer,r=i.time,a=this.timeScale;let s=this._timeScaleInterpolant;null===s&&(s=i._lendControlInterpolant(),this._timeScaleInterpolant=s);const o=s.parameterPositions,l=s.sampleValues;return o[0]=r,o[1]=r+n,l[0]=t/a,l[1]=e/a,this}stopWarping(){const t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,n,i){if(!this.enabled)return void this._updateWeight(t);const r=this._startTime;if(null!==r){const i=(t-r)*n;if(i<0||0===n)return;this._startTime=null,e=n*i}e*=this._updateTimeScale(t);const a=this._updateTime(e),s=this._updateWeight(t);if(s>0){const t=this._interpolants,e=this._propertyBindings;if(2501===this.blendMode)for(let n=0,i=t.length;n!==i;++n)t[n].evaluate(a),e[n].accumulateAdditive(s);else for(let n=0,r=t.length;n!==r;++n)t[n].evaluate(a),e[n].accumulate(i,s)}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const n=this._weightInterpolant;if(null!==n){const i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopFading(),0===i&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const n=this._timeScaleInterpolant;null!==n&&(e*=n.evaluate(t)[0],t>n.parameterPositions[1]&&(this.stopWarping(),0===e?this.paused=!0:this.timeScale=e))}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,n=this.loop;let i=this.time+t,r=this._loopCount;const a=2202===n;if(0===t)return-1===r?i:a&&1==(1&r)?e-i:i;if(2200===n){-1===r&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(i>=e)i=e;else{if(!(i<0)){this.time=i;break t}i=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(-1===r&&(t>=0?(r=0,this._setEndings(!0,0===this.repetitions,a)):this._setEndings(0===this.repetitions,!0,a)),i>=e||i<0){const n=Math.floor(i/e);i-=e*n,r+=Math.abs(n);const s=this.repetitions-r;if(s<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=t>0?e:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(1===s){const e=t<0;this._setEndings(e,!e,a)}else this._setEndings(!1,!1,a);this._loopCount=r,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:n})}}else this.time=i;if(a&&1==(1&r))return e-i}return i}_setEndings(t,e,n){const i=this._interpolantSettings;n?(i.endingStart=Ae,i.endingEnd=Ae):(i.endingStart=t?this.zeroSlopeAtStart?Ae:Ee:Le,i.endingEnd=e?this.zeroSlopeAtEnd?Ae:Ee:Le)}_scheduleFading(t,e,n){const i=this._mixer,r=i.time;let a=this._weightInterpolant;null===a&&(a=i._lendControlInterpolant(),this._weightInterpolant=a);const s=a.parameterPositions,o=a.sampleValues;return s[0]=r,o[0]=e,s[1]=r+t,o[1]=n,this}}(class extends We{constructor(t){super(),this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,e){const n=t._localRoot||this._root,i=t._clip.tracks,r=i.length,a=t._propertyBindings,s=t._interpolants,o=n.uuid,l=this._bindingsByRootAndName;let c=l[o];void 0===c&&(c={},l[o]=c);for(let t=0;t!==r;++t){const r=i[t],l=r.name;let h=c[l];if(void 0!==h)a[t]=h;else{if(h=a[t],void 0!==h){null===h._cacheIndex&&(++h.referenceCount,this._addInactiveBinding(h,o,l));continue}const i=e&&e._propertyBindings[t].binding.parsedPath;h=new mh(Th.create(n,l,i),r.ValueTypeName,r.getValueSize()),++h.referenceCount,this._addInactiveBinding(h,o,l),a[t]=h}s[t].resultBuffer=h.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(null===t._cacheIndex){const e=(t._localRoot||this._root).uuid,n=t._clip.uuid,i=this._actionsByClip[n];this._bindAction(t,i&&i.knownActions[0]),this._addInactiveAction(t,n,e)}const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==n.useCount++&&(this._lendBinding(n),n.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==--n.useCount&&(n.restoreOriginalState(),this._takeBackBinding(n))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return null!==e&&e<this._nActiveActions}_addInactiveAction(t,e,n){const i=this._actions,r=this._actionsByClip;let a=r[e];if(void 0===a)a={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,r[e]=a;else{const e=a.knownActions;t._byClipCacheIndex=e.length,e.push(t)}t._cacheIndex=i.length,i.push(t),a.actionByRoot[n]=t}_removeInactiveAction(t){const e=this._actions,n=e[e.length-1],i=t._cacheIndex;n._cacheIndex=i,e[i]=n,e.pop(),t._cacheIndex=null;const r=t._clip.uuid,a=this._actionsByClip,s=a[r],o=s.knownActions,l=o[o.length-1],c=t._byClipCacheIndex;l._byClipCacheIndex=c,o[c]=l,o.pop(),t._byClipCacheIndex=null,delete s.actionByRoot[(t._localRoot||this._root).uuid],0===o.length&&delete a[r],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==--n.referenceCount&&this._removeInactiveBinding(n)}}_lendAction(t){const e=this._actions,n=t._cacheIndex,i=this._nActiveActions++,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r}_takeBackAction(t){const e=this._actions,n=t._cacheIndex,i=--this._nActiveActions,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r}_addInactiveBinding(t,e,n){const i=this._bindingsByRootAndName,r=this._bindings;let a=i[e];void 0===a&&(a={},i[e]=a),a[n]=t,t._cacheIndex=r.length,r.push(t)}_removeInactiveBinding(t){const e=this._bindings,n=t.binding,i=n.rootNode.uuid,r=n.path,a=this._bindingsByRootAndName,s=a[i],o=e[e.length-1],l=t._cacheIndex;o._cacheIndex=l,e[l]=o,e.pop(),delete s[r],0===Object.keys(s).length&&delete a[i]}_lendBinding(t){const e=this._bindings,n=t._cacheIndex,i=this._nActiveBindings++,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r}_takeBackBinding(t){const e=this._bindings,n=t._cacheIndex,i=--this._nActiveBindings,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return void 0===n&&(n=new _c(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=e,t[e]=n),n}_takeBackControlInterpolant(t){const e=this._controlInterpolants,n=t.__cacheIndex,i=--this._nActiveControlInterpolants,r=e[i];t.__cacheIndex=i,e[i]=t,r.__cacheIndex=n,e[n]=r}clipAction(t,e,n){const i=e||this._root,r=i.uuid;let a="string"==typeof t?Cc.findByName(i,t):t;const s=null!==a?a.uuid:t,o=this._actionsByClip[s];let l=null;if(void 0===n&&(n=null!==a?a.blendMode:2500),void 0!==o){const t=o.actionByRoot[r];if(void 0!==t&&t.blendMode===n)return t;l=o.knownActions[0],null===a&&(a=l._clip)}if(null===a)return null;const c=new Eh(this,a,e,n);return this._bindAction(c,l),this._addInactiveAction(c,s,r),c}existingAction(t,e){const n=e||this._root,i=n.uuid,r="string"==typeof t?Cc.findByName(n,t):t,a=r?r.uuid:t,s=this._actionsByClip[a];return void 0!==s&&s.actionByRoot[i]||null}stopAllAction(){const t=this._actions;for(let e=this._nActiveActions-1;e>=0;--e)t[e].stop();return this}update(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,i=this.time+=t,r=Math.sign(t),a=this._accuIndex^=1;for(let s=0;s!==n;++s)e[s]._update(i,t,r,a);const s=this._bindings,o=this._nActiveBindings;for(let t=0;t!==o;++t)s[t].apply(a);return this}setTime(t){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const e=this._actions,n=t.uuid,i=this._actionsByClip,r=i[n];if(void 0!==r){const t=r.knownActions;for(let n=0,i=t.length;n!==i;++n){const i=t[n];this._deactivateAction(i);const r=i._cacheIndex,a=e[e.length-1];i._cacheIndex=null,i._byClipCacheIndex=null,a._cacheIndex=r,e[r]=a,e.pop(),this._removeInactiveBindingsForAction(i)}delete i[n]}}uncacheRoot(t){const e=t.uuid,n=this._actionsByClip;for(const t in n){const i=n[t].actionByRoot[e];void 0!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}const i=this._bindingsByRootAndName[e];if(void 0!==i)for(const t in i){const e=i[t];e.restoreOriginalState(),this._removeInactiveBinding(e)}}uncacheAction(t,e){const n=this.existingAction(t,e);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}}).prototype._controlInterpolantsResultBuffer=new Float32Array(1);class Ah{constructor(t){"string"==typeof t&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),t=arguments[1]),this.value=t}clone(){return new Ah(void 0===this.value.clone?this.value:this.value.clone())}}(class extends Eo{constructor(t,e,n=1){super(t,e),this.meshPerAttribute=n}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}clone(t){const e=super.clone(t);return e.meshPerAttribute=this.meshPerAttribute,e}toJSON(t){const e=super.toJSON(t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}).prototype.isInstancedInterleavedBuffer=!0;const Lh=new en;class Rh{constructor(t=new en(1/0,1/0),e=new en(-1/0,-1/0)){this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=Lh.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return Lh.copy(t).clamp(this.min,this.max).sub(t).length()}intersect(t){return this.min.max(t.min),this.max.min(t.max),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}Rh.prototype.isBox2=!0,class extends gi{constructor(t){super(),this.material=t,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}}.prototype.isImmediateRenderObject=!0;const Ch=new mn,Ph=new jn,zh=new jn;function Ih(t){const e=[];t&&t.isBone&&e.push(t);for(let n=0;n<t.children.length;n++)e.push.apply(e,Ih(t.children[n]));return e}class Dh{constructor(){this.type="ShapePath",this.color=new Oi,this.subPaths=[],this.currentPath=null}moveTo(t,e){return this.currentPath=new Fl,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this}lineTo(t,e){return this.currentPath.lineTo(t,e),this}quadraticCurveTo(t,e,n,i){return this.currentPath.quadraticCurveTo(t,e,n,i),this}bezierCurveTo(t,e,n,i,r,a){return this.currentPath.bezierCurveTo(t,e,n,i,r,a),this}splineThru(t){return this.currentPath.splineThru(t),this}toShapes(t,e){function n(t){const e=[];for(let n=0,i=t.length;n<i;n++){const i=t[n],r=new Ul;r.curves=i.curves,e.push(r)}return e}function i(t,e){const n=e.length;let i=!1;for(let r=n-1,a=0;a<n;r=a++){let n=e[r],s=e[a],o=s.x-n.x,l=s.y-n.y;if(Math.abs(l)>Number.EPSILON){if(l<0&&(n=e[a],o=-o,s=e[r],l=-l),t.y<n.y||t.y>s.y)continue;if(t.y===n.y){if(t.x===n.x)return!0}else{const e=l*(t.x-n.x)-o*(t.y-n.y);if(0===e)return!0;if(e<0)continue;i=!i}}else{if(t.y!==n.y)continue;if(s.x<=t.x&&t.x<=n.x||n.x<=t.x&&t.x<=s.x)return!0}}return i}const r=uc.isClockWise,a=this.subPaths;if(0===a.length)return[];if(!0===e)return n(a);let s,o,l;const c=[];if(1===a.length)return o=a[0],l=new Ul,l.curves=o.curves,c.push(l),c;let h=!r(a[0].getPoints());h=t?!h:h;const u=[],q=[];let d,p,m=[],f=0;q[f]=void 0,m[f]=[];for(let e=0,n=a.length;e<n;e++)o=a[e],d=o.getPoints(),s=r(d),s=t?!s:s,s?(!h&&q[f]&&f++,q[f]={s:new Ul,p:d},q[f].s.curves=o.curves,h&&f++,m[f]=[]):m[f].push({h:o,p:d[0]});if(!q[0])return n(a);if(q.length>1){let t=!1;const e=[];for(let t=0,e=q.length;t<e;t++)u[t]=[];for(let n=0,r=q.length;n<r;n++){const r=m[n];for(let a=0;a<r.length;a++){const s=r[a];let o=!0;for(let r=0;r<q.length;r++)i(s.p,q[r].p)&&(n!==r&&e.push({froms:n,tos:r,hole:a}),o?(o=!1,u[r].push(s)):t=!0);o&&u[n].push(s)}}e.length>0&&(t||(m=u))}for(let t=0,e=q.length;t<e;t++){l=q[t].s,c.push(l),p=m[t];for(let t=0,e=p.length;t<e;t++)l.holes.push(p[t].h)}return c}}const Nh=new Float32Array(1);new Int32Array(Nh.buffer),vl.create=function(t,e){return console.log("THREE.Curve.create() has been deprecated"),t.prototype=Object.create(vl.prototype),t.prototype.constructor=t,t.prototype.getPoint=e,t},Fl.prototype.fromPoints=function(t){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(t)},class extends ql{constructor(t=10,e=10,n=4473924,i=8947848){n=new Oi(n),i=new Oi(i);const r=e/2,a=t/e,s=t/2,o=[],l=[];for(let t=0,c=0,h=-s;t<=e;t++,h+=a){o.push(-s,0,h,s,0,h),o.push(h,0,-s,h,0,s);const e=t===r?n:i;e.toArray(l,c),c+=3,e.toArray(l,c),c+=3,e.toArray(l,c),c+=3,e.toArray(l,c),c+=3}const c=new Ki;c.setAttribute("position",new Vi(o,3)),c.setAttribute("color",new Vi(l,3)),super(c,new il({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}}.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},class extends ql{constructor(t){const e=Ih(t),n=new Ki,i=[],r=[],a=new Oi(0,0,1),s=new Oi(0,1,0);for(let t=0;t<e.length;t++){const n=e[t];n.parent&&n.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),r.push(a.r,a.g,a.b),r.push(s.r,s.g,s.b))}n.setAttribute("position",new Vi(i,3)),n.setAttribute("color",new Vi(r,3)),super(n,new il({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(t){const e=this.bones,n=this.geometry,i=n.getAttribute("position");zh.copy(this.root.matrixWorld).invert();for(let t=0,n=0;t<e.length;t++){const r=e[t];r.parent&&r.parent.isBone&&(Ph.multiplyMatrices(zh,r.matrixWorld),Ch.setFromMatrixPosition(Ph),i.setXYZ(n,Ch.x,Ch.y,Ch.z),Ph.multiplyMatrices(zh,r.parent.matrixWorld),Ch.setFromMatrixPosition(Ph),i.setXYZ(n+1,Ch.x,Ch.y,Ch.z),n+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}}.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},Dc.prototype.extractUrlBase=function(t){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),ih.extractUrlBase(t)},Dc.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},Rh.prototype.center=function(t){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(t)},Rh.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Rh.prototype.isIntersectionBox=function(t){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},Rh.prototype.size=function(t){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(t)},xn.prototype.center=function(t){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(t)},xn.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},xn.prototype.isIntersectionBox=function(t){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},xn.prototype.isIntersectionSphere=function(t){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},xn.prototype.size=function(t){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(t)},On.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Dr.prototype.setFromMatrix=function(t){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(t)},nn.prototype.flattenToArrayOffset=function(t,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},nn.prototype.multiplyVector3=function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},nn.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},nn.prototype.applyToBufferAttribute=function(t){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},nn.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},nn.prototype.getInverse=function(t){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()},jn.prototype.extractPosition=function(t){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)},jn.prototype.flattenToArrayOffset=function(t,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},jn.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new mn).setFromMatrixColumn(this,3)},jn.prototype.setRotationFromQuaternion=function(t){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(t)},jn.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},jn.prototype.multiplyVector3=function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},jn.prototype.multiplyVector4=function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},jn.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},jn.prototype.rotateAxis=function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)},jn.prototype.crossVector=function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},jn.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},jn.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},jn.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},jn.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},jn.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},jn.prototype.applyToBufferAttribute=function(t){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},jn.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},jn.prototype.makeFrustum=function(t,e,n,i,r,a){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(t,e,i,n,r,a)},jn.prototype.getInverse=function(t){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()},Pr.prototype.isIntersectionLine=function(t){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(t)},pn.prototype.multiplyVector3=function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)},pn.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},Wn.prototype.isIntersectionBox=function(t){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},Wn.prototype.isIntersectionPlane=function(t){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(t)},Wn.prototype.isIntersectionSphere=function(t){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},Ai.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},Ai.prototype.barycoordFromPoint=function(t,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(t,e)},Ai.prototype.midpoint=function(t){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(t)},Ai.prototypenormal=function(t){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(t)},Ai.prototype.plane=function(t){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(t)},Ai.barycoordFromPoint=function(t,e,n,i,r){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),Ai.getBarycoord(t,e,n,i,r)},Ai.normal=function(t,e,n,i){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),Ai.getNormal(t,e,n,i)},Ul.prototype.extractAllPoints=function(t){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(t)},Ul.prototype.extrude=function(t){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new pc(this,t)},Ul.prototype.makeGeometry=function(t){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new fc(this,t)},en.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},en.prototype.distanceToManhattan=function(t){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},en.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},mn.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},mn.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},mn.prototype.getPositionFromMatrix=function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)},mn.prototype.getScaleFromMatrix=function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)},mn.prototype.getColumnFromMatrix=function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)},mn.prototype.applyProjection=function(t){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(t)},mn.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},mn.prototype.distanceToManhattan=function(t){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},mn.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},un.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},un.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},gi.prototype.getChildByName=function(t){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t)},gi.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},gi.prototype.translate=function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)},gi.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},gi.prototype.applyMatrix=function(t){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)},Object.defineProperties(gi.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(t){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=t}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),fr.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(fr.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),0},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),Qo.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Mr.prototype.setLens=function(t,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==e&&(this.filmGauge=e),this.setFocalLength(t)},Object.defineProperties(Hc.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(t){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(t){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=t}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(t){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=t}}}),Object.defineProperties(Hi.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===Ge},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(Ge)}}}),Hi.prototype.setDynamic=function(t){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?Ge:ke),this},Hi.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},Hi.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},Ki.prototype.addIndex=function(t){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(t)},Ki.prototype.addAttribute=function(t,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),e&&e.isBufferAttribute||e&&e.isInterleavedBufferAttribute?"index"===t?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(t,e):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(t,new Hi(arguments[1],arguments[2])))},Ki.prototype.addDrawCall=function(t,e,n){void 0!==n&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(t,e)},Ki.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},Ki.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},Ki.prototype.removeAttribute=function(t){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(t)},Ki.prototype.applyMatrix=function(t){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)},Object.defineProperties(Ki.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Eo.prototype.setDynamic=function(t){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?Ge:ke),this},Eo.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},pc.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},pc.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},pc.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")},To.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},Ah.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this},Object.defineProperties(Ri.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new Oi}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===t}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(t){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=t}},vertexTangents:{get:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")},set:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}}),Object.defineProperties(br.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(t){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=t}}}),wo.prototype.clearTarget=function(t,e,n,i){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(t),this.clear(e,n,i)},wo.prototype.animate=function(t){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(t)},wo.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},wo.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},wo.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},wo.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},wo.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},wo.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},wo.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},wo.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},wo.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},wo.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},wo.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},wo.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},wo.prototype.enableScissorTest=function(t){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(t)},wo.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},wo.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},wo.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},wo.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},wo.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},wo.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},wo.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},wo.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},wo.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},wo.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(wo.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=t}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(t){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===t?Ce:Re}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties(qo.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(qn.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=t}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=t}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=t}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=t}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(t){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=t}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(t){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=t}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(t){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=t}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(t){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=t}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(t){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=t}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(t){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=t}}}),ph.prototype.load=function(t){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this;return(new sh).load(t,(function(t){e.setBuffer(t)})),this},Tr.prototype.updateCubeMap=function(t,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(t,e)},Tr.prototype.clear=function(t,e,n,i){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(t,e,n,i)},on.crossOrigin=void 0,on.loadTexture=function(t,e,n,i){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const r=new Uc;r.setCrossOrigin(this.crossOrigin);const a=r.load(t,n,void 0,i);return e&&(a.mapping=e),a},on.loadTextureCube=function(t,e,n,i){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const r=new Fc;r.setCrossOrigin(this.crossOrigin);const a=r.load(t,n,void 0,i);return e&&(a.mapping=e),a},on.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},on.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"133"}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__="133");class Oh extends Dc{constructor(t){super(t)}load(t,e,n,i){const r=this,a=new Oc(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(r.withCredentials),a.load(t,(function(t){let n;try{n=JSON.parse(t)}catch(e){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),n=JSON.parse(t.substring(65,t.length-2))}const i=r.parse(n);e&&e(i)}),n,i)}parse(t){return new Bh(t)}}class Bh{constructor(t){this.type="Font",this.data=t}generateShapes(t,e=100){const n=[],i=function(t,e,n){const i=Array.from(t),r=e/n.resolution,a=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*r,s=[];let o=0,l=0;for(let t=0;t<i.length;t++){const e=i[t];if("\n"===e)o=0,l-=a;else{const t=Fh(e,r,o,l,n);o+=t.offsetX,s.push(t.path)}}return s}(t,e,this.data);for(let t=0,e=i.length;t<e;t++)Array.prototype.push.apply(n,i[t].toShapes());return n}}function Fh(t,e,n,i,r){const a=r.glyphs[t]||r.glyphs["?"];if(!a)return void console.error('THREE.Font: character "'+t+'" does not exists in font family '+r.familyName+".");const s=new Dh;let o,l,c,h,u,q,d,p;if(a.o){const t=a._cachedOutline||(a._cachedOutline=a.o.split(" "));for(let r=0,a=t.length;r<a;)switch(t[r++]){case"m":o=t[r++]*e+n,l=t[r++]*e+i,s.moveTo(o,l);break;case"l":o=t[r++]*e+n,l=t[r++]*e+i,s.lineTo(o,l);break;case"q":c=t[r++]*e+n,h=t[r++]*e+i,u=t[r++]*e+n,q=t[r++]*e+i,s.quadraticCurveTo(u,q,c,h);break;case"b":c=t[r++]*e+n,h=t[r++]*e+i,u=t[r++]*e+n,q=t[r++]*e+i,d=t[r++]*e+n,p=t[r++]*e+i,s.bezierCurveTo(u,q,d,p,c,h)}}return{offsetX:a.ha*e,path:s}}Bh.prototype.isFont=!0;const Uh=JSON.parse('{"glyphs":{"0":{"ha":833,"x_min":129,"x_max":704,"o":"m 416 820 q 568 768 503 820 q 669 622 633 716 q 704 402 704 527 q 669 183 704 277 q 568 37 633 89 q 416 -15 503 -15 q 264 37 330 -15 q 164 183 199 89 q 129 402 129 277 q 164 622 129 527 q 264 768 199 716 q 416 820 330 820 m 416 720 q 321 682 363 720 q 257 573 280 644 q 233 402 233 501 q 257 232 233 303 q 321 123 280 160 q 416 85 363 85 q 511 123 470 85 q 576 232 553 160 q 600 402 600 303 q 576 573 600 501 q 511 682 553 644 q 416 720 470 720 z "},"1":{"ha":833,"x_min":149,"x_max":703,"o":"m 661 98 q 693 86 684 98 q 703 49 703 75 q 693 11 703 22 q 661 0 684 0 l 203 0 q 171 11 180 0 q 161 49 161 22 q 171 86 161 75 q 203 98 180 98 l 386 98 l 386 674 l 217 569 q 196 562 205 562 q 159 590 174 562 q 149 621 149 606 q 170 656 149 644 l 426 814 q 453 822 439 822 q 478 812 468 822 q 488 785 488 802 l 488 98 l 661 98 z "},"2":{"ha":833,"x_min":134,"x_max":690,"o":"m 647 98 q 680 86 670 98 q 690 49 690 75 q 680 11 690 22 q 647 0 670 0 l 176 0 q 143 11 153 0 q 134 46 134 21 q 144 83 134 72 l 442 385 q 530 491 505 448 q 555 583 555 534 q 515 683 555 646 q 401 720 475 720 q 308 703 356 720 q 217 656 260 686 q 194 648 206 648 q 155 675 172 648 q 143 709 143 695 q 163 743 143 728 q 277 800 215 779 q 400 820 340 820 q 537 792 479 820 q 628 710 596 764 q 660 583 660 656 q 626 455 660 513 q 522 323 593 396 l 299 98 l 647 98 z "},"3":{"ha":833,"x_min":123,"x_max":677,"o":"m 393 820 q 530 792 471 820 q 620 714 588 765 q 652 596 652 664 q 625 495 652 538 q 548 428 597 453 q 643 353 609 403 q 677 234 677 303 q 644 104 677 160 q 549 16 611 47 q 399 -15 486 -15 q 264 8 332 -15 q 143 71 197 31 q 123 104 123 85 q 134 138 123 118 q 174 166 152 166 q 197 157 184 166 q 294 105 241 124 q 399 85 346 85 q 528 125 483 85 q 572 234 572 165 q 527 340 572 304 q 402 376 482 376 l 353 376 q 320 387 330 376 q 310 422 310 397 q 320 458 310 448 q 353 469 330 469 l 390 469 q 507 501 467 469 q 547 596 547 534 q 507 687 547 654 q 394 720 467 720 q 215 665 304 720 q 193 659 203 659 q 155 688 172 659 q 146 720 146 706 q 168 755 146 742 q 393 820 278 820 z "},"4":{"ha":833,"x_min":98,"x_max":721,"o":"m 678 302 q 711 291 701 302 q 721 254 721 280 q 711 216 721 227 q 678 205 701 205 l 568 205 l 568 37 q 557 3 568 14 q 518 -7 546 -7 l 517 -7 q 478 3 489 -7 q 467 37 467 14 l 467 205 l 142 205 q 109 217 119 205 q 98 255 98 229 q 106 288 98 277 l 435 779 q 466 810 449 800 q 509 820 484 820 q 568 767 568 820 l 568 302 l 678 302 m 232 302 l 467 302 l 472 673 l 232 302 z "},"5":{"ha":833,"x_min":127,"x_max":684,"o":"m 421 533 q 562 498 503 533 q 652 402 621 464 q 684 262 684 341 q 649 119 684 182 q 549 21 614 56 q 399 -15 484 -15 q 268 7 334 -15 q 149 66 202 28 q 127 101 127 81 q 138 134 127 116 q 178 162 156 162 q 201 153 189 162 q 296 104 245 122 q 399 85 348 85 q 495 107 454 85 q 557 169 536 130 q 579 262 579 209 q 559 351 579 312 q 500 411 538 389 q 412 433 463 433 q 330 421 366 433 q 258 385 293 409 q 224 378 248 378 q 184 388 196 378 q 174 422 172 398 l 187 761 q 199 795 189 785 q 238 805 210 805 l 600 805 q 633 794 623 805 q 643 756 643 783 q 633 719 643 730 q 600 707 623 707 l 284 707 l 275 495 q 421 533 343 533 z "},"6":{"ha":833,"x_min":138,"x_max":701,"o":"m 622 820 q 651 808 640 821 q 661 760 661 795 q 655 730 661 739 q 636 720 648 721 q 359 627 456 711 q 243 399 262 543 q 330 471 278 446 q 439 496 381 496 q 574 464 514 496 q 667 374 633 432 q 701 239 701 315 q 667 108 701 166 q 570 18 633 50 q 425 -15 507 -15 q 289 19 351 -15 q 189 117 227 53 q 138 347 138 206 q 187 569 138 465 q 345 743 237 673 q 622 820 454 812 m 425 395 q 336 377 375 395 q 274 325 296 358 q 252 250 252 292 q 274 165 252 202 q 334 106 295 127 q 425 85 373 85 q 515 104 476 85 q 575 158 554 123 q 597 239 597 193 q 576 321 597 286 q 516 376 555 357 q 425 395 477 395 z "},"7":{"ha":833,"x_min":135,"x_max":698,"o":"m 655 805 q 688 794 678 805 q 698 759 698 784 q 694 732 698 743 l 405 16 q 386 -7 399 1 q 354 -15 372 -15 q 314 -5 329 -15 q 299 22 299 5 q 302 38 299 28 l 576 707 l 178 707 q 145 719 155 707 q 135 756 135 730 q 145 794 135 783 q 178 805 155 805 l 655 805 z "},"8":{"ha":833,"x_min":142,"x_max":690,"o":"m 416 820 q 544 790 487 820 q 633 710 601 761 q 665 596 665 659 q 635 498 665 541 q 554 427 604 454 q 653 349 616 399 q 690 231 690 298 q 655 105 690 161 q 557 17 620 49 q 416 -15 494 -15 q 276 17 338 -15 q 178 105 213 49 q 142 231 142 161 q 179 349 142 298 q 278 427 216 399 q 198 498 228 454 q 168 596 168 541 q 200 710 168 659 q 289 790 232 761 q 416 820 346 820 m 416 720 q 341 704 374 720 q 290 661 309 689 q 271 594 271 632 q 290 531 271 559 q 342 486 309 503 q 416 470 376 470 q 491 486 457 470 q 543 531 524 503 q 562 594 562 559 q 543 661 562 632 q 491 704 524 689 q 416 720 458 720 m 416 376 q 329 357 367 376 q 269 306 290 339 q 247 231 247 273 q 269 156 247 189 q 329 104 290 123 q 416 85 367 85 q 504 104 466 85 q 564 156 543 123 q 586 231 586 189 q 564 306 586 273 q 504 357 543 339 q 416 376 466 376 z "},"9":{"ha":833,"x_min":132,"x_max":695,"o":"m 408 820 q 544 786 482 820 q 644 688 606 752 q 695 458 695 599 q 646 236 695 340 q 488 62 596 132 q 211 -15 379 -7 q 182 -3 193 -16 q 172 45 172 10 q 178 75 172 66 q 197 85 184 84 q 474 178 377 94 q 590 406 571 262 q 503 334 555 359 q 393 309 452 309 q 259 341 319 309 q 165 431 199 373 q 132 566 132 490 q 166 697 132 639 q 263 787 200 755 q 408 820 326 820 m 408 720 q 318 701 357 720 q 257 647 279 682 q 236 566 236 612 q 257 484 236 519 q 317 429 278 448 q 408 410 355 410 q 497 428 458 410 q 558 480 536 447 q 581 555 581 513 q 559 640 581 603 q 499 699 538 677 q 408 720 460 720 z "}," ":{"ha":833,"x_min":0,"x_max":0,"o":""},"A":{"ha":833,"x_min":68,"x_max":762,"o":"m 758 57 q 762 36 762 45 q 753 14 762 23 q 724 -1 744 5 q 696 -7 706 -7 q 674 1 683 -7 q 660 24 665 8 l 586 224 l 244 224 l 170 24 q 156 1 165 8 q 134 -7 147 -7 q 106 -1 124 -7 q 77 14 86 5 q 68 36 68 23 q 72 57 68 45 l 339 776 q 366 810 348 800 q 415 820 383 820 q 465 810 447 820 q 491 776 482 800 l 758 57 m 279 321 l 550 321 l 416 707 l 414 707 l 279 321 z "},"Á":{"ha":833,"x_min":68,"x_max":762,"o":"m 371 894 q 349 887 359 887 q 318 904 333 887 q 302 939 302 922 q 313 960 302 952 l 549 1134 q 574 1143 561 1143 q 619 1115 597 1143 q 640 1069 640 1088 q 625 1042 640 1051 l 371 894 m 758 57 q 762 36 762 45 q 753 14 762 23 q 724 -1 744 5 q 696 -7 706 -7 q 674 1 683 -7 q 660 24 665 8 l 586 224 l 244 224 l 170 24 q 156 1 165 8 q 134 -7 147 -7 q 106 -1 124 -7 q 77 14 86 5 q 68 36 68 23 q 72 57 68 45 l 339 776 q 366 810 348 800 q 415 820 383 820 q 465 810 447 820 q 491 776 482 800 l 758 57 m 279 321 l 550 321 l 416 707 l 414 707 l 279 321 z "},"Ă":{"ha":833,"x_min":68,"x_max":762,"o":"m 416 909 q 267 951 323 909 q 195 1070 210 994 q 194 1079 194 1074 q 203 1100 194 1092 q 231 1112 212 1107 q 250 1114 241 1114 q 279 1097 273 1114 q 328 1026 294 1049 q 416 1003 362 1003 q 505 1026 471 1003 q 554 1097 539 1049 q 583 1114 560 1114 q 602 1112 592 1114 q 630 1100 621 1107 q 639 1079 639 1092 q 638 1070 639 1074 q 566 951 623 994 q 416 909 509 909 m 758 57 q 762 36 762 45 q 753 14 762 23 q 724 -1 744 5 q 696 -7 706 -7 q 674 1 683 -7 q 660 24 665 8 l 586 224 l 244 224 l 170 24 q 156 1 165 8 q 134 -7 147 -7 q 106 -1 124 -7 q 77 14 86 5 q 68 36 68 23 q 72 57 68 45 l 339 776 q 366 810 348 800 q 415 820 383 820 q 465 810 447 820 q 491 776 482 800 l 758 57 m 279 321 l 550 321 l 416 707 l 414 707 l 279 321 z "},"Â":{"ha":833,"x_min":68,"x_max":762,"o":"m 267 896 q 245 888 256 888 q 216 904 230 888 q 200 936 200 922 q 211 958 200 948 l 377 1116 q 416 1130 392 1130 q 456 1116 441 1130 l 622 958 q 633 936 633 948 q 617 904 633 922 q 587 888 603 888 q 566 896 576 888 l 416 1013 l 267 896 m 758 57 q 762 36 762 45 q 753 14 762 23 q 724 -1 744 5 q 696 -7 706 -7 q 674 1 683 -7 q 660 24 665 8 l 586 224 l 244 224 l 170 24 q 156 1 165 8 q 134 -7 147 -7 q 106 -1 124 -7 q 77 14 86 5 q 68 36 68 23 q 72 57 68 45 l 339 776 q 366 810 348 800 q 415 820 383 820 q 465 810 447 820 q 491 776 482 800 l 758 57 m 279 321 l 550 321 l 416 707 l 414 707 l 279 321 z "},"Ä":{"ha":833,"x_min":68,"x_max":762,"o":"m 273 931 q 222 941 235 931 q 208 975 208 951 l 208 1063 q 222 1098 208 1088 q 273 1107 235 1107 q 323 1098 310 1107 q 337 1063 337 1088 l 337 975 q 323 941 337 951 q 273 931 310 931 m 557 931 q 507 941 520 931 q 493 975 493 951 l 493 1063 q 507 1098 493 1088 q 557 1107 520 1107 q 608 1098 595 1107 q 622 1063 622 1088 l 622 975 q 608 941 622 951 q 557 931 595 931 m 758 57 q 762 36 762 45 q 753 14 762 23 q 724 -1 744 5 q 696 -7 706 -7 q 674 1 683 -7 q 660 24 665 8 l 586 224 l 244 224 l 170 24 q 156 1 165 8 q 134 -7 147 -7 q 106 -1 124 -7 q 77 14 86 5 q 68 36 68 23 q 72 57 68 45 l 339 776 q 366 810 348 800 q 415 820 383 820 q 465 810 447 820 q 491 776 482 800 l 758 57 m 279 321 l 550 321 l 416 707 l 414 707 l 279 321 z "},"À":{"ha":833,"x_min":68,"x_max":762,"o":"m 208 1042 q 193 1069 193 1051 q 214 1115 193 1088 q 259 1143 236 1143 q 284 1134 272 1143 l 520 960 q 531 939 531 952 q 515 904 531 922 q 484 887 500 887 q 462 894 474 887 l 208 1042 m 758 57 q 762 36 762 45 q 753 14 762 23 q 724 -1 744 5 q 696 -7 706 -7 q 674 1 683 -7 q 660 24 665 8 l 586 224 l 244 224 l 170 24 q 156 1 165 8 q 134 -7 147 -7 q 106 -1 124 -7 q 77 14 86 5 q 68 36 68 23 q 72 57 68 45 l 339 776 q 366 810 348 800 q 415 820 383 820 q 465 810 447 820 q 491 776 482 800 l 758 57 m 279 321 l 550 321 l 416 707 l 414 707 l 279 321 z "},"Ā":{"ha":833,"x_min":68,"x_max":762,"o":"m 239 933 q 207 944 216 933 q 197 982 197 956 q 207 1020 197 1008 q 239 1031 216 1031 l 593 1031 q 626 1020 616 1031 q 636 982 636 1008 q 626 944 636 956 q 593 933 616 933 l 239 933 m 758 57 q 762 36 762 45 q 753 14 762 23 q 724 -1 744 5 q 696 -7 706 -7 q 674 1 683 -7 q 660 24 665 8 l 586 224 l 244 224 l 170 24 q 156 1 165 8 q 134 -7 147 -7 q 106 -1 124 -7 q 77 14 86 5 q 68 36 68 23 q 72 57 68 45 l 339 776 q 366 810 348 800 q 415 820 383 820 q 465 810 447 820 q 491 776 482 800 l 758 57 m 279 321 l 550 321 l 416 707 l 414 707 l 279 321 z "},"Ą":{"ha":833,"x_min":68,"x_max":789,"o":"m 415 820 q 465 810 447 820 q 491 776 482 800 l 758 57 q 762 36 762 45 q 753 14 762 22 q 655 -93 684 -48 q 625 -176 625 -137 q 640 -213 625 -200 q 677 -226 654 -226 q 754 -214 713 -226 q 762 -213 760 -213 q 788 -250 782 -213 q 789 -267 789 -262 q 784 -290 789 -281 q 766 -302 778 -298 q 655 -320 715 -320 q 556 -285 592 -320 q 519 -191 519 -250 q 555 -80 519 -134 q 659 28 591 -27 l 586 224 l 244 224 l 170 24 q 156 1 165 8 q 134 -7 147 -7 q 106 -1 124 -7 q 77 14 86 5 q 68 36 68 23 q 72 57 68 45 l 339 776 q 366 810 348 800 q 415 820 383 820 m 414 707 l 279 321 l 550 321 l 416 707 l 414 707 z "},"Å":{"ha":833,"x_min":68,"x_max":762,"o":"m 416 885 q 331 907 370 885 q 271 967 293 928 q 250 1052 250 1005 q 271 1137 250 1099 q 331 1197 293 1175 q 416 1219 370 1219 q 502 1197 463 1219 q 562 1137 540 1175 q 583 1052 583 1099 q 562 967 583 1005 q 502 907 540 928 q 416 885 463 885 m 416 1129 q 360 1108 381 1129 q 339 1052 339 1087 q 360 996 339 1017 q 416 975 381 975 q 473 996 452 975 q 494 1052 494 1017 q 473 1108 494 1087 q 416 1129 452 1129 m 758 57 q 762 36 762 45 q 753 14 762 23 q 724 -1 744 5 q 696 -7 706 -7 q 674 1 683 -7 q 660 24 665 8 l 586 224 l 244 224 l 170 24 q 156 1 165 8 q 134 -7 147 -7 q 106 -1 124 -7 q 77 14 86 5 q 68 36 68 23 q 72 57 68 45 l 339 776 q 366 810 348 800 q 415 820 383 820 q 465 810 447 820 q 491 776 482 800 l 758 57 m 279 321 l 550 321 l 416 707 l 414 707 l 279 321 z "},"Ã":{"ha":833,"x_min":68,"x_max":762,"o":"m 249 928 q 229 920 241 920 q 197 937 212 920 q 183 967 183 951 q 193 991 183 980 q 262 1054 225 1034 q 335 1075 299 1075 q 378 1068 359 1075 q 425 1050 397 1062 q 465 1033 448 1038 q 498 1027 481 1027 q 541 1039 520 1027 q 584 1074 562 1050 q 604 1082 592 1082 q 635 1065 621 1082 q 650 1034 650 1050 q 640 1010 650 1021 q 571 947 608 968 q 498 926 534 926 q 455 933 474 926 q 408 951 435 939 q 368 968 385 963 q 334 974 352 974 q 292 962 313 974 q 249 928 271 951 m 758 57 q 762 36 762 45 q 753 14 762 23 q 724 -1 744 5 q 696 -7 706 -7 q 674 1 683 -7 q 660 24 665 8 l 586 224 l 244 224 l 170 24 q 156 1 165 8 q 134 -7 147 -7 q 106 -1 124 -7 q 77 14 86 5 q 68 36 68 23 q 72 57 68 45 l 339 776 q 366 810 348 800 q 415 820 383 820 q 465 810 447 820 q 491 776 482 800 l 758 57 m 279 321 l 550 321 l 416 707 l 414 707 l 279 321 z "},"Æ":{"ha":833,"x_min":14,"x_max":793,"o":"m 751 98 q 784 86 774 98 q 793 49 793 75 q 784 11 793 22 q 751 0 774 0 l 433 0 q 400 11 410 0 q 390 46 390 21 l 390 251 l 204 251 l 116 24 q 101 1 110 8 q 79 -7 92 -7 q 52 -1 69 -7 q 23 14 32 5 q 14 35 14 22 q 18 57 14 45 l 292 759 q 315 794 301 784 q 352 805 329 805 l 737 805 q 770 794 760 805 q 780 756 780 783 q 770 719 780 730 q 737 707 760 707 l 492 707 l 492 464 l 707 464 q 740 453 730 464 q 749 415 749 441 q 740 377 749 389 q 707 366 730 366 l 492 366 l 492 98 l 751 98 m 390 349 l 390 707 l 373 707 l 241 349 l 390 349 z "},"B":{"ha":833,"x_min":139,"x_max":728,"o":"m 437 805 q 572 777 516 805 q 655 699 627 749 q 684 582 684 648 q 660 488 684 528 q 593 422 636 448 q 693 349 658 398 q 728 228 728 300 q 698 105 728 157 q 609 27 667 54 q 468 0 551 0 l 182 0 q 149 11 159 0 q 139 46 139 21 l 139 759 q 149 794 139 784 q 182 805 159 805 l 437 805 m 241 707 l 241 458 l 422 458 q 539 490 500 458 q 579 582 579 522 q 422 707 579 707 l 241 707 m 241 360 l 241 98 l 454 98 q 579 131 535 98 q 624 228 624 163 q 580 327 624 294 q 451 360 536 360 l 241 360 z "},"C":{"ha":833,"x_min":102,"x_max":728,"o":"m 450 820 q 580 803 518 820 q 703 751 642 787 q 728 713 728 736 q 720 681 728 701 q 684 651 705 651 q 661 659 674 651 q 450 720 558 720 q 322 681 377 720 q 236 571 267 642 q 206 403 206 499 q 236 235 206 307 q 322 124 267 163 q 450 85 377 85 q 661 146 558 85 q 684 154 674 154 q 720 124 705 154 q 728 92 728 104 q 703 54 728 68 q 580 2 642 18 q 450 -15 518 -15 q 268 37 347 -15 q 145 184 189 89 q 102 403 102 279 q 145 622 102 527 q 268 768 189 716 q 450 820 347 820 z "},"Ć":{"ha":833,"x_min":102,"x_max":728,"o":"m 564 1134 q 589 1143 576 1143 q 634 1115 612 1143 q 654 1069 654 1088 q 640 1042 654 1051 l 386 894 q 364 887 374 887 q 333 904 348 887 q 317 939 317 922 q 328 960 317 952 l 564 1134 m 450 820 q 580 803 518 820 q 703 751 642 787 q 728 713 728 736 q 720 681 728 701 q 684 651 705 651 q 661 659 674 651 q 450 720 558 720 q 322 681 377 720 q 236 571 267 642 q 206 403 206 499 q 236 235 206 307 q 322 124 267 163 q 450 85 377 85 q 661 146 558 85 q 684 154 674 154 q 720 124 705 154 q 728 92 728 104 q 703 54 728 68 q 580 2 642 18 q 450 -15 518 -15 q 268 37 347 -15 q 145 184 189 89 q 102 403 102 279 q 145 622 102 527 q 268 768 189 716 q 450 820 347 820 z "},"Č":{"ha":833,"x_min":102,"x_max":728,"o":"m 450 889 q 411 903 426 889 l 245 1061 q 234 1083 234 1071 q 250 1115 234 1097 q 279 1131 264 1131 q 300 1123 290 1131 l 450 1006 l 600 1123 q 621 1131 610 1131 q 651 1115 637 1131 q 667 1083 667 1097 q 656 1061 667 1071 l 490 903 q 450 889 475 889 m 450 820 q 580 803 518 820 q 703 751 642 787 q 728 713 728 736 q 720 681 728 701 q 684 651 705 651 q 661 659 674 651 q 450 720 558 720 q 322 681 377 720 q 236 571 267 642 q 206 403 206 499 q 236 235 206 307 q 322 124 267 163 q 450 85 377 85 q 661 146 558 85 q 684 154 674 154 q 720 124 705 154 q 728 92 728 104 q 703 54 728 68 q 580 2 642 18 q 450 -15 518 -15 q 268 37 347 -15 q 145 184 189 89 q 102 403 102 279 q 145 622 102 527 q 268 768 189 716 q 450 820 347 820 z "},"Ç":{"ha":833,"x_min":102,"x_max":728,"o":"m 661 146 q 684 154 674 154 q 720 124 705 154 q 728 92 728 104 q 703 54 728 68 q 494 -13 602 -5 l 494 -77 q 597 -108 562 -76 q 631 -191 631 -140 q 589 -285 631 -250 q 465 -320 547 -320 q 376 -312 419 -320 q 298 -288 332 -304 q 282 -264 282 -281 q 288 -240 282 -254 q 319 -210 299 -210 q 328 -211 324 -210 q 392 -229 357 -222 q 458 -237 427 -237 q 513 -225 493 -237 q 532 -193 532 -214 q 514 -160 532 -171 q 454 -149 496 -149 l 427 -150 q 411 -143 417 -150 q 404 -120 404 -136 l 404 -12 q 244 54 313 -1 q 139 198 176 109 q 102 403 102 288 q 145 622 102 527 q 268 768 189 716 q 450 820 347 820 q 580 803 518 820 q 703 751 642 787 q 728 713 728 736 q 720 681 728 701 q 684 651 705 651 q 661 659 674 651 q 450 720 558 720 q 322 681 377 720 q 236 571 267 642 q 206 403 206 499 q 236 235 206 307 q 322 124 267 163 q 450 85 377 85 q 661 146 558 85 z "},"Ĉ":{"ha":833,"x_min":102,"x_max":728,"o":"m 450 1130 q 490 1116 475 1130 l 656 958 q 667 936 667 948 q 651 904 667 922 q 621 888 637 888 q 600 896 610 888 l 450 1013 l 300 896 q 279 888 290 888 q 250 904 264 888 q 234 936 234 922 q 245 958 234 948 l 411 1116 q 450 1130 426 1130 m 450 820 q 580 803 518 820 q 703 751 642 787 q 728 713 728 736 q 720 681 728 701 q 684 651 705 651 q 661 659 674 651 q 450 720 558 720 q 322 681 377 720 q 236 571 267 642 q 206 403 206 499 q 236 235 206 307 q 322 124 267 163 q 450 85 377 85 q 661 146 558 85 q 684 154 674 154 q 720 124 705 154 q 728 92 728 104 q 703 54 728 68 q 580 2 642 18 q 450 -15 518 -15 q 268 37 347 -15 q 145 184 189 89 q 102 403 102 279 q 145 622 102 527 q 268 768 189 716 q 450 820 347 820 z "},"Ċ":{"ha":833,"x_min":102,"x_max":728,"o":"m 450 1107 q 501 1098 488 1107 q 515 1063 515 1088 l 515 975 q 501 941 515 951 q 450 931 488 931 q 399 941 413 931 q 386 975 386 951 l 386 1063 q 399 1098 386 1088 q 450 1107 413 1107 m 450 820 q 580 803 518 820 q 703 751 642 787 q 728 713 728 736 q 720 681 728 701 q 684 651 705 651 q 661 659 674 651 q 450 720 558 720 q 322 681 377 720 q 236 571 267 642 q 206 403 206 499 q 236 235 206 307 q 322 124 267 163 q 450 85 377 85 q 661 146 558 85 q 684 154 674 154 q 720 124 705 154 q 728 92 728 104 q 703 54 728 68 q 580 2 642 18 q 450 -15 518 -15 q 268 37 347 -15 q 145 184 189 89 q 102 403 102 279 q 145 622 102 527 q 268 768 189 716 q 450 820 347 820 z "},"D":{"ha":833,"x_min":119,"x_max":746,"o":"m 389 805 q 576 756 496 805 q 702 617 657 708 q 746 402 746 526 q 702 188 746 279 q 576 48 657 97 q 389 0 496 0 l 161 0 q 129 11 138 0 q 119 46 119 21 l 119 759 q 129 794 119 784 q 161 805 138 805 l 389 805 m 220 707 l 220 98 l 376 98 q 517 132 458 98 q 609 235 576 166 q 642 402 642 303 q 609 570 642 501 q 517 673 576 638 q 376 707 458 707 l 220 707 z "},"Ð":{"ha":833,"x_min":34,"x_max":760,"o":"m 403 805 q 590 756 509 805 q 715 617 671 708 q 760 402 760 526 q 715 188 760 279 q 590 48 671 97 q 403 0 509 0 l 195 0 q 162 11 172 0 q 153 46 153 21 l 153 366 l 77 366 q 44 377 54 366 q 34 415 34 389 q 44 453 34 441 q 77 464 54 464 l 153 464 l 153 759 q 162 794 153 784 q 195 805 172 805 l 403 805 m 390 98 q 531 132 471 98 q 623 235 590 166 q 655 402 655 303 q 623 570 655 501 q 531 673 590 638 q 390 707 471 707 l 254 707 l 254 464 l 404 464 q 436 453 427 464 q 446 415 446 441 q 436 377 446 389 q 404 366 427 366 l 254 366 l 254 98 l 390 98 z "},"Ď":{"ha":833,"x_min":119,"x_max":746,"o":"m 396 889 q 357 903 372 889 l 191 1061 q 180 1083 180 1071 q 195 1115 180 1097 q 225 1131 210 1131 q 246 1123 236 1131 l 396 1006 l 546 1123 q 567 1131 556 1131 q 597 1115 583 1131 q 612 1083 612 1097 q 602 1061 612 1071 l 435 903 q 396 889 420 889 m 389 805 q 576 756 496 805 q 702 617 657 708 q 746 402 746 526 q 702 188 746 279 q 576 48 657 97 q 389 0 496 0 l 161 0 q 129 11 138 0 q 119 46 119 21 l 119 759 q 129 794 119 784 q 161 805 138 805 l 389 805 m 220 707 l 220 98 l 376 98 q 517 132 458 98 q 609 235 576 166 q 642 402 642 303 q 609 570 642 501 q 517 673 576 638 q 376 707 458 707 l 220 707 z "},"Đ":{"ha":833,"x_min":119,"x_max":746,"o":"m 573 1031 q 606 1020 596 1031 q 616 982 616 1008 q 606 944 616 956 q 573 933 596 933 l 219 933 q 186 944 196 933 q 176 982 176 956 q 186 1020 176 1008 q 219 1031 196 1031 l 573 1031 m 389 805 q 576 756 496 805 q 702 617 657 708 q 746 402 746 526 q 702 188 746 279 q 576 48 657 97 q 389 0 496 0 l 161 0 q 129 11 138 0 q 119 46 119 21 l 119 759 q 129 794 119 784 q 161 805 138 805 l 389 805 m 220 707 l 220 98 l 376 98 q 517 132 458 98 q 609 235 576 166 q 642 402 642 303 q 609 570 642 501 q 517 673 576 638 q 376 707 458 707 l 220 707 z "},"E":{"ha":833,"x_min":153,"x_max":705,"o":"m 663 98 q 695 86 686 98 q 705 49 705 75 q 695 11 705 22 q 663 0 686 0 l 195 0 q 162 11 172 0 q 153 46 153 21 l 153 759 q 162 794 153 784 q 195 805 172 805 l 649 805 q 682 794 672 805 q 692 756 692 783 q 682 719 692 730 q 649 707 672 707 l 254 707 l 254 464 l 564 464 q 597 453 587 464 q 607 415 607 441 q 597 377 607 389 q 564 366 587 366 l 254 366 l 254 98 l 663 98 z "},"É":{"ha":833,"x_min":153,"x_max":705,"o":"m 330 894 q 309 887 318 887 q 277 904 292 887 q 261 939 261 922 q 272 960 261 952 l 508 1134 q 533 1143 520 1143 q 578 1115 556 1143 q 599 1069 599 1088 q 584 1042 599 1051 l 330 894 m 663 98 q 695 86 686 98 q 705 49 705 75 q 695 11 705 22 q 663 0 686 0 l 195 0 q 162 11 172 0 q 153 46 153 21 l 153 759 q 162 794 153 784 q 195 805 172 805 l 649 805 q 682 794 672 805 q 692 756 692 783 q 682 719 692 730 q 649 707 672 707 l 254 707 l 254 464 l 564 464 q 597 453 587 464 q 607 415 607 441 q 597 377 607 389 q 564 366 587 366 l 254 366 l 254 98 l 663 98 z "},"Ĕ":{"ha":833,"x_min":153,"x_max":705,"o":"m 423 909 q 274 951 330 909 q 201 1070 217 994 q 201 1079 201 1074 q 210 1100 201 1092 q 237 1112 218 1107 q 256 1114 248 1114 q 286 1097 279 1114 q 335 1026 301 1049 q 423 1003 369 1003 q 512 1026 478 1003 q 561 1097 546 1049 q 590 1114 567 1114 q 609 1112 599 1114 q 637 1100 628 1107 q 646 1079 646 1092 q 645 1070 646 1074 q 573 951 629 994 q 423 909 516 909 m 663 98 q 695 86 686 98 q 705 49 705 75 q 695 11 705 22 q 663 0 686 0 l 195 0 q 162 11 172 0 q 153 46 153 21 l 153 759 q 162 794 153 784 q 195 805 172 805 l 649 805 q 682 794 672 805 q 692 756 692 783 q 682 719 692 730 q 649 707 672 707 l 254 707 l 254 464 l 564 464 q 597 453 587 464 q 607 415 607 441 q 597 377 607 389 q 564 366 587 366 l 254 366 l 254 98 l 663 98 z "},"Ě":{"ha":833,"x_min":153,"x_max":705,"o":"m 218 1061 q 207 1083 207 1071 q 222 1115 207 1097 q 252 1131 237 1131 q 273 1123 263 1131 l 423 1006 l 573 1123 q 594 1131 583 1131 q 624 1115 610 1131 q 640 1083 640 1097 q 629 1061 640 1071 l 463 903 q 423 889 448 889 q 384 903 399 889 l 218 1061 m 663 98 q 695 86 686 98 q 705 49 705 75 q 695 11 705 22 q 663 0 686 0 l 195 0 q 162 11 172 0 q 153 46 153 21 l 153 759 q 162 794 153 784 q 195 805 172 805 l 649 805 q 682 794 672 805 q 692 756 692 783 q 682 719 692 730 q 649 707 672 707 l 254 707 l 254 464 l 564 464 q 597 453 587 464 q 607 415 607 441 q 597 377 607 389 q 564 366 587 366 l 254 366 l 254 98 l 663 98 z "},"Ê":{"ha":833,"x_min":153,"x_max":705,"o":"m 287 896 q 266 888 277 888 q 236 904 250 888 q 220 936 220 922 q 231 958 220 948 l 397 1116 q 437 1130 412 1130 q 476 1116 461 1130 l 642 958 q 653 936 653 948 q 637 904 653 922 q 608 888 623 888 q 587 896 597 888 l 437 1013 l 287 896 m 663 98 q 695 86 686 98 q 705 49 705 75 q 695 11 705 22 q 663 0 686 0 l 195 0 q 162 11 172 0 q 153 46 153 21 l 153 759 q 162 794 153 784 q 195 805 172 805 l 649 805 q 682 794 672 805 q 692 756 692 783 q 682 719 692 730 q 649 707 672 707 l 254 707 l 254 464 l 564 464 q 597 453 587 464 q 607 415 607 441 q 597 377 607 389 q 564 366 587 366 l 254 366 l 254 98 l 663 98 z "},"Ë":{"ha":833,"x_min":153,"x_max":705,"o":"m 288 931 q 237 941 250 931 q 223 975 223 951 l 223 1063 q 237 1098 223 1088 q 288 1107 250 1107 q 338 1098 325 1107 q 352 1063 352 1088 l 352 975 q 338 941 352 951 q 288 931 325 931 m 572 931 q 522 941 535 931 q 508 975 508 951 l 508 1063 q 522 1098 508 1088 q 572 1107 535 1107 q 623 1098 610 1107 q 637 1063 637 1088 l 637 975 q 623 941 637 951 q 572 931 610 931 m 663 98 q 695 86 686 98 q 705 49 705 75 q 695 11 705 22 q 663 0 686 0 l 195 0 q 162 11 172 0 q 153 46 153 21 l 153 759 q 162 794 153 784 q 195 805 172 805 l 649 805 q 682 794 672 805 q 692 756 692 783 q 682 719 692 730 q 649 707 672 707 l 254 707 l 254 464 l 564 464 q 597 453 587 464 q 607 415 607 441 q 597 377 607 389 q 564 366 587 366 l 254 366 l 254 98 l 663 98 z "},"Ė":{"ha":833,"x_min":153,"x_max":705,"o":"m 430 931 q 379 941 393 931 q 366 975 366 951 l 366 1063 q 379 1098 366 1088 q 430 1107 393 1107 q 481 1098 467 1107 q 494 1063 494 1088 l 494 975 q 481 941 494 951 q 430 931 467 931 m 663 98 q 695 86 686 98 q 705 49 705 75 q 695 11 705 22 q 663 0 686 0 l 195 0 q 162 11 172 0 q 153 46 153 21 l 153 759 q 162 794 153 784 q 195 805 172 805 l 649 805 q 682 794 672 805 q 692 756 692 783 q 682 719 692 730 q 649 707 672 707 l 254 707 l 254 464 l 564 464 q 597 453 587 464 q 607 415 607 441 q 597 377 607 389 q 564 366 587 366 l 254 366 l 254 98 l 663 98 z "},"È":{"ha":833,"x_min":153,"x_max":705,"o":"m 249 1042 q 234 1069 234 1051 q 254 1115 234 1088 q 300 1143 277 1143 q 325 1134 313 1143 l 561 960 q 572 939 572 952 q 555 904 572 922 q 524 887 541 887 q 503 894 515 887 l 249 1042 m 663 98 q 695 86 686 98 q 705 49 705 75 q 695 11 705 22 q 663 0 686 0 l 195 0 q 162 11 172 0 q 153 46 153 21 l 153 759 q 162 794 153 784 q 195 805 172 805 l 649 805 q 682 794 672 805 q 692 756 692 783 q 682 719 692 730 q 649 707 672 707 l 254 707 l 254 464 l 564 464 q 597 453 587 464 q 607 415 607 441 q 597 377 607 389 q 564 366 587 366 l 254 366 l 254 98 l 663 98 z "},"Ē":{"ha":833,"x_min":153,"x_max":705,"o":"m 246 933 q 213 944 223 933 q 203 982 203 956 q 213 1020 203 1008 q 246 1031 223 1031 l 600 1031 q 633 1020 623 1031 q 643 982 643 1008 q 633 944 643 956 q 600 933 623 933 l 246 933 m 663 98 q 695 86 686 98 q 705 49 705 75 q 695 11 705 22 q 663 0 686 0 l 195 0 q 162 11 172 0 q 153 46 153 21 l 153 759 q 162 794 153 784 q 195 805 172 805 l 649 805 q 682 794 672 805 q 692 756 692 783 q 682 719 692 730 q 649 707 672 707 l 254 707 l 254 464 l 564 464 q 597 453 587 464 q 607 415 607 441 q 597 377 607 389 q 564 366 587 366 l 254 366 l 254 98 l 663 98 z "},"Ę":{"ha":833,"x_min":153,"x_max":711,"o":"m 710 -250 q 711 -267 711 -262 q 706 -290 711 -281 q 688 -302 700 -298 q 577 -320 637 -320 q 478 -285 514 -320 q 441 -191 441 -250 q 469 -94 441 -141 q 547 0 496 -47 l 195 0 q 162 11 172 0 q 153 46 153 21 l 153 759 q 162 794 153 784 q 195 805 172 805 l 649 805 q 682 794 672 805 q 692 756 692 783 q 682 719 692 730 q 649 707 672 707 l 254 707 l 254 464 l 564 464 q 597 453 587 464 q 607 415 607 441 q 597 377 607 389 q 564 366 587 366 l 254 366 l 254 98 l 663 98 q 695 86 686 98 q 705 49 705 75 q 695 11 705 22 q 663 0 686 0 l 660 0 q 573 -98 600 -56 q 547 -176 547 -139 q 562 -213 547 -200 q 600 -226 576 -226 q 676 -214 635 -226 q 684 -213 682 -213 q 710 -250 704 -213 z "},"F":{"ha":833,"x_min":166,"x_max":705,"o":"m 663 805 q 695 794 686 805 q 705 756 705 783 q 695 719 705 730 q 663 707 686 707 l 268 707 l 268 437 l 585 437 q 617 426 608 437 q 627 388 627 414 q 617 350 627 361 q 585 339 608 339 l 268 339 l 268 37 q 257 3 268 14 q 218 -7 245 -7 l 216 -7 q 177 3 189 -7 q 166 37 166 14 l 166 759 q 177 794 166 784 q 209 805 187 805 l 663 805 z "},"G":{"ha":833,"x_min":75,"x_max":734,"o":"m 692 403 q 725 392 715 403 q 734 357 734 382 l 734 97 q 710 50 734 64 q 582 2 654 18 q 430 -15 509 -15 q 243 37 324 -15 q 119 184 163 89 q 75 403 75 279 q 121 621 75 526 q 250 768 168 715 q 437 820 332 820 q 567 805 507 820 q 688 758 628 791 q 714 720 714 744 q 707 688 714 707 q 671 658 693 658 q 648 665 660 658 q 437 720 551 720 q 304 681 363 720 q 213 570 246 642 q 179 403 179 498 q 210 235 179 307 q 298 124 241 163 q 430 85 355 85 q 633 124 549 85 l 633 305 l 452 305 q 419 316 429 305 q 409 354 409 328 q 419 392 409 380 q 452 403 429 403 l 692 403 z "},"Ğ":{"ha":833,"x_min":75,"x_max":734,"o":"m 437 909 q 287 951 344 909 q 215 1070 231 994 q 214 1079 214 1074 q 223 1100 214 1092 q 251 1112 232 1107 q 270 1114 261 1114 q 299 1097 293 1114 q 349 1026 315 1049 q 437 1003 382 1003 q 526 1026 492 1003 q 574 1097 559 1049 q 604 1114 581 1114 q 623 1112 612 1114 q 650 1100 642 1107 q 659 1079 659 1092 q 659 1070 659 1074 q 586 951 643 994 q 437 909 530 909 m 692 403 q 725 392 715 403 q 734 357 734 382 l 734 97 q 710 50 734 64 q 582 2 654 18 q 430 -15 509 -15 q 243 37 324 -15 q 119 184 163 89 q 75 403 75 279 q 121 621 75 526 q 250 768 168 715 q 437 820 332 820 q 567 805 507 820 q 688 758 628 791 q 714 720 714 744 q 707 688 714 707 q 671 658 693 658 q 648 665 660 658 q 437 720 551 720 q 304 681 363 720 q 213 570 246 642 q 179 403 179 498 q 210 235 179 307 q 298 124 241 163 q 430 85 355 85 q 633 124 549 85 l 633 305 l 452 305 q 419 316 429 305 q 409 354 409 328 q 419 392 409 380 q 452 403 429 403 l 692 403 z "},"Ĝ":{"ha":833,"x_min":75,"x_max":734,"o":"m 294 896 q 273 888 283 888 q 243 904 257 888 q 227 936 227 922 q 238 958 227 948 l 404 1116 q 444 1130 419 1130 q 483 1116 468 1130 l 649 958 q 660 936 660 948 q 644 904 660 922 q 614 888 630 888 q 593 896 604 888 l 444 1013 l 294 896 m 692 403 q 725 392 715 403 q 734 357 734 382 l 734 97 q 710 50 734 64 q 582 2 654 18 q 430 -15 509 -15 q 243 37 324 -15 q 119 184 163 89 q 75 403 75 279 q 121 621 75 526 q 250 768 168 715 q 437 820 332 820 q 567 805 507 820 q 688 758 628 791 q 714 720 714 744 q 707 688 714 707 q 671 658 693 658 q 648 665 660 658 q 437 720 551 720 q 304 681 363 720 q 213 570 246 642 q 179 403 179 498 q 210 235 179 307 q 298 124 241 163 q 430 85 355 85 q 633 124 549 85 l 633 305 l 452 305 q 419 316 429 305 q 409 354 409 328 q 419 392 409 380 q 452 403 429 403 l 692 403 z "},"Ģ":{"ha":833,"x_min":75,"x_max":734,"o":"m 692 403 q 725 392 715 403 q 734 357 734 382 l 734 97 q 710 50 734 64 q 582 2 654 18 q 430 -15 509 -15 q 243 37 324 -15 q 119 184 163 89 q 75 403 75 279 q 121 621 75 526 q 250 768 168 715 q 437 820 332 820 q 567 805 507 820 q 688 758 628 791 q 714 720 714 744 q 707 688 714 707 q 671 658 693 658 q 648 665 660 658 q 437 720 551 720 q 304 681 363 720 q 213 570 246 642 q 179 403 179 498 q 210 235 179 307 q 298 124 241 163 q 430 85 355 85 q 633 124 549 85 l 633 305 l 452 305 q 419 316 429 305 q 409 354 409 328 q 419 392 409 380 q 452 403 429 403 l 692 403 m 480 -99 q 499 -117 499 -99 q 495 -134 499 -125 l 416 -331 q 376 -357 406 -357 q 364 -356 368 -357 q 329 -326 329 -351 q 330 -315 329 -323 l 373 -121 q 401 -99 378 -99 l 480 -99 z "},"Ġ":{"ha":833,"x_min":75,"x_max":734,"o":"m 437 931 q 386 941 399 931 q 372 975 372 951 l 372 1063 q 386 1098 372 1088 q 437 1107 399 1107 q 488 1098 474 1107 q 501 1063 501 1088 l 501 975 q 488 941 501 951 q 437 931 474 931 m 692 403 q 725 392 715 403 q 734 357 734 382 l 734 97 q 710 50 734 64 q 582 2 654 18 q 430 -15 509 -15 q 243 37 324 -15 q 119 184 163 89 q 75 403 75 279 q 121 621 75 526 q 250 768 168 715 q 437 820 332 820 q 567 805 507 820 q 688 758 628 791 q 714 720 714 744 q 707 688 714 707 q 671 658 693 658 q 648 665 660 658 q 437 720 551 720 q 304 681 363 720 q 213 570 246 642 q 179 403 179 498 q 210 235 179 307 q 298 124 241 163 q 430 85 355 85 q 633 124 549 85 l 633 305 l 452 305 q 419 316 429 305 q 409 354 409 328 q 419 392 409 380 q 452 403 429 403 l 692 403 z "},"H":{"ha":833,"x_min":119,"x_max":714,"o":"m 664 812 q 703 802 692 812 q 714 768 714 791 l 714 37 q 703 3 714 14 q 664 -7 692 -7 l 663 -7 q 624 3 635 -7 q 612 37 612 14 l 612 366 l 220 366 l 220 37 q 209 3 220 14 q 170 -7 198 -7 l 169 -7 q 130 3 141 -7 q 119 37 119 14 l 119 768 q 130 802 119 791 q 169 812 141 812 l 170 812 q 209 802 198 812 q 220 768 220 791 l 220 464 l 612 464 l 612 768 q 624 802 612 791 q 663 812 635 812 l 664 812 z "},"Ħ":{"ha":833,"x_min":20,"x_max":812,"o":"m 770 661 q 803 649 793 661 q 812 612 812 638 q 803 574 812 585 q 770 563 793 563 l 714 563 l 714 37 q 703 3 714 14 q 664 -7 692 -7 l 663 -7 q 624 3 635 -7 q 612 37 612 14 l 612 366 l 220 366 l 220 37 q 209 3 220 14 q 170 -7 198 -7 l 169 -7 q 130 3 141 -7 q 119 37 119 14 l 119 563 l 63 563 q 30 574 40 563 q 20 612 20 585 q 30 649 20 638 q 63 661 40 661 l 119 661 l 119 768 q 130 802 119 791 q 169 812 141 812 l 170 812 q 209 802 198 812 q 220 768 220 791 l 220 661 l 612 661 l 612 768 q 624 802 612 791 q 663 812 635 812 l 664 812 q 703 802 692 812 q 714 768 714 791 l 714 661 l 770 661 m 612 563 l 220 563 l 220 464 l 612 464 l 612 563 z "},"Ĥ":{"ha":833,"x_min":119,"x_max":714,"o":"m 267 896 q 245 888 256 888 q 216 904 230 888 q 200 936 200 922 q 211 958 200 948 l 377 1116 q 416 1130 392 1130 q 456 1116 441 1130 l 622 958 q 633 936 633 948 q 617 904 633 922 q 587 888 603 888 q 566 896 576 888 l 416 1013 l 267 896 m 664 812 q 703 802 692 812 q 714 768 714 791 l 714 37 q 703 3 714 14 q 664 -7 692 -7 l 663 -7 q 624 3 635 -7 q 612 37 612 14 l 612 366 l 220 366 l 220 37 q 209 3 220 14 q 170 -7 198 -7 l 169 -7 q 130 3 141 -7 q 119 37 119 14 l 119 768 q 130 802 119 791 q 169 812 141 812 l 170 812 q 209 802 198 812 q 220 768 220 791 l 220 464 l 612 464 l 612 768 q 624 802 612 791 q 663 812 635 812 l 664 812 z "},"I":{"ha":833,"x_min":136,"x_max":697,"o":"m 654 98 q 687 86 677 98 q 697 49 697 75 q 687 11 697 22 q 654 0 677 0 l 178 0 q 145 11 155 0 q 136 49 136 22 q 145 86 136 75 q 178 98 155 98 l 366 98 l 366 707 l 192 707 q 159 719 169 707 q 149 756 149 730 q 159 794 149 783 q 192 805 169 805 l 641 805 q 674 794 664 805 q 684 756 684 783 q 674 719 684 730 q 641 707 664 707 l 467 707 l 467 98 l 654 98 z "},"Ĳ":{"ha":833,"x_min":121,"x_max":715,"o":"m 173 812 q 212 802 201 812 q 223 768 223 791 l 223 37 q 212 3 223 14 q 173 -7 201 -7 l 172 -7 q 133 3 144 -7 q 121 37 121 14 l 121 768 q 133 802 121 791 q 172 812 144 812 l 173 812 m 665 812 q 704 802 692 812 q 715 768 715 791 l 715 172 q 667 33 715 81 q 530 -15 619 -15 q 449 -6 492 -15 q 373 19 406 3 q 347 55 347 33 q 354 85 347 66 q 393 118 368 118 q 412 113 401 118 q 469 93 438 100 q 530 85 500 85 q 593 111 573 85 q 613 192 613 136 l 613 768 q 624 802 613 791 q 663 812 635 812 l 665 812 z "},"Í":{"ha":833,"x_min":136,"x_max":697,"o":"m 352 894 q 330 887 340 887 q 299 904 314 887 q 283 939 283 922 q 294 960 283 952 l 530 1134 q 555 1143 542 1143 q 600 1115 578 1143 q 621 1069 621 1088 q 606 1042 621 1051 l 352 894 m 654 98 q 687 86 677 98 q 697 49 697 75 q 687 11 697 22 q 654 0 677 0 l 178 0 q 145 11 155 0 q 136 49 136 22 q 145 86 136 75 q 178 98 155 98 l 366 98 l 366 707 l 192 707 q 159 719 169 707 q 149 756 149 730 q 159 794 149 783 q 192 805 169 805 l 641 805 q 674 794 664 805 q 684 756 684 783 q 674 719 684 730 q 641 707 664 707 l 467 707 l 467 98 l 654 98 z "},"Ĭ":{"ha":833,"x_min":136,"x_max":697,"o":"m 416 909 q 267 951 323 909 q 195 1070 210 994 q 194 1079 194 1074 q 203 1100 194 1092 q 231 1112 212 1107 q 250 1114 241 1114 q 279 1097 273 1114 q 328 1026 294 1049 q 416 1003 362 1003 q 505 1026 471 1003 q 554 1097 539 1049 q 583 1114 560 1114 q 602 1112 592 1114 q 630 1100 621 1107 q 639 1079 639 1092 q 638 1070 639 1074 q 566 951 623 994 q 416 909 509 909 m 654 98 q 687 86 677 98 q 697 49 697 75 q 687 11 697 22 q 654 0 677 0 l 178 0 q 145 11 155 0 q 136 49 136 22 q 145 86 136 75 q 178 98 155 98 l 366 98 l 366 707 l 192 707 q 159 719 169 707 q 149 756 149 730 q 159 794 149 783 q 192 805 169 805 l 641 805 q 674 794 664 805 q 684 756 684 783 q 674 719 684 730 q 641 707 664 707 l 467 707 l 467 98 l 654 98 z "},"Î":{"ha":833,"x_min":136,"x_max":697,"o":"m 267 896 q 245 888 256 888 q 216 904 230 888 q 200 936 200 922 q 211 958 200 948 l 377 1116 q 416 1130 392 1130 q 456 1116 441 1130 l 622 958 q 633 936 633 948 q 617 904 633 922 q 587 888 603 888 q 566 896 576 888 l 416 1013 l 267 896 m 654 98 q 687 86 677 98 q 697 49 697 75 q 687 11 697 22 q 654 0 677 0 l 178 0 q 145 11 155 0 q 136 49 136 22 q 145 86 136 75 q 178 98 155 98 l 366 98 l 366 707 l 192 707 q 159 719 169 707 q 149 756 149 730 q 159 794 149 783 q 192 805 169 805 l 641 805 q 674 794 664 805 q 684 756 684 783 q 674 719 684 730 q 641 707 664 707 l 467 707 l 467 98 l 654 98 z "},"Ï":{"ha":833,"x_min":136,"x_max":697,"o":"m 274 931 q 223 941 237 931 q 210 975 210 951 l 210 1063 q 223 1098 210 1088 q 274 1107 237 1107 q 325 1098 311 1107 q 338 1063 338 1088 l 338 975 q 325 941 338 951 q 274 931 311 931 m 559 931 q 508 941 522 931 q 494 975 494 951 l 494 1063 q 508 1098 494 1088 q 559 1107 522 1107 q 610 1098 596 1107 q 623 1063 623 1088 l 623 975 q 610 941 623 951 q 559 931 596 931 m 654 98 q 687 86 677 98 q 697 49 697 75 q 687 11 697 22 q 654 0 677 0 l 178 0 q 145 11 155 0 q 136 49 136 22 q 145 86 136 75 q 178 98 155 98 l 366 98 l 366 707 l 192 707 q 159 719 169 707 q 149 756 149 730 q 159 794 149 783 q 192 805 169 805 l 641 805 q 674 794 664 805 q 684 756 684 783 q 674 719 684 730 q 641 707 664 707 l 467 707 l 467 98 l 654 98 z "},"İ":{"ha":833,"x_min":136,"x_max":697,"o":"m 416 931 q 366 941 379 931 q 352 975 352 951 l 352 1063 q 366 1098 352 1088 q 416 1107 379 1107 q 467 1098 454 1107 q 481 1063 481 1088 l 481 975 q 467 941 481 951 q 416 931 454 931 m 654 98 q 687 86 677 98 q 697 49 697 75 q 687 11 697 22 q 654 0 677 0 l 178 0 q 145 11 155 0 q 136 49 136 22 q 145 86 136 75 q 178 98 155 98 l 366 98 l 366 707 l 192 707 q 159 719 169 707 q 149 756 149 730 q 159 794 149 783 q 192 805 169 805 l 641 805 q 674 794 664 805 q 684 756 684 783 q 674 719 684 730 q 641 707 664 707 l 467 707 l 467 98 l 654 98 z "},"Ì":{"ha":833,"x_min":136,"x_max":697,"o":"m 227 1042 q 212 1069 212 1051 q 233 1115 212 1088 q 278 1143 255 1143 q 303 1134 291 1143 l 539 960 q 550 939 550 952 q 534 904 550 922 q 503 887 519 887 q 481 894 493 887 l 227 1042 m 654 98 q 687 86 677 98 q 697 49 697 75 q 687 11 697 22 q 654 0 677 0 l 178 0 q 145 11 155 0 q 136 49 136 22 q 145 86 136 75 q 178 98 155 98 l 366 98 l 366 707 l 192 707 q 159 719 169 707 q 149 756 149 730 q 159 794 149 783 q 192 805 169 805 l 641 805 q 674 794 664 805 q 684 756 684 783 q 674 719 684 730 q 641 707 664 707 l 467 707 l 467 98 l 654 98 z "},"Ī":{"ha":833,"x_min":136,"x_max":697,"o":"m 239 933 q 207 944 216 933 q 197 982 197 956 q 207 1020 197 1008 q 239 1031 216 1031 l 593 1031 q 626 1020 616 1031 q 636 982 636 1008 q 626 944 636 956 q 593 933 616 933 l 239 933 m 654 98 q 687 86 677 98 q 697 49 697 75 q 687 11 697 22 q 654 0 677 0 l 178 0 q 145 11 155 0 q 136 49 136 22 q 145 86 136 75 q 178 98 155 98 l 366 98 l 366 707 l 192 707 q 159 719 169 707 q 149 756 149 730 q 159 794 149 783 q 192 805 169 805 l 641 805 q 674 794 664 805 q 684 756 684 783 q 674 719 684 730 q 641 707 664 707 l 467 707 l 467 98 l 654 98 z "},"Į":{"ha":833,"x_min":136,"x_max":697,"o":"m 654 98 q 687 86 677 98 q 697 49 697 75 q 687 11 697 22 q 654 0 677 0 l 470 0 q 384 -98 410 -56 q 357 -176 357 -139 q 372 -213 357 -200 q 410 -226 386 -226 q 486 -214 445 -226 q 494 -213 492 -213 q 520 -250 514 -213 q 522 -267 522 -262 q 516 -290 522 -281 q 498 -302 510 -298 q 387 -320 448 -320 q 288 -285 324 -320 q 252 -191 252 -250 q 279 -94 252 -141 q 357 0 306 -47 l 178 0 q 145 11 155 0 q 136 49 136 22 q 145 86 136 75 q 178 98 155 98 l 366 98 l 366 707 l 192 707 q 159 719 169 707 q 149 756 149 730 q 159 794 149 783 q 192 805 169 805 l 641 805 q 674 794 664 805 q 684 756 684 783 q 674 719 684 730 q 641 707 664 707 l 467 707 l 467 98 l 654 98 z "},"Ĩ":{"ha":833,"x_min":136,"x_max":697,"o":"m 249 928 q 229 920 241 920 q 197 937 212 920 q 183 967 183 951 q 193 991 183 980 q 262 1054 225 1034 q 335 1075 299 1075 q 378 1068 359 1075 q 425 1050 397 1062 q 465 1033 448 1038 q 498 1027 481 1027 q 541 1039 520 1027 q 584 1074 562 1050 q 604 1082 592 1082 q 635 1065 621 1082 q 650 1034 650 1050 q 640 1010 650 1021 q 571 947 608 968 q 498 926 534 926 q 455 933 474 926 q 408 951 435 939 q 368 968 385 963 q 334 974 352 974 q 292 962 313 974 q 249 928 271 951 m 654 98 q 687 86 677 98 q 697 49 697 75 q 687 11 697 22 q 654 0 677 0 l 178 0 q 145 11 155 0 q 136 49 136 22 q 145 86 136 75 q 178 98 155 98 l 366 98 l 366 707 l 192 707 q 159 719 169 707 q 149 756 149 730 q 159 794 149 783 q 192 805 169 805 l 641 805 q 674 794 664 805 q 684 756 684 783 q 674 719 684 730 q 641 707 664 707 l 467 707 l 467 98 l 654 98 z "},"J":{"ha":833,"x_min":125,"x_max":647,"o":"m 604 805 q 636 794 626 805 q 647 759 647 784 l 647 226 q 581 47 647 110 q 394 -15 515 -15 q 261 5 326 -15 q 145 62 196 25 q 125 98 125 78 q 137 134 125 113 q 175 160 155 160 q 199 151 186 160 q 292 102 241 119 q 395 85 342 85 q 545 246 545 85 l 545 707 l 300 707 q 268 719 277 707 q 258 756 258 730 q 268 794 258 783 q 300 805 277 805 l 604 805 z "},"Ĵ":{"ha":833,"x_min":125,"x_max":741,"o":"m 730 958 q 741 936 741 948 q 726 904 741 922 q 696 888 711 888 q 675 896 685 888 l 525 1013 l 375 896 q 354 888 365 888 q 324 904 338 888 q 309 936 309 922 q 319 958 309 948 l 486 1116 q 525 1130 500 1130 q 564 1116 549 1130 l 730 958 m 604 805 q 636 794 626 805 q 647 759 647 784 l 647 226 q 581 47 647 110 q 394 -15 515 -15 q 261 5 326 -15 q 145 62 196 25 q 125 98 125 78 q 137 134 125 113 q 175 160 155 160 q 199 151 186 160 q 292 102 241 119 q 395 85 342 85 q 545 246 545 85 l 545 707 l 300 707 q 268 719 277 707 q 258 756 258 730 q 268 794 258 783 q 300 805 277 805 l 604 805 z "},"K":{"ha":833,"x_min":146,"x_max":743,"o":"m 731 62 q 743 35 743 47 q 713 0 743 16 q 676 -13 691 -13 q 646 4 659 -13 l 366 373 l 248 248 l 248 37 q 236 3 248 14 q 197 -7 225 -7 l 196 -7 q 157 3 168 -7 q 146 37 146 14 l 146 768 q 157 802 146 791 q 196 812 168 812 l 197 812 q 236 802 225 812 q 248 768 248 791 l 248 396 l 635 808 q 662 819 646 819 q 703 805 681 819 q 729 770 729 788 q 714 742 729 757 l 437 448 l 731 62 z "},"Ķ":{"ha":833,"x_min":146,"x_max":743,"o":"m 731 62 q 743 35 743 47 q 713 0 743 16 q 676 -13 691 -13 q 646 4 659 -13 l 366 373 l 248 248 l 248 37 q 236 3 248 14 q 197 -7 225 -7 l 196 -7 q 157 3 168 -7 q 146 37 146 14 l 146 768 q 157 802 146 791 q 196 812 168 812 l 197 812 q 236 802 225 812 q 248 768 248 791 l 248 396 l 635 808 q 662 819 646 819 q 703 805 681 819 q 729 770 729 788 q 714 742 729 757 l 437 448 l 731 62 m 467 -99 q 486 -117 486 -99 q 481 -134 486 -125 l 402 -331 q 362 -357 392 -357 q 351 -356 355 -357 q 315 -326 315 -351 q 317 -315 315 -323 l 359 -121 q 388 -99 365 -99 l 467 -99 z "},"L":{"ha":833,"x_min":166,"x_max":705,"o":"m 663 98 q 695 86 686 98 q 705 49 705 75 q 695 11 705 22 q 663 0 686 0 l 209 0 q 176 11 185 0 q 166 46 166 21 l 166 768 q 177 802 166 791 q 216 812 189 812 l 218 812 q 257 802 245 812 q 268 768 268 791 l 268 98 l 663 98 z "},"Ĺ":{"ha":833,"x_min":153,"x_max":705,"o":"m 222 894 q 200 887 210 887 q 169 904 184 887 q 153 939 153 922 q 163 960 153 952 l 399 1134 q 425 1143 412 1143 q 470 1115 448 1143 q 490 1069 490 1088 q 475 1042 490 1051 l 222 894 m 663 98 q 695 86 686 98 q 705 49 705 75 q 695 11 705 22 q 663 0 686 0 l 209 0 q 176 11 185 0 q 166 46 166 21 l 166 768 q 177 802 166 791 q 216 812 189 812 l 218 812 q 257 802 245 812 q 268 768 268 791 l 268 98 l 663 98 z "},"Ľ":{"ha":833,"x_min":166,"x_max":705,"o":"m 663 98 q 695 86 686 98 q 705 49 705 75 q 695 11 705 22 q 663 0 686 0 l 209 0 q 176 11 185 0 q 166 46 166 21 l 166 768 q 177 802 166 791 q 216 812 189 812 l 218 812 q 257 802 245 812 q 268 768 268 791 l 268 98 l 663 98 m 521 500 q 492 507 502 500 q 481 528 481 515 q 483 538 481 531 l 538 783 q 567 805 544 805 l 647 805 q 661 800 656 805 q 665 787 665 795 q 662 770 665 781 l 571 524 q 521 500 562 500 z "},"Ļ":{"ha":833,"x_min":166,"x_max":705,"o":"m 663 98 q 695 86 686 98 q 705 49 705 75 q 695 11 705 22 q 663 0 686 0 l 209 0 q 176 11 185 0 q 166 46 166 21 l 166 768 q 177 802 166 791 q 216 812 189 812 l 218 812 q 257 802 245 812 q 268 768 268 791 l 268 98 l 663 98 m 467 -99 q 486 -117 486 -99 q 481 -134 486 -125 l 402 -331 q 362 -357 392 -357 q 351 -356 355 -357 q 315 -326 315 -351 q 317 -315 315 -323 l 359 -121 q 388 -99 365 -99 l 467 -99 z "},"Ŀ":{"ha":833,"x_min":166,"x_max":705,"o":"m 663 98 q 695 86 686 98 q 705 49 705 75 q 695 11 705 22 q 663 0 686 0 l 209 0 q 176 11 185 0 q 166 46 166 21 l 166 768 q 177 802 166 791 q 216 812 189 812 l 218 812 q 257 802 245 812 q 268 768 268 791 l 268 98 l 663 98 m 505 402 q 454 412 467 402 q 440 446 440 422 l 440 534 q 454 569 440 559 q 505 578 467 578 q 555 569 542 578 q 569 534 569 559 l 569 446 q 555 412 569 422 q 505 402 542 402 z "},"Ł":{"ha":833,"x_min":41,"x_max":705,"o":"m 663 98 q 695 86 686 98 q 705 49 705 75 q 695 11 705 22 q 663 0 686 0 l 250 0 q 216 11 226 0 q 207 46 207 21 l 207 304 l 115 241 q 87 231 98 231 q 53 256 70 231 q 41 286 41 274 q 62 317 41 303 l 207 416 l 207 768 q 218 802 207 791 q 257 812 229 812 l 258 812 q 297 802 286 812 q 309 768 309 791 l 309 485 l 448 580 q 475 591 465 591 q 510 566 493 591 q 522 535 522 547 q 500 504 522 518 l 309 374 l 309 98 l 663 98 z "},"M":{"ha":833,"x_min":98,"x_max":735,"o":"m 663 812 q 701 802 688 812 q 714 768 713 792 l 734 37 q 724 3 735 14 q 685 -7 713 -7 l 684 -7 q 645 3 656 -7 q 633 37 634 14 l 619 589 l 479 286 q 454 253 468 262 q 416 243 439 243 q 379 253 393 243 q 354 286 365 262 l 214 589 l 199 37 q 188 3 199 14 q 149 -7 177 -7 l 148 -7 q 109 3 120 -7 q 98 37 98 14 l 119 768 q 132 802 119 792 q 170 812 145 812 l 172 812 q 211 801 195 812 q 237 768 226 791 l 416 381 l 596 768 q 623 801 607 791 q 662 812 638 812 l 663 812 z "},"N":{"ha":833,"x_min":119,"x_max":714,"o":"m 665 812 q 703 802 692 812 q 714 768 714 791 l 714 25 q 702 -4 714 7 q 663 -15 689 -15 q 632 -5 645 -15 q 606 22 618 4 l 220 625 l 218 625 l 218 37 q 207 3 218 14 q 169 -7 196 -7 l 168 -7 q 130 3 140 -7 q 119 37 119 14 l 119 768 q 130 802 119 791 q 170 812 142 812 l 188 812 q 230 793 217 812 l 612 195 l 615 195 l 615 768 q 626 802 615 791 q 664 812 637 812 l 665 812 z "},"Ń":{"ha":833,"x_min":119,"x_max":714,"o":"m 528 1134 q 553 1143 541 1143 q 599 1115 576 1143 q 619 1069 619 1088 q 604 1042 619 1051 l 351 894 q 329 887 338 887 q 298 904 313 887 q 281 939 281 922 q 292 960 281 952 l 528 1134 m 665 812 q 703 802 692 812 q 714 768 714 791 l 714 25 q 702 -4 714 7 q 663 -15 689 -15 q 632 -5 645 -15 q 606 22 618 4 l 220 625 l 218 625 l 218 37 q 207 3 218 14 q 169 -7 196 -7 l 168 -7 q 130 3 140 -7 q 119 37 119 14 l 119 768 q 130 802 119 791 q 170 812 142 812 l 188 812 q 230 793 217 812 l 612 195 l 615 195 l 615 768 q 626 802 615 791 q 664 812 637 812 l 665 812 z "},"Ň":{"ha":833,"x_min":119,"x_max":714,"o":"m 423 889 q 384 903 399 889 l 218 1061 q 207 1083 207 1071 q 222 1115 207 1097 q 252 1131 237 1131 q 273 1123 263 1131 l 423 1006 l 573 1123 q 594 1131 583 1131 q 624 1115 610 1131 q 640 1083 640 1097 q 629 1061 640 1071 l 463 903 q 423 889 448 889 m 665 812 q 703 802 692 812 q 714 768 714 791 l 714 25 q 702 -4 714 7 q 663 -15 689 -15 q 632 -5 645 -15 q 606 22 618 4 l 220 625 l 218 625 l 218 37 q 207 3 218 14 q 169 -7 196 -7 l 168 -7 q 130 3 140 -7 q 119 37 119 14 l 119 768 q 130 802 119 791 q 170 812 142 812 l 188 812 q 230 793 217 812 l 612 195 l 615 195 l 615 768 q 626 802 615 791 q 664 812 637 812 l 665 812 z "},"Ņ":{"ha":833,"x_min":119,"x_max":714,"o":"m 665 812 q 703 802 692 812 q 714 768 714 791 l 714 25 q 702 -4 714 7 q 663 -15 689 -15 q 632 -5 645 -15 q 606 22 618 4 l 220 625 l 218 625 l 218 37 q 207 3 218 14 q 169 -7 196 -7 l 168 -7 q 130 3 140 -7 q 119 37 119 14 l 119 768 q 130 802 119 791 q 170 812 142 812 l 188 812 q 230 793 217 812 l 612 195 l 615 195 l 615 768 q 626 802 615 791 q 664 812 637 812 l 665 812 m 473 -99 q 492 -117 492 -99 q 488 -134 492 -125 l 409 -331 q 369 -357 399 -357 q 357 -356 361 -357 q 322 -326 322 -351 q 323 -315 322 -323 l 366 -121 q 395 -99 372 -99 l 473 -99 z "},"Ŋ":{"ha":833,"x_min":119,"x_max":714,"o":"m 665 812 q 703 802 692 812 q 714 768 714 791 l 714 -92 q 666 -230 714 -182 q 529 -278 618 -278 q 449 -269 490 -278 q 372 -244 408 -260 q 346 -209 346 -233 q 353 -180 346 -198 q 391 -148 368 -148 q 410 -152 401 -148 q 530 -179 475 -179 q 592 -154 572 -179 q 612 -73 612 -129 l 612 13 l 220 625 l 218 625 l 218 37 q 207 3 218 14 q 169 -7 196 -7 l 168 -7 q 130 3 140 -7 q 119 37 119 14 l 119 768 q 130 802 119 791 q 170 812 142 812 l 188 812 q 230 793 217 812 l 612 195 l 615 195 l 615 768 q 626 802 615 791 q 664 812 637 812 l 665 812 z "},"Ñ":{"ha":833,"x_min":119,"x_max":714,"o":"m 335 1075 q 378 1068 359 1075 q 425 1050 397 1062 q 465 1033 448 1038 q 498 1027 481 1027 q 541 1039 520 1027 q 584 1074 562 1050 q 604 1082 592 1082 q 635 1065 621 1082 q 650 1034 650 1050 q 640 1010 650 1021 q 571 947 608 968 q 498 926 534 926 q 455 933 474 926 q 408 951 435 939 q 368 968 385 963 q 334 974 352 974 q 292 962 313 974 q 249 928 271 951 q 229 920 241 920 q 197 937 212 920 q 183 967 183 951 q 193 991 183 980 q 262 1054 225 1034 q 335 1075 299 1075 m 665 812 q 703 802 692 812 q 714 768 714 791 l 714 25 q 702 -4 714 7 q 663 -15 689 -15 q 632 -5 645 -15 q 606 22 618 4 l 220 625 l 218 625 l 218 37 q 207 3 218 14 q 169 -7 196 -7 l 168 -7 q 130 3 140 -7 q 119 37 119 14 l 119 768 q 130 802 119 791 q 170 812 142 812 l 188 812 q 230 793 217 812 l 612 195 l 615 195 l 615 768 q 626 802 615 791 q 664 812 637 812 l 665 812 z "},"O":{"ha":833,"x_min":61,"x_max":772,"o":"m 416 820 q 603 768 522 820 q 728 621 684 716 q 772 402 772 526 q 728 183 772 278 q 603 37 684 89 q 416 -15 522 -15 q 230 37 311 -15 q 105 183 149 89 q 61 402 61 278 q 105 621 61 526 q 230 768 149 716 q 416 820 311 820 m 416 720 q 284 681 341 720 q 196 571 227 643 q 165 402 165 499 q 196 234 165 305 q 284 124 227 162 q 416 85 340 85 q 549 124 492 85 q 636 234 606 162 q 667 402 667 305 q 636 571 667 499 q 549 681 606 643 q 416 720 492 720 z "},"Ó":{"ha":833,"x_min":61,"x_max":772,"o":"m 515 1134 q 540 1143 527 1143 q 585 1115 563 1143 q 606 1069 606 1088 q 591 1042 606 1051 l 337 894 q 315 887 325 887 q 284 904 299 887 q 268 939 268 922 q 279 960 268 952 l 515 1134 m 416 820 q 603 768 522 820 q 728 621 684 716 q 772 402 772 526 q 728 183 772 278 q 603 37 684 89 q 416 -15 522 -15 q 230 37 311 -15 q 105 183 149 89 q 61 402 61 278 q 105 621 61 526 q 230 768 149 716 q 416 820 311 820 m 416 720 q 284 681 341 720 q 196 571 227 643 q 165 402 165 499 q 196 234 165 305 q 284 124 227 162 q 416 85 340 85 q 549 124 492 85 q 636 234 606 162 q 667 402 667 305 q 636 571 667 499 q 549 681 606 643 q 416 720 492 720 z "},"Ŏ":{"ha":833,"x_min":61,"x_max":772,"o":"m 602 1112 q 630 1100 621 1107 q 639 1079 639 1092 q 638 1070 639 1074 q 566 951 623 994 q 416 909 509 909 q 267 951 323 909 q 195 1070 210 994 q 194 1079 194 1074 q 203 1100 194 1092 q 231 1112 212 1107 q 250 1114 241 1114 q 279 1097 273 1114 q 328 1026 294 1049 q 416 1003 362 1003 q 505 1026 471 1003 q 554 1097 539 1049 q 583 1114 560 1114 q 602 1112 592 1114 m 416 820 q 603 768 522 820 q 728 621 684 716 q 772 402 772 526 q 728 183 772 278 q 603 37 684 89 q 416 -15 522 -15 q 230 37 311 -15 q 105 183 149 89 q 61 402 61 278 q 105 621 61 526 q 230 768 149 716 q 416 820 311 820 m 416 720 q 284 681 341 720 q 196 571 227 643 q 165 402 165 499 q 196 234 165 305 q 284 124 227 162 q 416 85 340 85 q 549 124 492 85 q 636 234 606 162 q 667 402 667 305 q 636 571 667 499 q 549 681 606 643 q 416 720 492 720 z "},"Ô":{"ha":833,"x_min":61,"x_max":772,"o":"m 416 1130 q 456 1116 441 1130 l 622 958 q 633 936 633 948 q 617 904 633 922 q 587 888 603 888 q 566 896 576 888 l 416 1013 l 267 896 q 245 888 256 888 q 216 904 230 888 q 200 936 200 922 q 211 958 200 948 l 377 1116 q 416 1130 392 1130 m 416 820 q 603 768 522 820 q 728 621 684 716 q 772 402 772 526 q 728 183 772 278 q 603 37 684 89 q 416 -15 522 -15 q 230 37 311 -15 q 105 183 149 89 q 61 402 61 278 q 105 621 61 526 q 230 768 149 716 q 416 820 311 820 m 416 720 q 284 681 341 720 q 196 571 227 643 q 165 402 165 499 q 196 234 165 305 q 284 124 227 162 q 416 85 340 85 q 549 124 492 85 q 636 234 606 162 q 667 402 667 305 q 636 571 667 499 q 549 681 606 643 q 416 720 492 720 z "},"Ö":{"ha":833,"x_min":61,"x_max":772,"o":"m 274 1107 q 325 1098 311 1107 q 338 1063 338 1088 l 338 975 q 325 941 338 951 q 274 931 311 931 q 223 941 237 931 q 210 975 210 951 l 210 1063 q 223 1098 210 1088 q 274 1107 237 1107 m 559 1107 q 610 1098 596 1107 q 623 1063 623 1088 l 623 975 q 610 941 623 951 q 559 931 596 931 q 508 941 522 931 q 494 975 494 951 l 494 1063 q 508 1098 494 1088 q 559 1107 522 1107 m 416 820 q 603 768 522 820 q 728 621 684 716 q 772 402 772 526 q 728 183 772 278 q 603 37 684 89 q 416 -15 522 -15 q 230 37 311 -15 q 105 183 149 89 q 61 402 61 278 q 105 621 61 526 q 230 768 149 716 q 416 820 311 820 m 416 720 q 284 681 341 720 q 196 571 227 643 q 165 402 165 499 q 196 234 165 305 q 284 124 227 162 q 416 85 340 85 q 549 124 492 85 q 636 234 606 162 q 667 402 667 305 q 636 571 667 499 q 549 681 606 643 q 416 720 492 720 z "},"Ò":{"ha":833,"x_min":61,"x_max":772,"o":"m 554 960 q 565 939 565 952 q 549 904 565 922 q 517 887 534 887 q 496 894 508 887 l 242 1042 q 227 1069 227 1051 q 248 1115 227 1088 q 293 1143 270 1143 q 318 1134 306 1143 l 554 960 m 416 820 q 603 768 522 820 q 728 621 684 716 q 772 402 772 526 q 728 183 772 278 q 603 37 684 89 q 416 -15 522 -15 q 230 37 311 -15 q 105 183 149 89 q 61 402 61 278 q 105 621 61 526 q 230 768 149 716 q 416 820 311 820 m 416 720 q 284 681 341 720 q 196 571 227 643 q 165 402 165 499 q 196 234 165 305 q 284 124 227 162 q 416 85 340 85 q 549 124 492 85 q 636 234 606 162 q 667 402 667 305 q 636 571 667 499 q 549 681 606 643 q 416 720 492 720 z "},"Ő":{"ha":833,"x_min":61,"x_max":772,"o":"m 460 1118 q 490 1080 490 1099 q 477 1055 490 1067 l 294 897 q 269 888 283 888 q 235 899 254 888 q 215 927 215 912 q 222 943 215 936 l 382 1114 q 420 1131 398 1131 q 460 1118 439 1131 m 718 1118 q 748 1080 748 1099 q 735 1055 748 1067 l 552 897 q 527 888 541 888 q 493 899 512 888 q 473 927 473 912 q 479 943 473 936 l 640 1114 q 677 1131 656 1131 q 718 1118 696 1131 m 416 820 q 603 768 522 820 q 728 621 684 716 q 772 402 772 526 q 728 183 772 278 q 603 37 684 89 q 416 -15 522 -15 q 230 37 311 -15 q 105 183 149 89 q 61 402 61 278 q 105 621 61 526 q 230 768 149 716 q 416 820 311 820 m 416 720 q 284 681 341 720 q 196 571 227 643 q 165 402 165 499 q 196 234 165 305 q 284 124 227 162 q 416 85 340 85 q 549 124 492 85 q 636 234 606 162 q 667 402 667 305 q 636 571 667 499 q 549 681 606 643 q 416 720 492 720 z "},"Ō":{"ha":833,"x_min":61,"x_max":772,"o":"m 593 1031 q 626 1020 616 1031 q 636 982 636 1008 q 626 944 636 956 q 593 933 616 933 l 239 933 q 207 944 216 933 q 197 982 197 956 q 207 1020 197 1008 q 239 1031 216 1031 l 593 1031 m 416 820 q 603 768 522 820 q 728 621 684 716 q 772 402 772 526 q 728 183 772 278 q 603 37 684 89 q 416 -15 522 -15 q 230 37 311 -15 q 105 183 149 89 q 61 402 61 278 q 105 621 61 526 q 230 768 149 716 q 416 820 311 820 m 416 720 q 284 681 341 720 q 196 571 227 643 q 165 402 165 499 q 196 234 165 305 q 284 124 227 162 q 416 85 340 85 q 549 124 492 85 q 636 234 606 162 q 667 402 667 305 q 636 571 667 499 q 549 681 606 643 q 416 720 492 720 z "},"Ø":{"ha":833,"x_min":61,"x_max":772,"o":"m 680 699 q 748 568 724 644 q 772 402 772 493 q 728 183 772 278 q 603 37 684 89 q 416 -15 522 -15 q 223 41 307 -15 l 171 -34 q 139 -56 155 -56 q 107 -43 127 -56 q 82 -7 82 -26 q 93 20 82 4 l 153 106 q 85 237 109 161 q 61 402 61 312 q 105 621 61 526 q 230 768 149 716 q 416 820 311 820 q 609 764 527 820 l 662 840 q 694 862 677 862 q 726 849 707 862 q 750 814 750 832 q 740 786 750 802 l 680 699 m 165 402 q 215 197 165 279 l 551 680 q 416 720 494 720 q 284 681 341 720 q 196 571 227 643 q 165 402 165 499 m 416 85 q 549 124 492 85 q 636 234 606 162 q 667 402 667 305 q 617 609 667 526 l 281 125 q 416 85 340 85 z "},"Õ":{"ha":833,"x_min":61,"x_max":772,"o":"m 335 1075 q 378 1068 359 1075 q 425 1050 397 1062 q 465 1033 448 1038 q 498 1027 481 1027 q 541 1039 520 1027 q 584 1074 562 1050 q 604 1082 592 1082 q 635 1065 621 1082 q 650 1034 650 1050 q 640 1010 650 1021 q 571 947 608 968 q 498 926 534 926 q 455 933 474 926 q 408 951 435 939 q 368 968 385 963 q 334 974 352 974 q 292 962 313 974 q 249 928 271 951 q 229 920 241 920 q 197 937 212 920 q 183 967 183 951 q 193 991 183 980 q 262 1054 225 1034 q 335 1075 299 1075 m 416 820 q 603 768 522 820 q 728 621 684 716 q 772 402 772 526 q 728 183 772 278 q 603 37 684 89 q 416 -15 522 -15 q 230 37 311 -15 q 105 183 149 89 q 61 402 61 278 q 105 621 61 526 q 230 768 149 716 q 416 820 311 820 m 416 720 q 284 681 341 720 q 196 571 227 643 q 165 402 165 499 q 196 234 165 305 q 284 124 227 162 q 416 85 340 85 q 549 124 492 85 q 636 234 606 162 q 667 402 667 305 q 636 571 667 499 q 549 681 606 643 q 416 720 492 720 z "},"Œ":{"ha":833,"x_min":57,"x_max":774,"o":"m 731 98 q 764 86 754 98 q 774 49 774 75 q 764 11 774 22 q 731 0 754 0 l 414 0 q 226 45 307 -3 q 101 184 145 92 q 57 402 57 276 q 101 620 57 528 q 226 760 145 712 q 414 805 307 808 l 718 805 q 750 794 741 805 q 760 756 760 783 q 750 719 760 730 q 718 707 741 707 l 499 707 l 499 464 l 667 464 q 700 453 690 464 q 709 415 709 441 q 700 377 709 389 q 667 366 690 366 l 499 366 l 499 98 l 731 98 m 161 402 q 191 237 161 305 q 273 132 220 168 q 397 92 326 95 l 397 712 q 273 673 326 709 q 191 568 220 637 q 161 402 161 499 z "},"P":{"ha":833,"x_min":159,"x_max":727,"o":"m 434 805 q 593 771 527 805 q 693 676 659 737 q 727 534 727 615 q 693 394 727 454 q 593 300 659 333 q 434 267 527 267 l 261 267 l 261 37 q 250 3 261 14 q 211 -7 239 -7 l 210 -7 q 171 3 182 -7 q 159 37 159 14 l 159 759 q 169 794 159 784 q 202 805 179 805 l 434 805 m 420 364 q 571 409 519 364 q 623 534 623 453 q 571 662 623 617 q 420 707 519 707 l 261 707 l 261 364 l 420 364 z "},"Þ":{"ha":833,"x_min":159,"x_max":720,"o":"m 461 642 q 602 611 543 642 q 690 527 661 580 q 720 406 720 473 q 690 286 720 338 q 602 202 661 233 q 461 172 544 172 l 261 172 l 261 37 q 250 3 261 14 q 211 -7 239 -7 l 210 -7 q 171 3 182 -7 q 159 37 159 14 l 159 768 q 171 802 159 791 q 210 812 182 812 l 211 812 q 250 802 239 812 q 261 768 261 791 l 261 642 l 461 642 m 447 270 q 570 305 527 270 q 613 406 613 340 q 571 507 613 469 q 447 544 529 544 l 261 544 l 261 270 l 447 270 z "},"Q":{"ha":833,"x_min":61,"x_max":772,"o":"m 680 -37 q 690 -64 690 -52 q 661 -101 690 -83 q 627 -114 641 -114 q 594 -92 608 -114 l 533 3 q 416 -15 479 -15 q 230 37 311 -15 q 105 183 149 89 q 61 402 61 278 q 105 621 61 526 q 230 768 149 716 q 416 820 311 820 q 603 768 522 820 q 728 621 684 716 q 772 402 772 526 q 733 195 772 286 q 623 52 694 105 l 680 -37 m 165 402 q 196 234 165 305 q 284 124 227 162 q 416 85 340 85 q 476 92 449 85 l 405 203 q 395 231 395 220 q 424 269 395 250 q 458 281 444 281 q 490 258 475 281 l 568 138 q 642 246 616 178 q 667 402 667 313 q 636 571 667 499 q 549 681 606 643 q 416 720 492 720 q 284 681 341 720 q 196 571 227 643 q 165 402 165 499 z "},"R":{"ha":833,"x_min":159,"x_max":711,"o":"m 702 60 q 711 34 711 45 q 704 16 711 24 q 680 0 696 7 q 644 -10 656 -10 q 614 9 626 -10 l 412 321 l 261 321 l 261 37 q 250 3 261 14 q 211 -7 239 -7 l 210 -7 q 171 3 182 -7 q 159 37 159 14 l 159 759 q 169 794 159 784 q 202 805 179 805 l 420 805 q 573 775 511 805 q 668 690 636 745 q 700 562 700 635 q 655 414 700 473 q 523 332 610 355 l 702 60 m 261 418 l 406 418 q 595 562 595 418 q 548 670 595 633 q 406 707 501 707 l 261 707 l 261 418 z "},"Ŕ":{"ha":833,"x_min":159,"x_max":711,"o":"m 345 894 q 323 887 333 887 q 292 904 307 887 q 276 939 276 922 q 287 960 276 952 l 523 1134 q 548 1143 535 1143 q 593 1115 571 1143 q 614 1069 614 1088 q 599 1042 614 1051 l 345 894 m 702 60 q 711 34 711 45 q 704 16 711 24 q 680 0 696 7 q 644 -10 656 -10 q 614 9 626 -10 l 412 321 l 261 321 l 261 37 q 250 3 261 14 q 211 -7 239 -7 l 210 -7 q 171 3 182 -7 q 159 37 159 14 l 159 759 q 169 794 159 784 q 202 805 179 805 l 420 805 q 573 775 511 805 q 668 690 636 745 q 700 562 700 635 q 655 414 700 473 q 523 332 610 355 l 702 60 m 261 418 l 406 418 q 595 562 595 418 q 548 670 595 633 q 406 707 501 707 l 261 707 l 261 418 z "},"Ř":{"ha":833,"x_min":159,"x_max":711,"o":"m 204 1061 q 193 1083 193 1071 q 209 1115 193 1097 q 239 1131 223 1131 q 260 1123 250 1131 l 410 1006 l 559 1123 q 581 1131 570 1131 q 610 1115 596 1131 q 626 1083 626 1097 q 615 1061 626 1071 l 449 903 q 410 889 434 889 q 370 903 385 889 l 204 1061 m 702 60 q 711 34 711 45 q 704 16 711 24 q 680 0 696 7 q 644 -10 656 -10 q 614 9 626 -10 l 412 321 l 261 321 l 261 37 q 250 3 261 14 q 211 -7 239 -7 l 210 -7 q 171 3 182 -7 q 159 37 159 14 l 159 759 q 169 794 159 784 q 202 805 179 805 l 420 805 q 573 775 511 805 q 668 690 636 745 q 700 562 700 635 q 655 414 700 473 q 523 332 610 355 l 702 60 m 261 418 l 406 418 q 595 562 595 418 q 548 670 595 633 q 406 707 501 707 l 261 707 l 261 418 z "},"Ŗ":{"ha":833,"x_min":159,"x_max":711,"o":"m 702 60 q 711 34 711 45 q 704 16 711 24 q 680 0 696 7 q 644 -10 656 -10 q 614 9 626 -10 l 412 321 l 261 321 l 261 37 q 250 3 261 14 q 211 -7 239 -7 l 210 -7 q 171 3 182 -7 q 159 37 159 14 l 159 759 q 169 794 159 784 q 202 805 179 805 l 420 805 q 573 775 511 805 q 668 690 636 745 q 700 562 700 635 q 655 414 700 473 q 523 332 610 355 l 702 60 m 261 418 l 406 418 q 595 562 595 418 q 548 670 595 633 q 406 707 501 707 l 261 707 l 261 418 m 473 -99 q 492 -117 492 -99 q 488 -134 492 -125 l 409 -331 q 369 -357 399 -357 q 357 -356 361 -357 q 322 -326 322 -351 q 323 -315 322 -323 l 366 -121 q 395 -99 372 -99 l 473 -99 z "},"S":{"ha":833,"x_min":113,"x_max":720,"o":"m 392 820 q 670 752 551 820 q 694 714 694 738 q 686 681 694 699 q 648 650 672 650 q 626 657 638 650 q 392 720 522 720 q 266 684 311 720 q 221 585 221 648 q 234 539 221 558 q 273 507 248 520 q 328 488 297 495 q 416 470 359 480 q 509 452 472 460 q 581 430 547 444 q 683 355 646 404 q 720 222 720 306 q 687 97 720 151 q 586 15 653 44 q 422 -15 519 -15 q 271 6 345 -15 q 136 64 197 26 q 113 101 113 78 q 123 135 113 117 q 160 165 138 165 q 183 157 172 165 q 296 105 234 125 q 422 85 358 85 q 567 122 517 85 q 616 222 616 159 q 594 290 616 264 q 534 334 573 317 q 477 352 507 345 q 393 369 446 359 q 298 388 336 379 q 228 412 260 397 q 146 477 175 436 q 117 585 117 519 q 151 711 117 658 q 248 792 186 764 q 392 820 311 820 z "},"Ś":{"ha":833,"x_min":113,"x_max":720,"o":"m 515 1134 q 540 1143 527 1143 q 585 1115 563 1143 q 606 1069 606 1088 q 591 1042 606 1051 l 337 894 q 315 887 325 887 q 284 904 299 887 q 268 939 268 922 q 279 960 268 952 l 515 1134 m 392 820 q 670 752 551 820 q 694 714 694 738 q 686 681 694 699 q 648 650 672 650 q 626 657 638 650 q 392 720 522 720 q 266 684 311 720 q 221 585 221 648 q 234 539 221 558 q 273 507 248 520 q 328 488 297 495 q 416 470 359 480 q 509 452 472 460 q 581 430 547 444 q 683 355 646 404 q 720 222 720 306 q 687 97 720 151 q 586 15 653 44 q 422 -15 519 -15 q 271 6 345 -15 q 136 64 197 26 q 113 101 113 78 q 123 135 113 117 q 160 165 138 165 q 183 157 172 165 q 296 105 234 125 q 422 85 358 85 q 567 122 517 85 q 616 222 616 159 q 594 290 616 264 q 534 334 573 317 q 477 352 507 345 q 393 369 446 359 q 298 388 336 379 q 228 412 260 397 q 146 477 175 436 q 117 585 117 519 q 151 711 117 658 q 248 792 186 764 q 392 820 311 820 z "},"Š":{"ha":833,"x_min":113,"x_max":720,"o":"m 413 889 q 374 903 389 889 l 208 1061 q 197 1083 197 1071 q 212 1115 197 1097 q 242 1131 227 1131 q 263 1123 253 1131 l 413 1006 l 563 1123 q 584 1131 573 1131 q 614 1115 600 1131 q 629 1083 629 1097 q 618 1061 629 1071 l 452 903 q 413 889 437 889 m 392 820 q 670 752 551 820 q 694 714 694 738 q 686 681 694 699 q 648 650 672 650 q 626 657 638 650 q 392 720 522 720 q 266 684 311 720 q 221 585 221 648 q 234 539 221 558 q 273 507 248 520 q 328 488 297 495 q 416 470 359 480 q 509 452 472 460 q 581 430 547 444 q 683 355 646 404 q 720 222 720 306 q 687 97 720 151 q 586 15 653 44 q 422 -15 519 -15 q 271 6 345 -15 q 136 64 197 26 q 113 101 113 78 q 123 135 113 117 q 160 165 138 165 q 183 157 172 165 q 296 105 234 125 q 422 85 358 85 q 567 122 517 85 q 616 222 616 159 q 594 290 616 264 q 534 334 573 317 q 477 352 507 345 q 393 369 446 359 q 298 388 336 379 q 228 412 260 397 q 146 477 175 436 q 117 585 117 519 q 151 711 117 658 q 248 792 186 764 q 392 820 311 820 z "},"Ş":{"ha":833,"x_min":113,"x_max":720,"o":"m 720 222 q 691 104 720 155 q 602 22 661 53 q 456 -14 543 -9 l 456 -77 q 559 -108 525 -76 q 594 -191 594 -140 q 552 -285 594 -250 q 428 -320 510 -320 q 338 -312 382 -320 q 260 -288 295 -304 q 245 -264 245 -281 q 250 -240 245 -254 q 281 -210 262 -210 q 290 -211 287 -210 q 354 -229 319 -222 q 421 -237 389 -237 q 475 -225 456 -237 q 495 -193 495 -214 q 477 -160 495 -171 q 416 -149 458 -149 l 390 -150 q 373 -143 380 -150 q 367 -120 367 -136 l 367 -12 q 245 14 304 -6 q 136 64 186 33 q 113 101 113 78 q 123 135 113 117 q 160 165 138 165 q 183 157 172 165 q 296 105 234 125 q 422 85 358 85 q 567 122 517 85 q 616 222 616 159 q 594 290 616 264 q 534 334 573 317 q 477 352 507 345 q 393 369 446 359 q 298 388 336 379 q 228 412 260 397 q 146 477 175 436 q 117 585 117 519 q 151 711 117 658 q 248 792 186 764 q 392 820 311 820 q 670 752 551 820 q 694 714 694 738 q 686 681 694 699 q 648 650 672 650 q 626 657 638 650 q 392 720 522 720 q 266 684 311 720 q 221 585 221 648 q 234 539 221 558 q 273 507 248 520 q 328 488 297 495 q 416 470 359 480 q 509 452 472 460 q 581 430 547 444 q 683 355 646 404 q 720 222 720 306 z "},"Ŝ":{"ha":833,"x_min":113,"x_max":720,"o":"m 420 1130 q 460 1116 445 1130 l 626 958 q 637 936 637 948 q 621 904 637 922 q 591 888 607 888 q 570 896 581 888 l 420 1013 l 271 896 q 250 888 260 888 q 220 904 234 888 q 204 936 204 922 q 215 958 204 948 l 381 1116 q 420 1130 396 1130 m 392 820 q 670 752 551 820 q 694 714 694 738 q 686 681 694 699 q 648 650 672 650 q 626 657 638 650 q 392 720 522 720 q 266 684 311 720 q 221 585 221 648 q 234 539 221 558 q 273 507 248 520 q 328 488 297 495 q 416 470 359 480 q 509 452 472 460 q 581 430 547 444 q 683 355 646 404 q 720 222 720 306 q 687 97 720 151 q 586 15 653 44 q 422 -15 519 -15 q 271 6 345 -15 q 136 64 197 26 q 113 101 113 78 q 123 135 113 117 q 160 165 138 165 q 183 157 172 165 q 296 105 234 125 q 422 85 358 85 q 567 122 517 85 q 616 222 616 159 q 594 290 616 264 q 534 334 573 317 q 477 352 507 345 q 393 369 446 359 q 298 388 336 379 q 228 412 260 397 q 146 477 175 436 q 117 585 117 519 q 151 711 117 658 q 248 792 186 764 q 392 820 311 820 z "},"Ș":{"ha":833,"x_min":113,"x_max":720,"o":"m 392 820 q 670 752 551 820 q 694 714 694 738 q 686 681 694 699 q 648 650 672 650 q 626 657 638 650 q 392 720 522 720 q 266 684 311 720 q 221 585 221 648 q 234 539 221 558 q 273 507 248 520 q 328 488 297 495 q 416 470 359 480 q 509 452 472 460 q 581 430 547 444 q 683 355 646 404 q 720 222 720 306 q 687 97 720 151 q 586 15 653 44 q 422 -15 519 -15 q 271 6 345 -15 q 136 64 197 26 q 113 101 113 78 q 123 135 113 117 q 160 165 138 165 q 183 157 172 165 q 296 105 234 125 q 422 85 358 85 q 567 122 517 85 q 616 222 616 159 q 594 290 616 264 q 534 334 573 317 q 477 352 507 345 q 393 369 446 359 q 298 388 336 379 q 228 412 260 397 q 146 477 175 436 q 117 585 117 519 q 151 711 117 658 q 248 792 186 764 q 392 820 311 820 m 463 -99 q 481 -117 481 -99 q 477 -134 481 -125 l 398 -331 q 358 -357 388 -357 q 347 -356 351 -357 q 311 -326 311 -351 q 313 -315 311 -323 l 355 -121 q 384 -99 361 -99 l 463 -99 z "},"T":{"ha":833,"x_min":83,"x_max":750,"o":"m 707 805 q 740 794 730 805 q 750 756 750 783 q 740 719 750 730 q 707 707 730 707 l 467 707 l 467 37 q 456 3 467 14 q 417 -7 445 -7 l 416 -7 q 377 3 388 -7 q 366 37 366 14 l 366 707 l 125 707 q 93 719 102 707 q 83 756 83 730 q 93 794 83 783 q 125 805 102 805 l 707 805 z "},"Ŧ":{"ha":833,"x_min":83,"x_max":750,"o":"m 707 805 q 740 794 730 805 q 750 756 750 783 q 740 719 750 730 q 707 707 730 707 l 467 707 l 467 400 l 607 400 q 640 389 630 400 q 650 351 650 378 q 640 314 650 325 q 607 302 630 302 l 467 302 l 467 37 q 456 3 467 14 q 417 -7 445 -7 l 416 -7 q 377 3 388 -7 q 366 37 366 14 l 366 302 l 226 302 q 193 314 203 302 q 183 351 183 325 q 193 389 183 378 q 226 400 203 400 l 366 400 l 366 707 l 125 707 q 93 719 102 707 q 83 756 83 730 q 93 794 83 783 q 125 805 102 805 l 707 805 z "},"Ť":{"ha":833,"x_min":83,"x_max":750,"o":"m 211 1061 q 200 1083 200 1071 q 216 1115 200 1097 q 245 1131 230 1131 q 267 1123 256 1131 l 416 1006 l 566 1123 q 587 1131 576 1131 q 617 1115 603 1131 q 633 1083 633 1097 q 622 1061 633 1071 l 456 903 q 416 889 441 889 q 377 903 392 889 l 211 1061 m 707 805 q 740 794 730 805 q 750 756 750 783 q 740 719 750 730 q 707 707 730 707 l 467 707 l 467 37 q 456 3 467 14 q 417 -7 445 -7 l 416 -7 q 377 3 388 -7 q 366 37 366 14 l 366 707 l 125 707 q 93 719 102 707 q 83 756 83 730 q 93 794 83 783 q 125 805 102 805 l 707 805 z "},"Ţ":{"ha":833,"x_min":83,"x_max":750,"o":"m 707 805 q 740 794 730 805 q 750 756 750 783 q 740 719 750 730 q 707 707 730 707 l 467 707 l 467 37 q 461 9 467 20 l 461 -77 q 564 -108 530 -76 q 599 -191 599 -140 q 557 -285 599 -250 q 433 -320 515 -320 q 343 -312 387 -320 q 265 -288 300 -304 q 250 -264 250 -281 q 255 -240 250 -254 q 286 -210 267 -210 q 295 -211 292 -210 q 359 -229 324 -222 q 426 -237 394 -237 q 480 -225 460 -237 q 500 -193 500 -214 q 481 -160 500 -171 q 421 -149 463 -149 l 395 -150 q 378 -143 385 -150 q 372 -120 372 -136 l 372 9 q 366 37 366 20 l 366 707 l 125 707 q 93 719 102 707 q 83 756 83 730 q 93 794 83 783 q 125 805 102 805 l 707 805 z "},"Ț":{"ha":833,"x_min":83,"x_max":750,"o":"m 707 805 q 740 794 730 805 q 750 756 750 783 q 740 719 750 730 q 707 707 730 707 l 467 707 l 467 37 q 456 3 467 14 q 417 -7 445 -7 l 416 -7 q 377 3 388 -7 q 366 37 366 14 l 366 707 l 125 707 q 93 719 102 707 q 83 756 83 730 q 93 794 83 783 q 125 805 102 805 l 707 805 m 467 -99 q 486 -117 486 -99 q 481 -134 486 -125 l 402 -331 q 362 -357 392 -357 q 351 -356 355 -357 q 315 -326 315 -351 q 317 -315 315 -323 l 359 -121 q 388 -99 365 -99 l 467 -99 z "},"U":{"ha":833,"x_min":119,"x_max":714,"o":"m 664 812 q 703 802 692 812 q 714 768 714 791 l 714 280 q 677 119 714 185 q 572 19 640 53 q 416 -15 505 -15 q 260 19 328 -15 q 156 119 193 53 q 119 280 119 185 l 119 768 q 130 802 119 791 q 169 812 141 812 l 170 812 q 209 802 198 812 q 220 768 220 791 l 220 294 q 271 138 220 190 q 416 85 322 85 q 562 138 511 85 q 612 294 612 190 l 612 768 q 624 802 612 791 q 663 812 635 812 l 664 812 z "},"Ú":{"ha":833,"x_min":119,"x_max":714,"o":"m 549 1134 q 574 1143 561 1143 q 619 1115 597 1143 q 640 1069 640 1088 q 625 1042 640 1051 l 371 894 q 349 887 359 887 q 318 904 333 887 q 302 939 302 922 q 313 960 302 952 l 549 1134 m 664 812 q 703 802 692 812 q 714 768 714 791 l 714 280 q 677 119 714 185 q 572 19 640 53 q 416 -15 505 -15 q 260 19 328 -15 q 156 119 193 53 q 119 280 119 185 l 119 768 q 130 802 119 791 q 169 812 141 812 l 170 812 q 209 802 198 812 q 220 768 220 791 l 220 294 q 271 138 220 190 q 416 85 322 85 q 562 138 511 85 q 612 294 612 190 l 612 768 q 624 802 612 791 q 663 812 635 812 l 664 812 z "},"Ŭ":{"ha":833,"x_min":119,"x_max":714,"o":"m 602 1112 q 630 1100 621 1107 q 639 1079 639 1092 q 638 1070 639 1074 q 566 951 623 994 q 416 909 509 909 q 267 951 323 909 q 195 1070 210 994 q 194 1079 194 1074 q 203 1100 194 1092 q 231 1112 212 1107 q 250 1114 241 1114 q 279 1097 273 1114 q 328 1026 294 1049 q 416 1003 362 1003 q 505 1026 471 1003 q 554 1097 539 1049 q 583 1114 560 1114 q 602 1112 592 1114 m 664 812 q 703 802 692 812 q 714 768 714 791 l 714 280 q 677 119 714 185 q 572 19 640 53 q 416 -15 505 -15 q 260 19 328 -15 q 156 119 193 53 q 119 280 119 185 l 119 768 q 130 802 119 791 q 169 812 141 812 l 170 812 q 209 802 198 812 q 220 768 220 791 l 220 294 q 271 138 220 190 q 416 85 322 85 q 562 138 511 85 q 612 294 612 190 l 612 768 q 624 802 612 791 q 663 812 635 812 l 664 812 z "},"Û":{"ha":833,"x_min":119,"x_max":714,"o":"m 416 1130 q 456 1116 441 1130 l 622 958 q 633 936 633 948 q 617 904 633 922 q 587 888 603 888 q 566 896 576 888 l 416 1013 l 267 896 q 245 888 256 888 q 216 904 230 888 q 200 936 200 922 q 211 958 200 948 l 377 1116 q 416 1130 392 1130 m 664 812 q 703 802 692 812 q 714 768 714 791 l 714 280 q 677 119 714 185 q 572 19 640 53 q 416 -15 505 -15 q 260 19 328 -15 q 156 119 193 53 q 119 280 119 185 l 119 768 q 130 802 119 791 q 169 812 141 812 l 170 812 q 209 802 198 812 q 220 768 220 791 l 220 294 q 271 138 220 190 q 416 85 322 85 q 562 138 511 85 q 612 294 612 190 l 612 768 q 624 802 612 791 q 663 812 635 812 l 664 812 z "},"Ü":{"ha":833,"x_min":119,"x_max":714,"o":"m 274 1107 q 325 1098 311 1107 q 338 1063 338 1088 l 338 975 q 325 941 338 951 q 274 931 311 931 q 223 941 237 931 q 210 975 210 951 l 210 1063 q 223 1098 210 1088 q 274 1107 237 1107 m 559 1107 q 610 1098 596 1107 q 623 1063 623 1088 l 623 975 q 610 941 623 951 q 559 931 596 931 q 508 941 522 931 q 494 975 494 951 l 494 1063 q 508 1098 494 1088 q 559 1107 522 1107 m 664 812 q 703 802 692 812 q 714 768 714 791 l 714 280 q 677 119 714 185 q 572 19 640 53 q 416 -15 505 -15 q 260 19 328 -15 q 156 119 193 53 q 119 280 119 185 l 119 768 q 130 802 119 791 q 169 812 141 812 l 170 812 q 209 802 198 812 q 220 768 220 791 l 220 294 q 271 138 220 190 q 416 85 322 85 q 562 138 511 85 q 612 294 612 190 l 612 768 q 624 802 612 791 q 663 812 635 812 l 664 812 z "},"Ù":{"ha":833,"x_min":119,"x_max":714,"o":"m 520 960 q 531 939 531 952 q 515 904 531 922 q 484 887 500 887 q 462 894 474 887 l 208 1042 q 193 1069 193 1051 q 214 1115 193 1088 q 259 1143 236 1143 q 284 1134 272 1143 l 520 960 m 664 812 q 703 802 692 812 q 714 768 714 791 l 714 280 q 677 119 714 185 q 572 19 640 53 q 416 -15 505 -15 q 260 19 328 -15 q 156 119 193 53 q 119 280 119 185 l 119 768 q 130 802 119 791 q 169 812 141 812 l 170 812 q 209 802 198 812 q 220 768 220 791 l 220 294 q 271 138 220 190 q 416 85 322 85 q 562 138 511 85 q 612 294 612 190 l 612 768 q 624 802 612 791 q 663 812 635 812 l 664 812 z "},"Ű":{"ha":833,"x_min":119,"x_max":748,"o":"m 460 1118 q 490 1080 490 1099 q 477 1055 490 1067 l 294 897 q 269 888 283 888 q 235 899 254 888 q 215 927 215 912 q 222 943 215 936 l 382 1114 q 420 1131 398 1131 q 460 1118 439 1131 m 718 1118 q 748 1080 748 1099 q 735 1055 748 1067 l 552 897 q 527 888 541 888 q 493 899 512 888 q 473 927 473 912 q 479 943 473 936 l 640 1114 q 677 1131 656 1131 q 718 1118 696 1131 m 664 812 q 703 802 692 812 q 714 768 714 791 l 714 280 q 677 119 714 185 q 572 19 640 53 q 416 -15 505 -15 q 260 19 328 -15 q 156 119 193 53 q 119 280 119 185 l 119 768 q 130 802 119 791 q 169 812 141 812 l 170 812 q 209 802 198 812 q 220 768 220 791 l 220 294 q 271 138 220 190 q 416 85 322 85 q 562 138 511 85 q 612 294 612 190 l 612 768 q 624 802 612 791 q 663 812 635 812 l 664 812 z "},"Ū":{"ha":833,"x_min":119,"x_max":714,"o":"m 593 1031 q 626 1020 616 1031 q 636 982 636 1008 q 626 944 636 956 q 593 933 616 933 l 239 933 q 207 944 216 933 q 197 982 197 956 q 207 1020 197 1008 q 239 1031 216 1031 l 593 1031 m 664 812 q 703 802 692 812 q 714 768 714 791 l 714 280 q 677 119 714 185 q 572 19 640 53 q 416 -15 505 -15 q 260 19 328 -15 q 156 119 193 53 q 119 280 119 185 l 119 768 q 130 802 119 791 q 169 812 141 812 l 170 812 q 209 802 198 812 q 220 768 220 791 l 220 294 q 271 138 220 190 q 416 85 322 85 q 562 138 511 85 q 612 294 612 190 l 612 768 q 624 802 612 791 q 663 812 635 812 l 664 812 z "},"Ų":{"ha":833,"x_min":119,"x_max":714,"o":"m 664 812 q 703 802 692 812 q 714 768 714 791 l 714 280 q 677 119 714 186 q 572 18 640 53 q 470 -90 500 -45 q 439 -176 439 -136 q 453 -213 439 -200 q 491 -226 467 -226 q 568 -214 526 -226 q 575 -213 573 -213 q 602 -250 595 -213 q 603 -267 603 -262 q 597 -290 603 -281 q 580 -302 591 -298 q 469 -320 529 -320 q 369 -285 406 -320 q 333 -191 333 -250 q 356 -101 333 -144 q 423 -15 379 -58 l 416 -15 q 260 19 328 -15 q 156 119 193 53 q 119 280 119 185 l 119 768 q 130 802 119 791 q 169 812 141 812 l 170 812 q 209 802 198 812 q 220 768 220 791 l 220 294 q 271 138 220 190 q 416 85 322 85 q 562 138 511 85 q 612 294 612 190 l 612 768 q 624 802 612 791 q 663 812 635 812 l 664 812 z "},"Ů":{"ha":833,"x_min":119,"x_max":714,"o":"m 416 1219 q 502 1197 463 1219 q 562 1137 540 1175 q 583 1052 583 1099 q 562 967 583 1005 q 502 907 540 928 q 416 885 463 885 q 331 907 370 885 q 271 967 293 928 q 250 1052 250 1005 q 271 1137 250 1099 q 331 1197 293 1175 q 416 1219 370 1219 m 416 1129 q 360 1108 381 1129 q 339 1052 339 1087 q 360 996 339 1017 q 416 975 381 975 q 473 996 452 975 q 494 1052 494 1017 q 473 1108 494 1087 q 416 1129 452 1129 m 664 812 q 703 802 692 812 q 714 768 714 791 l 714 280 q 677 119 714 185 q 572 19 640 53 q 416 -15 505 -15 q 260 19 328 -15 q 156 119 193 53 q 119 280 119 185 l 119 768 q 130 802 119 791 q 169 812 141 812 l 170 812 q 209 802 198 812 q 220 768 220 791 l 220 294 q 271 138 220 190 q 416 85 322 85 q 562 138 511 85 q 612 294 612 190 l 612 768 q 624 802 612 791 q 663 812 635 812 l 664 812 z "},"Ũ":{"ha":833,"x_min":119,"x_max":714,"o":"m 335 1075 q 378 1068 359 1075 q 425 1050 397 1062 q 465 1033 448 1038 q 498 1027 481 1027 q 541 1039 520 1027 q 584 1074 562 1050 q 604 1082 592 1082 q 635 1065 621 1082 q 650 1034 650 1050 q 640 1010 650 1021 q 571 947 608 968 q 498 926 534 926 q 455 933 474 926 q 408 951 435 939 q 368 968 385 963 q 334 974 352 974 q 292 962 313 974 q 249 928 271 951 q 229 920 241 920 q 197 937 212 920 q 183 967 183 951 q 193 991 183 980 q 262 1054 225 1034 q 335 1075 299 1075 m 664 812 q 703 802 692 812 q 714 768 714 791 l 714 280 q 677 119 714 185 q 572 19 640 53 q 416 -15 505 -15 q 260 19 328 -15 q 156 119 193 53 q 119 280 119 185 l 119 768 q 130 802 119 791 q 169 812 141 812 l 170 812 q 209 802 198 812 q 220 768 220 791 l 220 294 q 271 138 220 190 q 416 85 322 85 q 562 138 511 85 q 612 294 612 190 l 612 768 q 624 802 612 791 q 663 812 635 812 l 664 812 z "},"V":{"ha":833,"x_min":67,"x_max":763,"o":"m 724 806 q 753 791 744 800 q 763 769 763 782 q 758 748 763 762 l 488 29 q 461 -5 479 5 q 415 -15 444 -15 q 369 -5 386 -15 q 342 29 351 5 l 72 748 q 67 769 67 762 q 77 791 67 782 q 106 806 86 800 q 134 812 124 812 q 156 804 147 812 q 170 781 165 797 l 415 123 l 660 781 q 674 804 665 797 q 696 812 683 812 q 724 806 706 812 z "},"W":{"ha":833,"x_min":45,"x_max":782,"o":"m 736 811 q 771 799 760 808 q 782 773 782 790 q 781 761 782 765 l 680 29 q 663 -5 677 5 q 622 -15 649 -15 q 554 29 570 -15 l 414 427 l 273 29 q 205 -15 258 -15 q 164 -5 178 -15 q 147 29 151 5 l 46 761 q 45 773 45 765 q 56 799 45 790 q 92 811 67 808 q 105 812 96 812 q 135 803 125 812 q 147 772 144 793 l 223 175 l 363 573 q 380 593 368 587 q 414 600 392 600 q 447 593 435 600 q 464 573 459 587 l 604 175 l 680 772 q 692 803 683 793 q 722 812 702 812 q 736 811 731 812 z "},"Ẃ":{"ha":833,"x_min":45,"x_max":782,"o":"m 550 1134 q 575 1143 562 1143 q 621 1115 598 1143 q 641 1069 641 1088 q 626 1042 641 1051 l 372 894 q 351 887 360 887 q 319 904 334 887 q 303 939 303 922 q 314 960 303 952 l 550 1134 m 736 811 q 771 799 760 808 q 782 773 782 790 q 781 761 782 765 l 680 29 q 663 -5 677 5 q 622 -15 649 -15 q 554 29 570 -15 l 414 427 l 273 29 q 205 -15 258 -15 q 164 -5 178 -15 q 147 29 151 5 l 46 761 q 45 773 45 765 q 56 799 45 790 q 92 811 67 808 q 105 812 96 812 q 135 803 125 812 q 147 772 144 793 l 223 175 l 363 573 q 380 593 368 587 q 414 600 392 600 q 447 593 435 600 q 464 573 459 587 l 604 175 l 680 772 q 692 803 683 793 q 722 812 702 812 q 736 811 731 812 z "},"Ŵ":{"ha":833,"x_min":45,"x_max":782,"o":"m 416 1130 q 456 1116 441 1130 l 622 958 q 633 936 633 948 q 617 904 633 922 q 587 888 603 888 q 566 896 576 888 l 416 1013 l 267 896 q 245 888 256 888 q 216 904 230 888 q 200 936 200 922 q 211 958 200 948 l 377 1116 q 416 1130 392 1130 m 736 811 q 771 799 760 808 q 782 773 782 790 q 781 761 782 765 l 680 29 q 663 -5 677 5 q 622 -15 649 -15 q 554 29 570 -15 l 414 427 l 273 29 q 205 -15 258 -15 q 164 -5 178 -15 q 147 29 151 5 l 46 761 q 45 773 45 765 q 56 799 45 790 q 92 811 67 808 q 105 812 96 812 q 135 803 125 812 q 147 772 144 793 l 223 175 l 363 573 q 380 593 368 587 q 414 600 392 600 q 447 593 435 600 q 464 573 459 587 l 604 175 l 680 772 q 692 803 683 793 q 722 812 702 812 q 736 811 731 812 z "},"Ẅ":{"ha":833,"x_min":45,"x_max":782,"o":"m 274 1107 q 325 1098 311 1107 q 338 1063 338 1088 l 338 975 q 325 941 338 951 q 274 931 311 931 q 223 941 237 931 q 210 975 210 951 l 210 1063 q 223 1098 210 1088 q 274 1107 237 1107 m 559 1107 q 610 1098 596 1107 q 623 1063 623 1088 l 623 975 q 610 941 623 951 q 559 931 596 931 q 508 941 522 931 q 494 975 494 951 l 494 1063 q 508 1098 494 1088 q 559 1107 522 1107 m 736 811 q 771 799 760 808 q 782 773 782 790 q 781 761 782 765 l 680 29 q 663 -5 677 5 q 622 -15 649 -15 q 554 29 570 -15 l 414 427 l 273 29 q 205 -15 258 -15 q 164 -5 178 -15 q 147 29 151 5 l 46 761 q 45 773 45 765 q 56 799 45 790 q 92 811 67 808 q 105 812 96 812 q 135 803 125 812 q 147 772 144 793 l 223 175 l 363 573 q 380 593 368 587 q 414 600 392 600 q 447 593 435 600 q 464 573 459 587 l 604 175 l 680 772 q 692 803 683 793 q 722 812 702 812 q 736 811 731 812 z "},"Ẁ":{"ha":833,"x_min":45,"x_max":782,"o":"m 519 960 q 530 939 530 952 q 513 904 530 922 q 482 887 498 887 q 460 894 473 887 l 207 1042 q 192 1069 192 1051 q 212 1115 192 1088 q 258 1143 235 1143 q 283 1134 271 1143 l 519 960 m 736 811 q 771 799 760 808 q 782 773 782 790 q 781 761 782 765 l 680 29 q 663 -5 677 5 q 622 -15 649 -15 q 554 29 570 -15 l 414 427 l 273 29 q 205 -15 258 -15 q 164 -5 178 -15 q 147 29 151 5 l 46 761 q 45 773 45 765 q 56 799 45 790 q 92 811 67 808 q 105 812 96 812 q 135 803 125 812 q 147 772 144 793 l 223 175 l 363 573 q 380 593 368 587 q 414 600 392 600 q 447 593 435 600 q 464 573 459 587 l 604 175 l 680 772 q 692 803 683 793 q 722 812 702 812 q 736 811 731 812 z "},"X":{"ha":833,"x_min":101,"x_max":740,"o":"m 730 60 q 740 35 740 46 q 709 0 740 14 q 671 -11 684 -11 q 637 10 650 -11 l 419 330 l 204 10 q 189 -6 197 -1 q 170 -11 180 -11 q 132 0 157 -11 q 101 34 101 14 q 111 60 101 46 l 357 410 l 127 745 q 117 771 117 759 q 147 805 117 791 q 186 816 172 816 q 220 795 205 816 l 421 492 l 621 795 q 655 816 635 816 q 694 805 669 816 q 724 771 724 791 q 714 745 724 759 l 484 410 l 730 60 z "},"Y":{"ha":833,"x_min":85,"x_max":748,"o":"m 715 805 q 740 789 732 798 q 748 770 748 781 q 738 743 748 759 l 467 330 l 467 37 q 456 3 467 14 q 417 -7 445 -7 l 416 -7 q 377 3 388 -7 q 366 37 366 14 l 366 330 l 95 743 q 85 770 85 759 q 93 789 85 781 q 117 805 100 798 q 153 814 140 814 q 185 795 173 814 l 416 438 l 648 795 q 680 814 661 814 q 715 805 693 814 z "},"Ý":{"ha":833,"x_min":85,"x_max":748,"o":"m 371 894 q 349 887 359 887 q 318 904 333 887 q 302 939 302 922 q 313 960 302 952 l 549 1134 q 574 1143 561 1143 q 619 1115 597 1143 q 640 1069 640 1088 q 625 1042 640 1051 l 371 894 m 715 805 q 740 789 732 798 q 748 770 748 781 q 738 743 748 759 l 467 330 l 467 37 q 456 3 467 14 q 417 -7 445 -7 l 416 -7 q 377 3 388 -7 q 366 37 366 14 l 366 330 l 95 743 q 85 770 85 759 q 93 789 85 781 q 117 805 100 798 q 153 814 140 814 q 185 795 173 814 l 416 438 l 648 795 q 680 814 661 814 q 715 805 693 814 z "},"Ŷ":{"ha":833,"x_min":85,"x_max":748,"o":"m 267 896 q 246 888 257 888 q 216 904 231 888 q 201 936 201 922 q 212 958 201 948 l 378 1116 q 417 1130 393 1130 q 456 1116 441 1130 l 623 958 q 633 936 633 948 q 618 904 633 922 q 588 888 604 888 q 567 896 577 888 l 417 1013 l 267 896 m 715 805 q 740 789 732 798 q 748 770 748 781 q 738 743 748 759 l 467 330 l 467 37 q 456 3 467 14 q 417 -7 445 -7 l 416 -7 q 377 3 388 -7 q 366 37 366 14 l 366 330 l 95 743 q 85 770 85 759 q 93 789 85 781 q 117 805 100 798 q 153 814 140 814 q 185 795 173 814 l 416 438 l 648 795 q 680 814 661 814 q 715 805 693 814 z "},"Ÿ":{"ha":833,"x_min":85,"x_max":748,"o":"m 274 931 q 223 941 237 931 q 210 975 210 951 l 210 1063 q 223 1098 210 1088 q 274 1107 237 1107 q 325 1098 311 1107 q 338 1063 338 1088 l 338 975 q 325 941 338 951 q 274 931 311 931 m 559 931 q 508 941 522 931 q 494 975 494 951 l 494 1063 q 508 1098 494 1088 q 559 1107 522 1107 q 610 1098 596 1107 q 623 1063 623 1088 l 623 975 q 610 941 623 951 q 559 931 596 931 m 715 805 q 740 789 732 798 q 748 770 748 781 q 738 743 748 759 l 467 330 l 467 37 q 456 3 467 14 q 417 -7 445 -7 l 416 -7 q 377 3 388 -7 q 366 37 366 14 l 366 330 l 95 743 q 85 770 85 759 q 93 789 85 781 q 117 805 100 798 q 153 814 140 814 q 185 795 173 814 l 416 438 l 648 795 q 680 814 661 814 q 715 805 693 814 z "},"Ỳ":{"ha":833,"x_min":85,"x_max":748,"o":"m 208 1042 q 193 1069 193 1051 q 214 1115 193 1088 q 259 1143 236 1143 q 284 1134 272 1143 l 520 960 q 531 939 531 952 q 515 904 531 922 q 484 887 500 887 q 462 894 474 887 l 208 1042 m 715 805 q 740 789 732 798 q 748 770 748 781 q 738 743 748 759 l 467 330 l 467 37 q 456 3 467 14 q 417 -7 445 -7 l 416 -7 q 377 3 388 -7 q 366 37 366 14 l 366 330 l 95 743 q 85 770 85 759 q 93 789 85 781 q 117 805 100 798 q 153 814 140 814 q 185 795 173 814 l 416 438 l 648 795 q 680 814 661 814 q 715 805 693 814 z "},"Z":{"ha":833,"x_min":113,"x_max":718,"o":"m 675 98 q 708 86 699 98 q 718 49 718 75 q 708 11 718 22 q 675 0 699 0 l 156 0 q 123 11 133 0 q 113 46 113 21 q 123 75 113 61 l 557 707 l 174 707 q 141 719 151 707 q 131 756 131 730 q 141 794 131 783 q 174 805 151 805 l 663 805 q 696 794 686 805 q 706 759 706 784 q 699 732 706 742 l 263 98 l 675 98 z "},"Ź":{"ha":833,"x_min":113,"x_max":718,"o":"m 351 894 q 329 887 338 887 q 298 904 313 887 q 281 939 281 922 q 292 960 281 952 l 528 1134 q 553 1143 541 1143 q 599 1115 576 1143 q 619 1069 619 1088 q 604 1042 619 1051 l 351 894 m 675 98 q 708 86 699 98 q 718 49 718 75 q 708 11 718 22 q 675 0 699 0 l 156 0 q 123 11 133 0 q 113 46 113 21 q 123 75 113 61 l 557 707 l 174 707 q 141 719 151 707 q 131 756 131 730 q 141 794 131 783 q 174 805 151 805 l 663 805 q 696 794 686 805 q 706 759 706 784 q 699 732 706 742 l 263 98 l 675 98 z "},"Ž":{"ha":833,"x_min":113,"x_max":718,"o":"m 216 1061 q 205 1083 205 1071 q 221 1115 205 1097 q 251 1131 235 1131 q 272 1123 262 1131 l 422 1006 l 572 1123 q 593 1131 582 1131 q 623 1115 608 1131 q 638 1083 638 1097 q 627 1061 638 1071 l 461 903 q 422 889 446 889 q 382 903 397 889 l 216 1061 m 675 98 q 708 86 699 98 q 718 49 718 75 q 708 11 718 22 q 675 0 699 0 l 156 0 q 123 11 133 0 q 113 46 113 21 q 123 75 113 61 l 557 707 l 174 707 q 141 719 151 707 q 131 756 131 730 q 141 794 131 783 q 174 805 151 805 l 663 805 q 696 794 686 805 q 706 759 706 784 q 699 732 706 742 l 263 98 l 675 98 z "},"Ż":{"ha":833,"x_min":113,"x_max":718,"o":"m 423 931 q 372 941 386 931 q 359 975 359 951 l 359 1063 q 372 1098 359 1088 q 423 1107 386 1107 q 474 1098 460 1107 q 488 1063 488 1088 l 488 975 q 474 941 488 951 q 423 931 460 931 m 675 98 q 708 86 699 98 q 718 49 718 75 q 708 11 718 22 q 675 0 699 0 l 156 0 q 123 11 133 0 q 113 46 113 21 q 123 75 113 61 l 557 707 l 174 707 q 141 719 151 707 q 131 756 131 730 q 141 794 131 783 q 174 805 151 805 l 663 805 q 696 794 686 805 q 706 759 706 784 q 699 732 706 742 l 263 98 l 675 98 z "},"a":{"ha":833,"x_min":108,"x_max":688,"o":"m 433 642 q 624 585 560 642 q 688 416 688 528 l 688 37 q 677 3 688 14 q 641 -7 667 -7 l 640 -7 q 603 3 613 -7 q 593 37 593 14 l 593 83 q 474 11 538 37 q 338 -15 410 -15 q 218 8 271 -15 q 137 77 166 32 q 108 183 108 121 q 183 342 108 291 q 380 393 259 393 q 586 358 488 393 l 586 416 q 549 512 586 481 q 430 543 512 543 q 324 529 379 543 q 220 490 269 515 q 199 484 209 484 q 161 516 177 484 q 154 543 154 532 q 179 580 154 567 q 301 626 236 610 q 433 642 367 642 m 342 81 q 586 193 477 81 l 586 267 q 487 289 540 281 q 380 297 434 297 q 257 270 302 297 q 212 185 212 243 q 247 108 212 136 q 342 81 281 81 z "},"á":{"ha":833,"x_min":108,"x_max":688,"o":"m 352 711 q 330 704 340 704 q 299 721 314 704 q 283 756 283 739 q 294 777 283 769 l 530 951 q 555 960 542 960 q 600 932 578 960 q 621 886 621 905 q 606 859 621 868 l 352 711 m 433 642 q 624 585 560 642 q 688 416 688 528 l 688 37 q 677 3 688 14 q 641 -7 667 -7 l 640 -7 q 603 3 613 -7 q 593 37 593 14 l 593 83 q 474 11 538 37 q 338 -15 410 -15 q 218 8 271 -15 q 137 77 166 32 q 108 183 108 121 q 183 342 108 291 q 380 393 259 393 q 586 358 488 393 l 586 416 q 549 512 586 481 q 430 543 512 543 q 324 529 379 543 q 220 490 269 515 q 199 484 209 484 q 161 516 177 484 q 154 543 154 532 q 179 580 154 567 q 301 626 236 610 q 433 642 367 642 m 342 81 q 586 193 477 81 l 586 267 q 487 289 540 281 q 380 297 434 297 q 257 270 302 297 q 212 185 212 243 q 247 108 212 136 q 342 81 281 81 z "},"ă":{"ha":833,"x_min":108,"x_max":688,"o":"m 425 726 q 276 768 332 726 q 203 887 219 810 q 203 896 203 890 q 212 917 203 909 q 239 928 220 924 q 258 930 250 930 q 288 914 281 930 q 337 843 303 866 q 425 820 371 820 q 514 843 480 820 q 563 914 548 866 q 592 930 569 930 q 611 928 601 930 q 639 917 630 924 q 648 896 648 909 q 647 887 648 890 q 575 768 631 810 q 425 726 518 726 m 433 642 q 624 585 560 642 q 688 416 688 528 l 688 37 q 677 3 688 14 q 641 -7 667 -7 l 640 -7 q 603 3 613 -7 q 593 37 593 14 l 593 83 q 474 11 538 37 q 338 -15 410 -15 q 218 8 271 -15 q 137 77 166 32 q 108 183 108 121 q 183 342 108 291 q 380 393 259 393 q 586 358 488 393 l 586 416 q 549 512 586 481 q 430 543 512 543 q 324 529 379 543 q 220 490 269 515 q 199 484 209 484 q 161 516 177 484 q 154 543 154 532 q 179 580 154 567 q 301 626 236 610 q 433 642 367 642 m 342 81 q 586 193 477 81 l 586 267 q 487 289 540 281 q 380 297 434 297 q 257 270 302 297 q 212 185 212 243 q 247 108 212 136 q 342 81 281 81 z "},"â":{"ha":833,"x_min":108,"x_max":688,"o":"m 273 713 q 252 705 263 705 q 222 721 237 705 q 207 753 207 739 q 218 775 207 765 l 384 933 q 423 947 399 947 q 463 933 448 947 l 629 775 q 640 753 640 765 q 624 721 640 739 q 594 705 610 705 q 573 713 583 705 l 423 830 l 273 713 m 433 642 q 624 585 560 642 q 688 416 688 528 l 688 37 q 677 3 688 14 q 641 -7 667 -7 l 640 -7 q 603 3 613 -7 q 593 37 593 14 l 593 83 q 474 11 538 37 q 338 -15 410 -15 q 218 8 271 -15 q 137 77 166 32 q 108 183 108 121 q 183 342 108 291 q 380 393 259 393 q 586 358 488 393 l 586 416 q 549 512 586 481 q 430 543 512 543 q 324 529 379 543 q 220 490 269 515 q 199 484 209 484 q 161 516 177 484 q 154 543 154 532 q 179 580 154 567 q 301 626 236 610 q 433 642 367 642 m 342 81 q 586 193 477 81 l 586 267 q 487 289 540 281 q 380 297 434 297 q 257 270 302 297 q 212 185 212 243 q 247 108 212 136 q 342 81 281 81 z "},"ä":{"ha":833,"x_min":108,"x_max":688,"o":"m 281 748 q 230 758 243 748 q 216 792 216 768 l 216 880 q 230 915 216 905 q 281 924 243 924 q 332 915 318 924 q 345 880 345 905 l 345 792 q 332 758 345 768 q 281 748 318 748 m 566 748 q 515 758 528 748 q 501 792 501 768 l 501 880 q 515 915 501 905 q 566 924 528 924 q 616 915 603 924 q 630 880 630 905 l 630 792 q 616 758 630 768 q 566 748 603 748 m 433 642 q 624 585 560 642 q 688 416 688 528 l 688 37 q 677 3 688 14 q 641 -7 667 -7 l 640 -7 q 603 3 613 -7 q 593 37 593 14 l 593 83 q 474 11 538 37 q 338 -15 410 -15 q 218 8 271 -15 q 137 77 166 32 q 108 183 108 121 q 183 342 108 291 q 380 393 259 393 q 586 358 488 393 l 586 416 q 549 512 586 481 q 430 543 512 543 q 324 529 379 543 q 220 490 269 515 q 199 484 209 484 q 161 516 177 484 q 154 543 154 532 q 179 580 154 567 q 301 626 236 610 q 433 642 367 642 m 342 81 q 586 193 477 81 l 586 267 q 487 289 540 281 q 380 297 434 297 q 257 270 302 297 q 212 185 212 243 q 247 108 212 136 q 342 81 281 81 z "},"à":{"ha":833,"x_min":108,"x_max":688,"o":"m 261 859 q 246 886 246 868 q 267 932 246 905 q 312 960 289 960 q 337 951 325 960 l 573 777 q 584 756 584 769 q 568 721 584 739 q 536 704 553 704 q 515 711 527 704 l 261 859 m 433 642 q 624 585 560 642 q 688 416 688 528 l 688 37 q 677 3 688 14 q 641 -7 667 -7 l 640 -7 q 603 3 613 -7 q 593 37 593 14 l 593 83 q 474 11 538 37 q 338 -15 410 -15 q 218 8 271 -15 q 137 77 166 32 q 108 183 108 121 q 183 342 108 291 q 380 393 259 393 q 586 358 488 393 l 586 416 q 549 512 586 481 q 430 543 512 543 q 324 529 379 543 q 220 490 269 515 q 199 484 209 484 q 161 516 177 484 q 154 543 154 532 q 179 580 154 567 q 301 626 236 610 q 433 642 367 642 m 342 81 q 586 193 477 81 l 586 267 q 487 289 540 281 q 380 297 434 297 q 257 270 302 297 q 212 185 212 243 q 247 108 212 136 q 342 81 281 81 z "},"ā":{"ha":833,"x_min":108,"x_max":688,"o":"m 253 750 q 220 761 230 750 q 210 799 210 772 q 220 837 210 825 q 253 848 230 848 l 607 848 q 640 837 630 848 q 650 799 650 825 q 640 761 650 772 q 607 750 630 750 l 253 750 m 433 642 q 624 585 560 642 q 688 416 688 528 l 688 37 q 677 3 688 14 q 641 -7 667 -7 l 640 -7 q 603 3 613 -7 q 593 37 593 14 l 593 83 q 474 11 538 37 q 338 -15 410 -15 q 218 8 271 -15 q 137 77 166 32 q 108 183 108 121 q 183 342 108 291 q 380 393 259 393 q 586 358 488 393 l 586 416 q 549 512 586 481 q 430 543 512 543 q 324 529 379 543 q 220 490 269 515 q 199 484 209 484 q 161 516 177 484 q 154 543 154 532 q 179 580 154 567 q 301 626 236 610 q 433 642 367 642 m 342 81 q 586 193 477 81 l 586 267 q 487 289 540 281 q 380 297 434 297 q 257 270 302 297 q 212 185 212 243 q 247 108 212 136 q 342 81 281 81 z "},"ą":{"ha":833,"x_min":108,"x_max":725,"o":"m 433 642 q 624 585 560 642 q 688 416 688 528 l 688 37 q 676 2 688 13 q 588 -96 615 -54 q 561 -176 561 -139 q 575 -213 561 -200 q 613 -226 589 -226 q 690 -214 648 -226 q 697 -213 695 -213 q 724 -250 718 -213 q 725 -267 725 -262 q 719 -290 725 -281 q 702 -302 713 -298 q 591 -320 651 -320 q 491 -285 528 -320 q 455 -191 455 -250 q 593 26 455 -84 l 593 83 q 474 11 538 37 q 338 -15 410 -15 q 218 8 271 -15 q 137 77 166 32 q 108 183 108 121 q 183 342 108 291 q 380 393 259 393 q 586 358 488 393 l 586 416 q 549 512 586 481 q 430 543 512 543 q 324 529 379 543 q 220 490 269 515 q 199 484 209 484 q 161 516 177 484 q 154 543 154 532 q 179 580 154 567 q 301 626 236 610 q 433 642 367 642 m 380 297 q 257 270 302 297 q 212 185 212 243 q 247 108 212 136 q 342 81 281 81 q 586 193 477 81 l 586 267 q 487 289 540 281 q 380 297 434 297 z "},"å":{"ha":833,"x_min":108,"x_max":688,"o":"m 423 722 q 338 744 376 722 q 278 804 300 766 q 256 889 256 842 q 278 974 256 936 q 338 1034 300 1013 q 423 1056 376 1056 q 508 1034 470 1056 q 568 974 547 1013 q 590 889 590 936 q 568 804 590 842 q 508 744 547 766 q 423 722 470 722 m 423 966 q 367 945 388 966 q 346 889 346 924 q 367 833 346 854 q 423 812 388 812 q 479 833 458 812 q 500 889 500 854 q 479 945 500 924 q 423 966 458 966 m 433 642 q 624 585 560 642 q 688 416 688 528 l 688 37 q 677 3 688 14 q 641 -7 667 -7 l 640 -7 q 603 3 613 -7 q 593 37 593 14 l 593 83 q 474 11 538 37 q 338 -15 410 -15 q 218 8 271 -15 q 137 77 166 32 q 108 183 108 121 q 183 342 108 291 q 380 393 259 393 q 586 358 488 393 l 586 416 q 549 512 586 481 q 430 543 512 543 q 324 529 379 543 q 220 490 269 515 q 199 484 209 484 q 161 516 177 484 q 154 543 154 532 q 179 580 154 567 q 301 626 236 610 q 433 642 367 642 m 342 81 q 586 193 477 81 l 586 267 q 487 289 540 281 q 380 297 434 297 q 257 270 302 297 q 212 185 212 243 q 247 108 212 136 q 342 81 281 81 z "},"ã":{"ha":833,"x_min":108,"x_max":688,"o":"m 256 745 q 236 736 248 736 q 204 753 219 736 q 190 784 190 768 q 199 808 190 797 q 269 871 232 850 q 342 892 306 892 q 385 885 366 892 q 431 867 404 879 q 471 850 455 855 q 505 844 488 844 q 548 856 527 844 q 591 890 568 867 q 610 899 599 899 q 642 882 627 899 q 656 851 656 867 q 647 827 656 838 q 577 764 614 785 q 505 743 541 743 q 461 750 481 743 q 415 768 442 756 q 375 785 391 780 q 341 791 359 791 q 299 779 319 791 q 256 745 278 768 m 433 642 q 624 585 560 642 q 688 416 688 528 l 688 37 q 677 3 688 14 q 641 -7 667 -7 l 640 -7 q 603 3 613 -7 q 593 37 593 14 l 593 83 q 474 11 538 37 q 338 -15 410 -15 q 218 8 271 -15 q 137 77 166 32 q 108 183 108 121 q 183 342 108 291 q 380 393 259 393 q 586 358 488 393 l 586 416 q 549 512 586 481 q 430 543 512 543 q 324 529 379 543 q 220 490 269 515 q 199 484 209 484 q 161 516 177 484 q 154 543 154 532 q 179 580 154 567 q 301 626 236 610 q 433 642 367 642 m 342 81 q 586 193 477 81 l 586 267 q 487 289 540 281 q 380 297 434 297 q 257 270 302 297 q 212 185 212 243 q 247 108 212 136 q 342 81 281 81 z "},"æ":{"ha":833,"x_min":51,"x_max":781,"o":"m 578 642 q 729 563 682 642 q 781 340 777 484 q 771 308 781 318 q 738 298 761 298 l 467 298 q 578 83 471 83 q 638 96 611 83 q 694 136 665 109 q 720 148 705 148 q 758 127 741 148 q 772 93 772 110 q 754 57 772 74 q 672 3 717 22 q 578 -15 627 -15 q 413 83 468 -15 q 331 11 380 37 q 227 -15 282 -15 q 134 7 174 -15 q 73 68 94 28 q 51 163 51 109 q 135 335 51 276 q 366 393 220 393 l 366 408 q 347 510 366 477 q 277 543 328 543 q 217 532 246 543 q 157 496 188 520 q 128 486 144 486 q 93 503 109 486 q 79 537 79 519 q 94 570 79 556 q 277 642 178 642 q 427 563 380 642 q 492 622 454 602 q 578 642 530 642 m 580 543 q 505 508 532 543 q 471 393 479 473 l 674 393 q 647 505 669 467 q 580 543 625 543 m 366 298 q 206 264 257 298 q 155 163 155 231 q 175 102 155 124 q 230 81 195 81 q 299 100 268 81 q 348 154 330 119 q 366 231 366 188 l 366 298 z "},"b":{"ha":833,"x_min":130,"x_max":739,"o":"m 182 897 q 221 886 210 897 q 232 852 232 876 l 232 530 q 447 642 319 642 q 597 602 531 642 q 701 488 663 562 q 739 313 739 414 q 701 139 739 213 q 597 25 663 64 q 447 -15 531 -15 q 324 15 380 -15 q 225 100 268 45 l 225 37 q 215 3 225 14 q 178 -7 205 -7 l 177 -7 q 140 3 151 -7 q 130 37 130 14 l 130 852 q 141 886 130 876 q 180 897 153 897 l 182 897 m 440 541 q 333 514 380 541 q 259 435 286 487 q 232 313 232 384 q 259 191 232 243 q 333 113 286 140 q 440 85 380 85 q 544 114 500 85 q 611 195 588 143 q 634 313 634 247 q 611 432 634 380 q 544 512 588 484 q 440 541 500 541 z "},"c":{"ha":833,"x_min":100,"x_max":728,"o":"m 427 642 q 566 623 499 642 q 690 567 633 604 q 713 528 713 552 q 703 494 713 513 q 668 467 690 467 q 643 475 655 467 q 427 541 547 541 q 312 512 361 541 q 234 431 262 483 q 207 313 207 379 q 234 196 207 248 q 312 115 262 144 q 427 85 361 85 q 548 105 489 85 q 654 161 606 124 q 680 171 668 171 q 716 145 701 171 q 728 110 728 125 q 706 72 728 87 q 577 8 650 31 q 427 -15 503 -15 q 255 28 330 -15 q 140 145 181 71 q 100 313 100 220 q 140 481 100 407 q 255 599 181 556 q 427 642 330 642 z "},"ć":{"ha":833,"x_min":100,"x_max":728,"o":"m 528 951 q 553 960 540 960 q 598 932 576 960 q 618 886 618 905 q 604 859 618 868 l 350 711 q 328 704 338 704 q 297 721 312 704 q 281 756 281 739 q 292 777 281 769 l 528 951 m 427 642 q 566 623 499 642 q 690 567 633 604 q 713 528 713 552 q 703 494 713 513 q 668 467 690 467 q 643 475 655 467 q 427 541 547 541 q 312 512 361 541 q 234 431 262 483 q 207 313 207 379 q 234 196 207 248 q 312 115 262 144 q 427 85 361 85 q 548 105 489 85 q 654 161 606 124 q 680 171 668 171 q 716 145 701 171 q 728 110 728 125 q 706 72 728 87 q 577 8 650 31 q 427 -15 503 -15 q 255 28 330 -15 q 140 145 181 71 q 100 313 100 220 q 140 481 100 407 q 255 599 181 556 q 427 642 330 642 z "},"č":{"ha":833,"x_min":100,"x_max":728,"o":"m 437 706 q 397 720 412 706 l 231 878 q 220 900 220 888 q 236 932 220 914 q 266 948 250 948 q 287 940 277 948 l 437 823 l 587 940 q 608 948 597 948 q 637 932 623 948 q 653 900 653 914 q 642 878 653 888 l 476 720 q 437 706 461 706 m 427 642 q 566 623 499 642 q 690 567 633 604 q 713 528 713 552 q 703 494 713 513 q 668 467 690 467 q 643 475 655 467 q 427 541 547 541 q 312 512 361 541 q 234 431 262 483 q 207 313 207 379 q 234 196 207 248 q 312 115 262 144 q 427 85 361 85 q 548 105 489 85 q 654 161 606 124 q 680 171 668 171 q 716 145 701 171 q 728 110 728 125 q 706 72 728 87 q 577 8 650 31 q 427 -15 503 -15 q 255 28 330 -15 q 140 145 181 71 q 100 313 100 220 q 140 481 100 407 q 255 599 181 556 q 427 642 330 642 z "},"ç":{"ha":833,"x_min":100,"x_max":728,"o":"m 716 145 q 728 110 728 125 q 706 72 728 87 q 597 15 659 37 q 470 -13 536 -7 l 470 -77 q 573 -108 538 -76 q 608 -191 608 -140 q 566 -285 608 -250 q 441 -320 524 -320 q 352 -312 395 -320 q 274 -288 309 -304 q 258 -264 258 -281 q 264 -240 258 -254 q 295 -210 275 -210 q 304 -211 300 -210 q 368 -229 333 -222 q 435 -237 403 -237 q 489 -225 469 -237 q 509 -193 509 -214 q 490 -160 509 -171 q 430 -149 472 -149 l 404 -150 q 387 -143 393 -150 q 380 -120 380 -136 l 380 -12 q 232 42 296 -2 q 134 157 169 87 q 100 313 100 227 q 140 481 100 407 q 255 599 181 556 q 427 642 330 642 q 566 623 499 642 q 690 567 633 604 q 713 528 713 552 q 703 494 713 513 q 668 467 690 467 q 643 475 655 467 q 427 541 547 541 q 312 512 361 541 q 234 431 262 483 q 207 313 207 379 q 234 196 207 248 q 312 115 262 144 q 427 85 361 85 q 548 105 489 85 q 654 161 606 124 q 680 171 668 171 q 716 145 701 171 z "},"ĉ":{"ha":833,"x_min":100,"x_max":728,"o":"m 437 947 q 476 933 461 947 l 642 775 q 653 753 653 765 q 637 721 653 739 q 608 705 623 705 q 587 713 597 705 l 437 830 l 287 713 q 266 705 277 705 q 236 721 250 705 q 220 753 220 739 q 231 775 220 765 l 397 933 q 437 947 412 947 m 427 642 q 566 623 499 642 q 690 567 633 604 q 713 528 713 552 q 703 494 713 513 q 668 467 690 467 q 643 475 655 467 q 427 541 547 541 q 312 512 361 541 q 234 431 262 483 q 207 313 207 379 q 234 196 207 248 q 312 115 262 144 q 427 85 361 85 q 548 105 489 85 q 654 161 606 124 q 680 171 668 171 q 716 145 701 171 q 728 110 728 125 q 706 72 728 87 q 577 8 650 31 q 427 -15 503 -15 q 255 28 330 -15 q 140 145 181 71 q 100 313 100 220 q 140 481 100 407 q 255 599 181 556 q 427 642 330 642 z "},"ċ":{"ha":833,"x_min":100,"x_max":728,"o":"m 437 924 q 488 915 474 924 q 501 880 501 905 l 501 792 q 488 758 501 768 q 437 748 474 748 q 386 758 399 748 q 372 792 372 768 l 372 880 q 386 915 372 905 q 437 924 399 924 m 427 642 q 566 623 499 642 q 690 567 633 604 q 713 528 713 552 q 703 494 713 513 q 668 467 690 467 q 643 475 655 467 q 427 541 547 541 q 312 512 361 541 q 234 431 262 483 q 207 313 207 379 q 234 196 207 248 q 312 115 262 144 q 427 85 361 85 q 548 105 489 85 q 654 161 606 124 q 680 171 668 171 q 716 145 701 171 q 728 110 728 125 q 706 72 728 87 q 577 8 650 31 q 427 -15 503 -15 q 255 28 330 -15 q 140 145 181 71 q 100 313 100 220 q 140 481 100 407 q 255 599 181 556 q 427 642 330 642 z "},"d":{"ha":833,"x_min":94,"x_max":703,"o":"m 652 897 q 691 886 680 897 q 703 852 703 876 l 703 37 q 692 3 703 14 q 656 -7 682 -7 l 654 -7 q 618 3 628 -7 q 608 37 608 14 l 608 100 q 509 15 565 45 q 386 -15 452 -15 q 236 25 302 -15 q 132 139 170 64 q 94 313 94 213 q 132 488 94 414 q 236 602 170 562 q 386 642 302 642 q 601 530 513 642 l 601 852 q 612 886 601 876 q 651 897 623 897 l 652 897 m 393 541 q 289 512 332 541 q 222 432 245 484 q 199 313 199 380 q 222 195 199 247 q 289 114 245 143 q 393 85 332 85 q 500 113 453 85 q 574 191 547 140 q 601 313 601 243 q 574 435 601 384 q 500 514 547 487 q 393 541 453 541 z "},"ð":{"ha":833,"x_min":95,"x_max":738,"o":"m 541 742 q 738 293 738 561 q 696 132 738 202 q 581 24 654 62 q 416 -15 508 -15 q 252 24 325 -15 q 137 132 178 62 q 95 293 95 202 q 137 454 95 384 q 252 562 178 524 q 416 601 325 601 q 578 549 498 601 q 437 703 529 630 l 274 642 q 253 637 262 637 q 233 645 241 637 q 218 670 224 652 q 212 695 212 683 q 241 728 212 718 l 342 766 q 260 810 312 784 q 235 842 235 823 q 244 873 235 855 q 283 903 260 903 q 307 897 295 903 q 457 809 392 856 l 618 869 q 639 874 629 874 q 659 866 651 874 q 674 841 667 859 q 680 816 680 828 q 650 783 680 793 l 541 742 m 416 85 q 529 111 480 85 q 604 184 577 137 q 631 293 631 231 q 604 402 631 355 q 529 475 577 449 q 416 500 480 500 q 304 475 353 500 q 229 402 256 449 q 202 293 202 355 q 229 184 202 231 q 304 111 256 137 q 416 85 353 85 z "},"ď":{"ha":833,"x_min":93,"x_max":896,"o":"m 583 897 q 622 886 611 897 q 633 852 633 876 l 633 37 q 623 3 633 14 q 587 -7 613 -7 l 585 -7 q 549 3 559 -7 q 538 37 538 14 l 538 94 q 456 12 501 39 q 351 -15 411 -15 q 216 25 274 -15 q 125 138 157 64 q 93 313 93 212 q 125 488 93 414 q 216 602 157 562 q 351 642 274 642 q 453 615 410 642 q 532 536 495 589 l 532 852 q 543 886 532 876 q 582 897 554 897 l 583 897 m 878 890 q 891 885 886 890 q 896 871 896 880 q 892 855 896 865 l 802 609 q 751 585 793 585 q 722 592 732 585 q 712 613 712 600 q 713 623 712 616 l 769 868 q 798 890 774 890 l 878 890 m 357 541 q 238 479 278 541 q 197 313 197 417 q 238 148 197 210 q 357 85 278 85 q 450 113 410 85 q 510 191 489 140 q 532 313 532 242 q 510 436 532 385 q 450 514 489 487 q 357 541 410 541 z "},"đ":{"ha":833,"x_min":108,"x_max":826,"o":"m 783 780 q 816 769 806 780 q 826 731 826 758 q 816 693 826 705 q 783 682 806 682 l 689 682 l 689 37 q 679 3 689 14 q 642 -7 669 -7 l 641 -7 q 604 3 614 -7 q 594 37 594 14 l 594 94 q 501 13 553 41 q 386 -15 448 -15 q 243 22 306 -15 q 144 129 180 59 q 108 293 108 199 q 144 457 108 387 q 243 564 180 527 q 386 601 306 601 q 587 501 505 601 l 587 682 l 416 682 q 383 693 393 682 q 373 731 373 705 q 383 769 373 758 q 416 780 393 780 l 587 780 l 587 852 q 598 886 587 876 q 637 897 610 897 l 639 897 q 678 886 667 897 q 689 852 689 876 l 689 780 l 783 780 m 393 85 q 493 110 449 85 q 562 182 537 135 q 587 293 587 229 q 562 404 587 357 q 493 476 537 451 q 393 500 449 500 q 296 474 336 500 q 234 400 255 448 q 212 293 212 353 q 234 185 212 233 q 296 112 255 138 q 393 85 336 85 z "},"e":{"ha":833,"x_min":100,"x_max":740,"o":"m 422 642 q 590 602 521 642 q 696 492 659 562 q 739 330 733 422 q 729 298 740 308 q 696 288 719 288 l 205 288 q 262 135 210 187 q 409 83 314 83 q 542 99 477 83 q 653 142 606 115 q 674 148 665 148 q 697 138 687 148 q 714 110 708 128 q 719 85 719 98 q 689 44 719 58 q 559 1 634 18 q 409 -15 485 -15 q 241 24 311 -15 q 136 138 172 64 q 100 313 100 212 q 141 485 100 410 q 256 601 182 559 q 422 642 329 642 m 422 543 q 283 501 338 543 q 212 383 229 458 l 629 383 q 563 502 614 460 q 422 543 511 543 z "},"é":{"ha":833,"x_min":100,"x_max":740,"o":"m 530 951 q 555 960 542 960 q 600 932 578 960 q 621 886 621 905 q 606 859 621 868 l 352 711 q 330 704 340 704 q 299 721 314 704 q 283 756 283 739 q 294 777 283 769 l 530 951 m 422 642 q 590 602 521 642 q 696 492 659 562 q 739 330 733 422 q 729 298 740 308 q 696 288 719 288 l 205 288 q 262 135 210 187 q 409 83 314 83 q 542 99 477 83 q 653 142 606 115 q 674 148 665 148 q 697 138 687 148 q 714 110 708 128 q 719 85 719 98 q 689 44 719 58 q 559 1 634 18 q 409 -15 485 -15 q 241 24 311 -15 q 136 138 172 64 q 100 313 100 212 q 141 485 100 410 q 256 601 182 559 q 422 642 329 642 m 422 543 q 283 501 338 543 q 212 383 229 458 l 629 383 q 563 502 614 460 q 422 543 511 543 z "},"ĕ":{"ha":833,"x_min":100,"x_max":740,"o":"m 616 928 q 644 917 635 924 q 652 896 652 909 q 652 887 652 890 q 579 768 636 810 q 430 726 523 726 q 280 768 337 726 q 208 887 224 810 q 208 896 208 890 q 216 917 208 909 q 244 928 225 924 q 263 930 254 930 q 292 914 286 930 q 342 843 308 866 q 430 820 376 820 q 519 843 485 820 q 568 914 553 866 q 597 930 574 930 q 616 928 606 930 m 422 642 q 590 602 521 642 q 696 492 659 562 q 739 330 733 422 q 729 298 740 308 q 696 288 719 288 l 205 288 q 262 135 210 187 q 409 83 314 83 q 542 99 477 83 q 653 142 606 115 q 674 148 665 148 q 697 138 687 148 q 714 110 708 128 q 719 85 719 98 q 689 44 719 58 q 559 1 634 18 q 409 -15 485 -15 q 241 24 311 -15 q 136 138 172 64 q 100 313 100 212 q 141 485 100 410 q 256 601 182 559 q 422 642 329 642 m 422 543 q 283 501 338 543 q 212 383 229 458 l 629 383 q 563 502 614 460 q 422 543 511 543 z "},"ě":{"ha":833,"x_min":100,"x_max":740,"o":"m 427 706 q 388 720 403 706 l 222 878 q 211 900 211 888 q 227 932 211 914 q 256 948 241 948 q 277 940 267 948 l 427 823 l 577 940 q 598 948 587 948 q 628 932 614 948 q 644 900 644 914 q 633 878 644 888 l 467 720 q 427 706 452 706 m 422 642 q 590 602 521 642 q 696 492 659 562 q 739 330 733 422 q 729 298 740 308 q 696 288 719 288 l 205 288 q 262 135 210 187 q 409 83 314 83 q 542 99 477 83 q 653 142 606 115 q 674 148 665 148 q 697 138 687 148 q 714 110 708 128 q 719 85 719 98 q 689 44 719 58 q 559 1 634 18 q 409 -15 485 -15 q 241 24 311 -15 q 136 138 172 64 q 100 313 100 212 q 141 485 100 410 q 256 601 182 559 q 422 642 329 642 m 422 543 q 283 501 338 543 q 212 383 229 458 l 629 383 q 563 502 614 460 q 422 543 511 543 z "},"ê":{"ha":833,"x_min":100,"x_max":740,"o":"m 430 947 q 469 933 454 947 l 635 775 q 646 753 646 765 q 631 721 646 739 q 601 705 616 705 q 580 713 590 705 l 430 830 l 280 713 q 259 705 270 705 q 229 721 243 705 q 214 753 214 739 q 224 775 214 765 l 391 933 q 430 947 406 947 m 422 642 q 590 602 521 642 q 696 492 659 562 q 739 330 733 422 q 729 298 740 308 q 696 288 719 288 l 205 288 q 262 135 210 187 q 409 83 314 83 q 542 99 477 83 q 653 142 606 115 q 674 148 665 148 q 697 138 687 148 q 714 110 708 128 q 719 85 719 98 q 689 44 719 58 q 559 1 634 18 q 409 -15 485 -15 q 241 24 311 -15 q 136 138 172 64 q 100 313 100 212 q 141 485 100 410 q 256 601 182 559 q 422 642 329 642 m 422 543 q 283 501 338 543 q 212 383 229 458 l 629 383 q 563 502 614 460 q 422 543 511 543 z "},"ë":{"ha":833,"x_min":100,"x_max":740,"o":"m 281 924 q 332 915 318 924 q 345 880 345 905 l 345 792 q 332 758 345 768 q 281 748 318 748 q 230 758 243 748 q 216 792 216 768 l 216 880 q 230 915 216 905 q 281 924 243 924 m 566 924 q 616 915 603 924 q 630 880 630 905 l 630 792 q 616 758 630 768 q 566 748 603 748 q 515 758 528 748 q 501 792 501 768 l 501 880 q 515 915 501 905 q 566 924 528 924 m 422 642 q 590 602 521 642 q 696 492 659 562 q 739 330 733 422 q 729 298 740 308 q 696 288 719 288 l 205 288 q 262 135 210 187 q 409 83 314 83 q 542 99 477 83 q 653 142 606 115 q 674 148 665 148 q 697 138 687 148 q 714 110 708 128 q 719 85 719 98 q 689 44 719 58 q 559 1 634 18 q 409 -15 485 -15 q 241 24 311 -15 q 136 138 172 64 q 100 313 100 212 q 141 485 100 410 q 256 601 182 559 q 422 642 329 642 m 422 543 q 283 501 338 543 q 212 383 229 458 l 629 383 q 563 502 614 460 q 422 543 511 543 z "},"ė":{"ha":833,"x_min":100,"x_max":740,"o":"m 430 924 q 481 915 467 924 q 494 880 494 905 l 494 792 q 481 758 494 768 q 430 748 467 748 q 379 758 393 748 q 366 792 366 768 l 366 880 q 379 915 366 905 q 430 924 393 924 m 422 642 q 590 602 521 642 q 696 492 659 562 q 739 330 733 422 q 729 298 740 308 q 696 288 719 288 l 205 288 q 262 135 210 187 q 409 83 314 83 q 542 99 477 83 q 653 142 606 115 q 674 148 665 148 q 697 138 687 148 q 714 110 708 128 q 719 85 719 98 q 689 44 719 58 q 559 1 634 18 q 409 -15 485 -15 q 241 24 311 -15 q 136 138 172 64 q 100 313 100 212 q 141 485 100 410 q 256 601 182 559 q 422 642 329 642 m 422 543 q 283 501 338 543 q 212 383 229 458 l 629 383 q 563 502 614 460 q 422 543 511 543 z "},"è":{"ha":833,"x_min":100,"x_max":740,"o":"m 566 777 q 577 756 577 769 q 561 721 577 739 q 530 704 546 704 q 508 711 520 704 l 254 859 q 239 886 239 868 q 260 932 239 905 q 305 960 282 960 q 330 951 318 960 l 566 777 m 422 642 q 590 602 521 642 q 696 492 659 562 q 739 330 733 422 q 729 298 740 308 q 696 288 719 288 l 205 288 q 262 135 210 187 q 409 83 314 83 q 542 99 477 83 q 653 142 606 115 q 674 148 665 148 q 697 138 687 148 q 714 110 708 128 q 719 85 719 98 q 689 44 719 58 q 559 1 634 18 q 409 -15 485 -15 q 241 24 311 -15 q 136 138 172 64 q 100 313 100 212 q 141 485 100 410 q 256 601 182 559 q 422 642 329 642 m 422 543 q 283 501 338 543 q 212 383 229 458 l 629 383 q 563 502 614 460 q 422 543 511 543 z "},"ē":{"ha":833,"x_min":100,"x_max":740,"o":"m 600 848 q 633 837 623 848 q 643 799 643 825 q 633 761 643 772 q 600 750 623 750 l 246 750 q 213 761 223 750 q 203 799 203 772 q 213 837 203 825 q 246 848 223 848 l 600 848 m 422 642 q 590 602 521 642 q 696 492 659 562 q 739 330 733 422 q 729 298 740 308 q 696 288 719 288 l 205 288 q 262 135 210 187 q 409 83 314 83 q 542 99 477 83 q 653 142 606 115 q 674 148 665 148 q 697 138 687 148 q 714 110 708 128 q 719 85 719 98 q 689 44 719 58 q 559 1 634 18 q 409 -15 485 -15 q 241 24 311 -15 q 136 138 172 64 q 100 313 100 212 q 141 485 100 410 q 256 601 182 559 q 422 642 329 642 m 422 543 q 283 501 338 543 q 212 383 229 458 l 629 383 q 563 502 614 460 q 422 543 511 543 z "},"ę":{"ha":833,"x_min":100,"x_max":740,"o":"m 422 642 q 590 602 521 642 q 696 492 659 562 q 739 330 733 422 q 729 298 740 308 q 696 288 719 288 l 205 288 q 262 135 210 187 q 409 83 314 83 q 542 99 477 83 q 653 142 606 115 q 674 148 665 148 q 697 138 687 148 q 714 110 708 128 q 719 85 719 98 q 689 44 719 58 q 654 19 673 37 q 551 -90 582 -45 q 520 -176 520 -136 q 534 -213 520 -200 q 572 -226 549 -226 q 649 -214 608 -226 q 656 -213 654 -213 q 683 -250 677 -213 q 684 -267 684 -262 q 679 -290 684 -281 q 661 -302 673 -298 q 550 -320 610 -320 q 451 -285 487 -320 q 414 -191 414 -250 q 440 -97 414 -142 q 513 -7 465 -52 q 409 -15 459 -15 q 241 24 311 -15 q 136 138 172 64 q 100 313 100 212 q 141 485 100 410 q 256 601 182 559 q 422 642 329 642 m 422 543 q 283 501 338 543 q 212 383 229 458 l 629 383 q 563 502 614 460 q 422 543 511 543 z "},"f":{"ha":833,"x_min":127,"x_max":756,"o":"m 723 859 q 756 814 756 846 q 753 795 756 809 q 718 758 744 758 q 703 761 712 758 q 543 794 617 794 q 406 647 406 794 l 406 572 l 640 572 q 673 561 663 572 q 683 524 683 550 q 673 486 683 497 q 640 475 663 475 l 406 475 l 406 37 q 394 3 406 14 q 355 -7 383 -7 l 354 -7 q 315 3 326 -7 q 304 37 304 14 l 304 475 l 170 475 q 137 486 146 475 q 127 524 127 497 q 137 561 127 550 q 170 572 146 572 l 304 572 l 304 656 q 367 830 304 768 q 543 893 429 893 q 723 859 633 893 z "},"g":{"ha":833,"x_min":94,"x_max":703,"o":"m 386 642 q 509 612 452 642 q 608 526 565 582 l 608 589 q 618 623 608 613 q 654 633 628 633 l 656 633 q 692 623 682 633 q 703 589 703 613 l 703 -20 q 668 -159 703 -101 q 569 -248 634 -217 q 412 -278 504 -278 q 281 -267 347 -278 q 157 -235 214 -256 q 130 -199 130 -225 q 136 -172 130 -188 q 174 -134 148 -134 q 189 -137 182 -134 q 300 -167 242 -156 q 412 -178 359 -178 q 553 -133 506 -178 q 601 -12 601 -89 l 601 125 q 386 19 517 19 q 236 57 302 19 q 132 165 170 94 q 94 330 94 235 q 132 496 94 425 q 236 604 170 566 q 386 642 302 642 m 393 541 q 289 514 332 541 q 222 440 245 488 q 199 330 199 392 q 222 221 199 269 q 289 146 245 173 q 393 119 332 119 q 500 144 453 119 q 574 217 547 170 q 601 330 601 265 q 574 443 601 395 q 500 516 547 491 q 393 541 453 541 z "},"ğ":{"ha":833,"x_min":94,"x_max":703,"o":"m 609 928 q 637 917 628 924 q 646 896 646 909 q 645 887 646 890 q 573 768 629 810 q 423 726 516 726 q 274 768 330 726 q 201 887 217 810 q 201 896 201 890 q 210 917 201 909 q 237 928 218 924 q 256 930 248 930 q 286 914 279 930 q 335 843 301 866 q 423 820 369 820 q 512 843 478 820 q 561 914 546 866 q 590 930 567 930 q 609 928 599 930 m 386 642 q 509 612 452 642 q 608 526 565 582 l 608 589 q 618 623 608 613 q 654 633 628 633 l 656 633 q 692 623 682 633 q 703 589 703 613 l 703 -20 q 668 -159 703 -101 q 569 -248 634 -217 q 412 -278 504 -278 q 281 -267 347 -278 q 157 -235 214 -256 q 130 -199 130 -225 q 136 -172 130 -188 q 174 -134 148 -134 q 189 -137 182 -134 q 300 -167 242 -156 q 412 -178 359 -178 q 553 -133 506 -178 q 601 -12 601 -89 l 601 125 q 386 19 517 19 q 236 57 302 19 q 132 165 170 94 q 94 330 94 235 q 132 496 94 425 q 236 604 170 566 q 386 642 302 642 m 393 541 q 289 514 332 541 q 222 440 245 488 q 199 330 199 392 q 222 221 199 269 q 289 146 245 173 q 393 119 332 119 q 500 144 453 119 q 574 217 547 170 q 601 330 601 265 q 574 443 601 395 q 500 516 547 491 q 393 541 453 541 z "},"ĝ":{"ha":833,"x_min":94,"x_max":703,"o":"m 423 947 q 463 933 448 947 l 629 775 q 640 753 640 765 q 624 721 640 739 q 594 705 610 705 q 573 713 583 705 l 423 830 l 273 713 q 252 705 263 705 q 222 721 237 705 q 207 753 207 739 q 218 775 207 765 l 384 933 q 423 947 399 947 m 386 642 q 509 612 452 642 q 608 526 565 582 l 608 589 q 618 623 608 613 q 654 633 628 633 l 656 633 q 692 623 682 633 q 703 589 703 613 l 703 -20 q 668 -159 703 -101 q 569 -248 634 -217 q 412 -278 504 -278 q 281 -267 347 -278 q 157 -235 214 -256 q 130 -199 130 -225 q 136 -172 130 -188 q 174 -134 148 -134 q 189 -137 182 -134 q 300 -167 242 -156 q 412 -178 359 -178 q 553 -133 506 -178 q 601 -12 601 -89 l 601 125 q 386 19 517 19 q 236 57 302 19 q 132 165 170 94 q 94 330 94 235 q 132 496 94 425 q 236 604 170 566 q 386 642 302 642 m 393 541 q 289 514 332 541 q 222 440 245 488 q 199 330 199 392 q 222 221 199 269 q 289 146 245 173 q 393 119 332 119 q 500 144 453 119 q 574 217 547 170 q 601 330 601 265 q 574 443 601 395 q 500 516 547 491 q 393 541 453 541 z "},"ģ":{"ha":833,"x_min":94,"x_max":703,"o":"m 376 722 q 357 739 357 722 q 361 756 357 747 l 441 954 q 481 979 451 979 q 492 979 488 979 q 528 949 528 974 q 526 938 528 946 l 484 743 q 455 722 478 722 l 376 722 m 386 642 q 509 612 452 642 q 608 526 565 582 l 608 589 q 618 623 608 613 q 654 633 628 633 l 656 633 q 692 623 682 633 q 703 589 703 613 l 703 -20 q 668 -159 703 -101 q 569 -248 634 -217 q 412 -278 504 -278 q 281 -267 347 -278 q 157 -235 214 -256 q 130 -199 130 -225 q 136 -172 130 -188 q 174 -134 148 -134 q 189 -137 182 -134 q 300 -167 242 -156 q 412 -178 359 -178 q 553 -133 506 -178 q 601 -12 601 -89 l 601 125 q 386 19 517 19 q 236 57 302 19 q 132 165 170 94 q 94 330 94 235 q 132 496 94 425 q 236 604 170 566 q 386 642 302 642 m 393 541 q 289 514 332 541 q 222 440 245 488 q 199 330 199 392 q 222 221 199 269 q 289 146 245 173 q 393 119 332 119 q 500 144 453 119 q 574 217 547 170 q 601 330 601 265 q 574 443 601 395 q 500 516 547 491 q 393 541 453 541 z "},"ġ":{"ha":833,"x_min":94,"x_max":703,"o":"m 423 924 q 474 915 460 924 q 488 880 488 905 l 488 792 q 474 758 488 768 q 423 748 460 748 q 372 758 386 748 q 359 792 359 768 l 359 880 q 372 915 359 905 q 423 924 386 924 m 386 642 q 509 612 452 642 q 608 526 565 582 l 608 589 q 618 623 608 613 q 654 633 628 633 l 656 633 q 692 623 682 633 q 703 589 703 613 l 703 -20 q 668 -159 703 -101 q 569 -248 634 -217 q 412 -278 504 -278 q 281 -267 347 -278 q 157 -235 214 -256 q 130 -199 130 -225 q 136 -172 130 -188 q 174 -134 148 -134 q 189 -137 182 -134 q 300 -167 242 -156 q 412 -178 359 -178 q 553 -133 506 -178 q 601 -12 601 -89 l 601 125 q 386 19 517 19 q 236 57 302 19 q 132 165 170 94 q 94 330 94 235 q 132 496 94 425 q 236 604 170 566 q 386 642 302 642 m 393 541 q 289 514 332 541 q 222 440 245 488 q 199 330 199 392 q 222 221 199 269 q 289 146 245 173 q 393 119 332 119 q 500 144 453 119 q 574 217 547 170 q 601 330 601 265 q 574 443 601 395 q 500 516 547 491 q 393 541 453 541 z "},"h":{"ha":833,"x_min":137,"x_max":708,"o":"m 189 897 q 228 886 216 897 q 239 852 239 876 l 239 488 q 355 600 286 557 q 493 642 425 642 q 652 583 595 642 q 708 420 708 524 l 708 37 q 697 3 708 14 q 658 -7 686 -7 l 656 -7 q 617 3 629 -7 q 606 37 606 14 l 606 410 q 576 506 606 471 q 483 541 546 541 q 368 504 425 541 q 275 404 311 467 q 239 266 239 340 l 239 37 q 228 3 239 14 q 189 -7 216 -7 l 187 -7 q 148 3 159 -7 q 137 37 137 14 l 137 852 q 148 886 137 876 q 187 897 159 897 l 189 897 z "},"ħ":{"ha":833,"x_min":14,"x_max":694,"o":"m 486 601 q 640 542 586 601 q 694 380 694 483 l 694 37 q 683 3 694 14 q 644 -7 672 -7 l 643 -7 q 604 3 615 -7 q 593 37 593 14 l 593 370 q 564 466 593 431 q 476 500 536 500 q 371 465 423 500 q 286 370 319 430 q 252 239 252 309 l 252 37 q 241 3 252 14 q 202 -7 230 -7 l 201 -7 q 162 3 173 -7 q 151 37 151 14 l 151 682 l 56 682 q 23 693 33 682 q 14 731 14 705 q 23 769 14 758 q 56 780 33 780 l 151 780 l 151 852 q 162 886 151 876 q 201 897 173 897 l 202 897 q 241 886 230 897 q 252 852 252 876 l 252 780 l 424 780 q 457 769 447 780 q 467 731 467 758 q 457 693 467 705 q 424 682 447 682 l 252 682 l 252 461 q 360 563 297 525 q 486 601 422 601 z "},"ĥ":{"ha":833,"x_min":137,"x_max":708,"o":"m 410 1198 q 449 1184 434 1198 l 615 1026 q 626 1004 626 1016 q 610 972 626 989 q 581 956 596 956 q 559 964 570 956 l 410 1081 l 260 964 q 239 956 250 956 q 209 972 223 956 q 193 1004 193 989 q 204 1026 193 1016 l 370 1184 q 410 1198 385 1198 m 189 897 q 228 886 216 897 q 239 852 239 876 l 239 488 q 355 600 286 557 q 493 642 425 642 q 652 583 595 642 q 708 420 708 524 l 708 37 q 697 3 708 14 q 658 -7 686 -7 l 656 -7 q 617 3 629 -7 q 606 37 606 14 l 606 410 q 576 506 606 471 q 483 541 546 541 q 368 504 425 541 q 275 404 311 467 q 239 266 239 340 l 239 37 q 228 3 239 14 q 189 -7 216 -7 l 187 -7 q 148 3 159 -7 q 137 37 137 14 l 137 852 q 148 886 137 876 q 187 897 159 897 l 189 897 z "},"i":{"ha":833,"x_min":127,"x_max":744,"o":"m 419 924 q 470 915 456 924 q 484 880 484 905 l 484 792 q 470 758 484 768 q 419 748 456 748 q 368 758 382 748 q 355 792 355 768 l 355 880 q 368 915 355 905 q 419 924 382 924 m 441 627 q 474 616 464 627 q 484 581 484 606 l 484 98 l 701 98 q 734 86 724 98 q 744 49 744 75 q 734 11 744 22 q 701 0 724 0 l 170 0 q 137 11 146 0 q 127 49 127 22 q 137 86 127 75 q 170 98 146 98 l 382 98 l 382 529 l 210 529 q 177 540 187 529 q 168 578 168 551 q 177 615 168 604 q 210 627 187 627 l 441 627 z "},"ı":{"ha":833,"x_min":127,"x_max":744,"o":"m 441 627 q 474 616 464 627 q 484 581 484 606 l 484 98 l 701 98 q 734 86 724 98 q 744 49 744 75 q 734 11 744 22 q 701 0 724 0 l 170 0 q 137 11 146 0 q 127 49 127 22 q 137 86 127 75 q 170 98 146 98 l 382 98 l 382 529 l 210 529 q 177 540 187 529 q 168 578 168 551 q 177 615 168 604 q 210 627 187 627 l 441 627 z "},"í":{"ha":833,"x_min":127,"x_max":744,"o":"m 530 951 q 555 960 542 960 q 600 932 578 960 q 621 886 621 905 q 606 859 621 868 l 352 711 q 330 704 340 704 q 299 721 314 704 q 283 756 283 739 q 294 777 283 769 l 530 951 m 441 627 q 474 616 464 627 q 484 581 484 606 l 484 98 l 701 98 q 734 86 724 98 q 744 49 744 75 q 734 11 744 22 q 701 0 724 0 l 170 0 q 137 11 146 0 q 127 49 127 22 q 137 86 127 75 q 170 98 146 98 l 382 98 l 382 529 l 210 529 q 177 540 187 529 q 168 578 168 551 q 177 615 168 604 q 210 627 187 627 l 441 627 z "},"ĭ":{"ha":833,"x_min":127,"x_max":744,"o":"m 595 928 q 623 917 614 924 q 632 896 632 909 q 631 887 632 890 q 559 768 616 810 q 410 726 503 726 q 260 768 317 726 q 188 887 203 810 q 187 896 187 890 q 196 917 187 909 q 224 928 205 924 q 243 930 234 930 q 272 914 266 930 q 321 843 288 866 q 410 820 355 820 q 498 843 465 820 q 547 914 532 866 q 576 930 553 930 q 595 928 585 930 m 441 627 q 474 616 464 627 q 484 581 484 606 l 484 98 l 701 98 q 734 86 724 98 q 744 49 744 75 q 734 11 744 22 q 701 0 724 0 l 170 0 q 137 11 146 0 q 127 49 127 22 q 137 86 127 75 q 170 98 146 98 l 382 98 l 382 529 l 210 529 q 177 540 187 529 q 168 578 168 551 q 177 615 168 604 q 210 627 187 627 l 441 627 z "},"î":{"ha":833,"x_min":127,"x_max":744,"o":"m 416 947 q 456 933 441 947 l 622 775 q 633 753 633 765 q 617 721 633 739 q 587 705 603 705 q 566 713 576 705 l 416 830 l 267 713 q 245 705 256 705 q 216 721 230 705 q 200 753 200 739 q 211 775 200 765 l 377 933 q 416 947 392 947 m 441 627 q 474 616 464 627 q 484 581 484 606 l 484 98 l 701 98 q 734 86 724 98 q 744 49 744 75 q 734 11 744 22 q 701 0 724 0 l 170 0 q 137 11 146 0 q 127 49 127 22 q 137 86 127 75 q 170 98 146 98 l 382 98 l 382 529 l 210 529 q 177 540 187 529 q 168 578 168 551 q 177 615 168 604 q 210 627 187 627 l 441 627 z "},"ï":{"ha":833,"x_min":127,"x_max":744,"o":"m 274 924 q 325 915 311 924 q 338 880 338 905 l 338 792 q 325 758 338 768 q 274 748 311 748 q 223 758 237 748 q 210 792 210 768 l 210 880 q 223 915 210 905 q 274 924 237 924 m 559 924 q 610 915 596 924 q 623 880 623 905 l 623 792 q 610 758 623 768 q 559 748 596 748 q 508 758 522 748 q 494 792 494 768 l 494 880 q 508 915 494 905 q 559 924 522 924 m 441 627 q 474 616 464 627 q 484 581 484 606 l 484 98 l 701 98 q 734 86 724 98 q 744 49 744 75 q 734 11 744 22 q 701 0 724 0 l 170 0 q 137 11 146 0 q 127 49 127 22 q 137 86 127 75 q 170 98 146 98 l 382 98 l 382 529 l 210 529 q 177 540 187 529 q 168 578 168 551 q 177 615 168 604 q 210 627 187 627 l 441 627 z "},"ì":{"ha":833,"x_min":127,"x_max":744,"o":"m 513 777 q 524 756 524 769 q 508 721 524 739 q 477 704 493 704 q 455 711 467 704 l 201 859 q 186 886 186 868 q 207 932 186 905 q 252 960 229 960 q 277 951 265 960 l 513 777 m 441 627 q 474 616 464 627 q 484 581 484 606 l 484 98 l 701 98 q 734 86 724 98 q 744 49 744 75 q 734 11 744 22 q 701 0 724 0 l 170 0 q 137 11 146 0 q 127 49 127 22 q 137 86 127 75 q 170 98 146 98 l 382 98 l 382 529 l 210 529 q 177 540 187 529 q 168 578 168 551 q 177 615 168 604 q 210 627 187 627 l 441 627 z "},"ĳ":{"ha":833,"x_min":151,"x_max":682,"o":"m 215 924 q 266 915 252 924 q 279 880 279 905 l 279 792 q 266 758 279 768 q 215 748 252 748 q 164 758 178 748 q 151 792 151 768 l 151 880 q 164 915 151 905 q 215 924 178 924 m 618 924 q 669 915 655 924 q 682 880 682 905 l 682 792 q 669 758 682 768 q 618 748 655 748 q 567 758 581 748 q 553 792 553 768 l 553 880 q 567 915 553 905 q 618 924 581 924 m 216 633 q 255 623 243 633 q 266 589 266 613 l 266 37 q 255 3 266 14 q 216 -7 243 -7 l 214 -7 q 175 3 186 -7 q 164 37 164 14 l 164 589 q 175 623 164 613 q 214 633 186 633 l 216 633 m 618 633 q 657 623 646 633 q 669 589 669 613 l 669 -92 q 621 -230 669 -182 q 484 -278 573 -278 q 403 -269 446 -278 q 327 -244 359 -260 q 300 -208 300 -231 q 308 -178 300 -197 q 347 -145 322 -145 q 366 -150 355 -145 q 423 -170 392 -163 q 484 -178 454 -178 q 547 -153 527 -178 q 567 -71 567 -127 l 567 589 q 578 623 567 613 q 617 633 589 633 l 618 633 z "},"ī":{"ha":833,"x_min":127,"x_max":744,"o":"m 587 848 q 620 837 610 848 q 629 799 629 825 q 620 761 629 772 q 587 750 610 750 l 233 750 q 200 761 210 750 q 190 799 190 772 q 200 837 190 825 q 233 848 210 848 l 587 848 m 441 627 q 474 616 464 627 q 484 581 484 606 l 484 98 l 701 98 q 734 86 724 98 q 744 49 744 75 q 734 11 744 22 q 701 0 724 0 l 170 0 q 137 11 146 0 q 127 49 127 22 q 137 86 127 75 q 170 98 146 98 l 382 98 l 382 529 l 210 529 q 177 540 187 529 q 168 578 168 551 q 177 615 168 604 q 210 627 187 627 l 441 627 z "},"į":{"ha":833,"x_min":127,"x_max":744,"o":"m 419 748 q 368 758 382 748 q 355 792 355 768 l 355 880 q 368 915 355 905 q 419 924 382 924 q 470 915 456 924 q 484 880 484 905 l 484 792 q 470 758 484 768 q 419 748 456 748 m 701 98 q 734 86 724 98 q 744 49 744 75 q 734 11 744 22 q 701 0 724 0 l 484 0 q 397 -98 423 -56 q 371 -176 371 -139 q 385 -213 371 -200 q 423 -226 399 -226 q 500 -214 458 -226 q 507 -213 505 -213 q 534 -250 528 -213 q 535 -267 535 -262 q 529 -290 535 -281 q 512 -302 524 -298 q 401 -320 461 -320 q 301 -285 338 -320 q 265 -191 265 -250 q 292 -94 265 -141 q 371 0 319 -47 l 170 0 q 137 11 146 0 q 127 49 127 22 q 137 86 127 75 q 170 98 146 98 l 382 98 l 382 529 l 210 529 q 177 540 187 529 q 168 578 168 551 q 177 615 168 604 q 210 627 187 627 l 441 627 q 474 616 464 627 q 484 581 484 606 l 484 98 l 701 98 z "},"ĩ":{"ha":833,"x_min":127,"x_max":744,"o":"m 321 892 q 365 885 345 892 q 411 867 384 879 q 451 850 435 855 q 485 844 467 844 q 527 856 507 844 q 570 890 548 867 q 590 899 578 899 q 622 882 607 899 q 636 851 636 867 q 627 827 636 838 q 557 764 594 785 q 484 743 520 743 q 441 750 460 743 q 395 768 422 756 q 355 785 371 780 q 321 791 338 791 q 278 779 299 791 q 235 745 258 768 q 216 736 227 736 q 184 753 199 736 q 170 784 170 768 q 179 808 170 797 q 249 871 212 850 q 321 892 286 892 m 441 627 q 474 616 464 627 q 484 581 484 606 l 484 98 l 701 98 q 734 86 724 98 q 744 49 744 75 q 734 11 744 22 q 701 0 724 0 l 170 0 q 137 11 146 0 q 127 49 127 22 q 137 86 127 75 q 170 98 146 98 l 382 98 l 382 529 l 210 529 q 177 540 187 529 q 168 578 168 551 q 177 615 168 604 q 210 627 187 627 l 441 627 z "},"j":{"ha":833,"x_min":129,"x_max":612,"o":"m 548 924 q 599 915 585 924 q 612 880 612 905 l 612 792 q 599 758 612 768 q 548 748 585 748 q 497 758 511 748 q 484 792 484 768 l 484 880 q 497 915 484 905 q 548 924 511 924 m 570 627 q 603 616 593 627 q 612 581 612 606 l 612 -39 q 559 -218 612 -158 q 391 -278 506 -278 q 269 -257 334 -278 q 151 -202 204 -235 q 129 -167 129 -189 q 138 -136 129 -154 q 177 -105 154 -105 q 198 -112 189 -105 q 295 -161 245 -142 q 391 -179 345 -179 q 484 -143 457 -179 q 511 -30 511 -107 l 511 529 l 224 529 q 191 540 201 529 q 181 578 181 551 q 191 615 181 604 q 224 627 201 627 l 570 627 z "},"ȷ":{"ha":833,"x_min":129,"x_max":612,"o":"m 570 627 q 603 616 593 627 q 612 581 612 606 l 612 -39 q 559 -218 612 -158 q 391 -278 506 -278 q 269 -257 334 -278 q 151 -202 204 -235 q 129 -167 129 -189 q 138 -136 129 -154 q 177 -105 154 -105 q 198 -112 189 -105 q 295 -161 245 -142 q 391 -179 345 -179 q 484 -143 457 -179 q 511 -30 511 -107 l 511 529 l 224 529 q 191 540 201 529 q 181 578 181 551 q 191 615 181 604 q 224 627 201 627 l 570 627 z "},"ĵ":{"ha":833,"x_min":129,"x_max":707,"o":"m 696 775 q 707 753 707 765 q 692 721 707 739 q 662 705 677 705 q 641 713 651 705 l 491 830 l 341 713 q 320 705 331 705 q 290 721 304 705 q 275 753 275 739 q 286 775 275 765 l 452 933 q 491 947 467 947 q 530 933 515 947 l 696 775 m 570 627 q 603 616 593 627 q 612 581 612 606 l 612 -39 q 559 -218 612 -158 q 391 -278 506 -278 q 269 -257 334 -278 q 151 -202 204 -235 q 129 -167 129 -189 q 138 -136 129 -154 q 177 -105 154 -105 q 198 -112 189 -105 q 295 -161 245 -142 q 391 -179 345 -179 q 484 -143 457 -179 q 511 -30 511 -107 l 511 529 l 224 529 q 191 540 201 529 q 181 578 181 551 q 191 615 181 604 q 224 627 201 627 l 570 627 z "},"k":{"ha":833,"x_min":157,"x_max":732,"o":"m 719 64 q 732 37 732 50 q 704 3 732 19 q 663 -11 680 -11 q 636 2 648 -11 l 381 283 l 259 176 l 259 37 q 248 3 259 14 q 209 -7 237 -7 l 208 -7 q 169 3 180 -7 q 157 37 157 14 l 157 852 q 169 886 157 876 q 208 897 180 897 l 209 897 q 248 886 237 897 q 259 852 259 876 l 259 307 l 618 627 q 650 639 632 639 q 688 627 667 639 q 716 591 716 610 q 702 565 716 577 l 458 350 l 719 64 z "},"ķ":{"ha":833,"x_min":157,"x_max":732,"o":"m 719 64 q 732 37 732 50 q 704 3 732 19 q 663 -11 680 -11 q 636 2 648 -11 l 381 283 l 259 176 l 259 37 q 248 3 259 14 q 209 -7 237 -7 l 208 -7 q 169 3 180 -7 q 157 37 157 14 l 157 852 q 169 886 157 876 q 208 897 180 897 l 209 897 q 248 886 237 897 q 259 852 259 876 l 259 307 l 618 627 q 650 639 632 639 q 688 627 667 639 q 716 591 716 610 q 702 565 716 577 l 458 350 l 719 64 m 473 -99 q 492 -117 492 -99 q 488 -134 492 -125 l 409 -331 q 369 -357 399 -357 q 357 -356 361 -357 q 322 -326 322 -351 q 323 -315 322 -323 l 366 -121 q 395 -99 372 -99 l 473 -99 z "},"l":{"ha":833,"x_min":120,"x_max":737,"o":"m 694 98 q 727 86 718 98 q 737 49 737 75 q 727 11 737 22 q 694 0 718 0 l 163 0 q 130 11 140 0 q 120 49 120 22 q 130 86 120 75 q 163 98 140 98 l 375 98 l 375 792 l 190 792 q 157 803 167 792 q 147 841 147 814 q 157 879 147 867 q 190 890 167 890 l 434 890 q 467 879 457 890 q 477 844 477 869 l 477 98 l 694 98 z "},"ĺ":{"ha":833,"x_min":120,"x_max":737,"o":"m 330 962 q 309 955 318 955 q 277 972 292 955 q 261 1007 261 990 q 272 1028 261 1020 l 508 1202 q 533 1211 520 1211 q 578 1183 556 1211 q 599 1137 599 1156 q 584 1110 599 1119 l 330 962 m 694 98 q 727 86 718 98 q 737 49 737 75 q 727 11 737 22 q 694 0 718 0 l 163 0 q 130 11 140 0 q 120 49 120 22 q 130 86 120 75 q 163 98 140 98 l 375 98 l 375 792 l 190 792 q 157 803 167 792 q 147 841 147 814 q 157 879 147 867 q 190 890 167 890 l 434 890 q 467 879 457 890 q 477 844 477 869 l 477 98 l 694 98 z "},"ľ":{"ha":833,"x_min":100,"x_max":765,"o":"m 674 98 q 707 86 697 98 q 717 49 717 75 q 707 11 717 22 q 674 0 697 0 l 142 0 q 110 11 119 0 q 100 49 100 22 q 110 86 100 75 q 142 98 119 98 l 355 98 l 355 792 l 170 792 q 137 803 146 792 q 127 841 127 814 q 137 879 127 867 q 170 890 146 890 l 414 890 q 447 879 437 890 q 456 844 456 869 l 456 98 l 674 98 m 747 890 q 760 885 755 890 q 765 871 765 880 q 762 855 765 865 l 671 609 q 621 585 662 585 q 591 592 602 585 q 581 613 581 600 q 583 623 581 616 l 638 868 q 667 890 644 890 l 747 890 z "},"ļ":{"ha":833,"x_min":120,"x_max":737,"o":"m 694 98 q 727 86 718 98 q 737 49 737 75 q 727 11 737 22 q 694 0 718 0 l 163 0 q 130 11 140 0 q 120 49 120 22 q 130 86 120 75 q 163 98 140 98 l 375 98 l 375 792 l 190 792 q 157 803 167 792 q 147 841 147 814 q 157 879 147 867 q 190 890 167 890 l 434 890 q 467 879 457 890 q 477 844 477 869 l 477 98 l 694 98 m 469 -99 q 488 -117 488 -99 q 484 -134 488 -125 l 405 -331 q 365 -357 395 -357 q 353 -356 357 -357 q 318 -326 318 -351 q 319 -315 318 -323 l 362 -121 q 391 -99 368 -99 l 469 -99 z "},"ŀ":{"ha":833,"x_min":100,"x_max":725,"o":"m 674 98 q 707 86 697 98 q 717 49 717 75 q 707 11 717 22 q 674 0 697 0 l 142 0 q 110 11 119 0 q 100 49 100 22 q 110 86 100 75 q 142 98 119 98 l 355 98 l 355 792 l 170 792 q 137 803 146 792 q 127 841 127 814 q 137 879 127 867 q 170 890 146 890 l 414 890 q 447 879 437 890 q 456 844 456 869 l 456 98 l 674 98 m 661 585 q 711 575 698 585 q 725 541 725 566 l 725 453 q 711 419 725 429 q 661 409 698 409 q 610 419 623 409 q 596 453 596 429 l 596 541 q 610 575 596 566 q 661 585 623 585 z "},"ł":{"ha":833,"x_min":120,"x_max":737,"o":"m 694 98 q 727 86 718 98 q 737 49 737 75 q 727 11 737 22 q 694 0 718 0 l 163 0 q 130 11 140 0 q 120 49 120 22 q 130 86 120 75 q 163 98 140 98 l 375 98 l 375 378 l 256 297 q 229 286 240 286 q 195 311 212 286 q 182 342 182 330 q 204 373 182 359 l 375 489 l 375 792 l 190 792 q 157 803 167 792 q 147 841 147 814 q 157 879 147 867 q 190 890 167 890 l 434 890 q 467 879 457 890 q 477 844 477 869 l 477 558 l 590 635 q 617 646 606 646 q 652 621 635 646 q 664 591 664 603 q 642 559 664 574 l 477 447 l 477 98 l 694 98 z "},"m":{"ha":833,"x_min":82,"x_max":752,"o":"m 612 642 q 683 622 652 642 q 733 561 715 602 q 752 460 752 519 l 752 37 q 741 3 752 14 q 702 -7 730 -7 l 701 -7 q 662 3 673 -7 q 650 37 650 14 l 650 448 q 635 518 650 494 q 586 541 620 541 q 527 512 554 541 q 484 430 500 482 q 468 310 468 377 l 468 37 q 457 3 468 14 q 418 -7 446 -7 l 416 -7 q 377 3 389 -7 q 366 37 366 14 l 366 448 q 351 518 366 494 q 302 541 336 541 q 243 512 270 541 q 200 430 216 482 q 184 310 184 377 l 184 37 q 173 3 184 14 q 134 -7 161 -7 l 132 -7 q 93 3 104 -7 q 82 37 82 14 l 82 589 q 91 623 82 613 q 125 633 100 633 l 127 633 q 161 623 152 633 q 170 589 170 613 l 170 513 q 240 609 199 577 q 328 642 281 642 q 409 610 374 642 q 456 519 444 579 q 612 642 516 642 z "},"n":{"ha":833,"x_min":137,"x_max":708,"o":"m 493 642 q 652 583 595 642 q 708 420 708 524 l 708 37 q 697 3 708 14 q 658 -7 686 -7 l 656 -7 q 617 3 629 -7 q 606 37 606 14 l 606 410 q 576 506 606 471 q 483 541 546 541 q 368 504 425 541 q 275 404 311 467 q 239 266 239 340 l 239 37 q 228 3 239 14 q 189 -7 216 -7 l 187 -7 q 148 3 159 -7 q 137 37 137 14 l 137 589 q 147 623 137 613 q 184 633 157 633 l 185 633 q 222 623 212 633 q 232 589 232 613 l 232 479 q 349 596 278 550 q 493 642 420 642 z "},"ń":{"ha":833,"x_min":137,"x_max":708,"o":"m 528 951 q 553 960 541 960 q 599 932 576 960 q 619 886 619 905 q 604 859 619 868 l 351 711 q 329 704 338 704 q 298 721 313 704 q 281 756 281 739 q 292 777 281 769 l 528 951 m 493 642 q 652 583 595 642 q 708 420 708 524 l 708 37 q 697 3 708 14 q 658 -7 686 -7 l 656 -7 q 617 3 629 -7 q 606 37 606 14 l 606 410 q 576 506 606 471 q 483 541 546 541 q 368 504 425 541 q 275 404 311 467 q 239 266 239 340 l 239 37 q 228 3 239 14 q 189 -7 216 -7 l 187 -7 q 148 3 159 -7 q 137 37 137 14 l 137 589 q 147 623 137 613 q 184 633 157 633 l 185 633 q 222 623 212 633 q 232 589 232 613 l 232 479 q 349 596 278 550 q 493 642 420 642 z "},"ň":{"ha":833,"x_min":137,"x_max":708,"o":"m 423 706 q 384 720 399 706 l 218 878 q 207 900 207 888 q 222 932 207 914 q 252 948 237 948 q 273 940 263 948 l 423 823 l 573 940 q 594 948 583 948 q 624 932 610 948 q 640 900 640 914 q 629 878 640 888 l 463 720 q 423 706 448 706 m 493 642 q 652 583 595 642 q 708 420 708 524 l 708 37 q 697 3 708 14 q 658 -7 686 -7 l 656 -7 q 617 3 629 -7 q 606 37 606 14 l 606 410 q 576 506 606 471 q 483 541 546 541 q 368 504 425 541 q 275 404 311 467 q 239 266 239 340 l 239 37 q 228 3 239 14 q 189 -7 216 -7 l 187 -7 q 148 3 159 -7 q 137 37 137 14 l 137 589 q 147 623 137 613 q 184 633 157 633 l 185 633 q 222 623 212 633 q 232 589 232 613 l 232 479 q 349 596 278 550 q 493 642 420 642 z "},"ņ":{"ha":833,"x_min":137,"x_max":708,"o":"m 493 642 q 652 583 595 642 q 708 420 708 524 l 708 37 q 697 3 708 14 q 658 -7 686 -7 l 656 -7 q 617 3 629 -7 q 606 37 606 14 l 606 410 q 576 506 606 471 q 483 541 546 541 q 368 504 425 541 q 275 404 311 467 q 239 266 239 340 l 239 37 q 228 3 239 14 q 189 -7 216 -7 l 187 -7 q 148 3 159 -7 q 137 37 137 14 l 137 589 q 147 623 137 613 q 184 633 157 633 l 185 633 q 222 623 212 633 q 232 589 232 613 l 232 479 q 349 596 278 550 q 493 642 420 642 m 467 -99 q 486 -117 486 -99 q 481 -134 486 -125 l 402 -331 q 362 -357 392 -357 q 351 -356 355 -357 q 315 -326 315 -351 q 317 -315 315 -323 l 359 -121 q 388 -99 365 -99 l 467 -99 z "},"ŋ":{"ha":833,"x_min":137,"x_max":708,"o":"m 493 642 q 652 583 595 642 q 708 420 708 524 l 708 -92 q 660 -230 708 -182 q 523 -278 612 -278 q 443 -269 484 -278 q 366 -244 402 -260 q 340 -209 340 -233 q 347 -180 340 -198 q 385 -148 361 -148 q 404 -152 395 -148 q 524 -179 469 -179 q 586 -154 566 -179 q 606 -73 606 -129 l 606 410 q 576 506 606 471 q 483 541 546 541 q 368 504 425 541 q 275 404 311 467 q 239 266 239 340 l 239 37 q 228 3 239 14 q 189 -7 216 -7 l 187 -7 q 148 3 159 -7 q 137 37 137 14 l 137 589 q 147 623 137 613 q 184 633 157 633 l 185 633 q 222 623 212 633 q 232 589 232 613 l 232 479 q 349 596 278 550 q 493 642 420 642 z "},"ñ":{"ha":833,"x_min":137,"x_max":708,"o":"m 342 892 q 385 885 366 892 q 431 867 404 879 q 471 850 455 855 q 505 844 488 844 q 548 856 527 844 q 591 890 568 867 q 610 899 599 899 q 642 882 627 899 q 656 851 656 867 q 647 827 656 838 q 577 764 614 785 q 505 743 541 743 q 461 750 481 743 q 415 768 442 756 q 375 785 391 780 q 341 791 359 791 q 299 779 319 791 q 256 745 278 768 q 236 736 248 736 q 204 753 219 736 q 190 784 190 768 q 199 808 190 797 q 269 871 232 850 q 342 892 306 892 m 493 642 q 652 583 595 642 q 708 420 708 524 l 708 37 q 697 3 708 14 q 658 -7 686 -7 l 656 -7 q 617 3 629 -7 q 606 37 606 14 l 606 410 q 576 506 606 471 q 483 541 546 541 q 368 504 425 541 q 275 404 311 467 q 239 266 239 340 l 239 37 q 228 3 239 14 q 189 -7 216 -7 l 187 -7 q 148 3 159 -7 q 137 37 137 14 l 137 589 q 147 623 137 613 q 184 633 157 633 l 185 633 q 222 623 212 633 q 232 589 232 613 l 232 479 q 349 596 278 550 q 493 642 420 642 z "},"o":{"ha":833,"x_min":91,"x_max":742,"o":"m 416 642 q 583 600 509 642 q 700 483 657 557 q 742 313 742 408 q 700 144 742 219 q 583 27 657 69 q 416 -15 509 -15 q 250 27 324 -15 q 133 144 176 69 q 91 313 91 219 q 133 483 91 408 q 250 600 176 557 q 416 642 324 642 m 416 541 q 300 512 351 541 q 223 432 250 484 q 195 313 195 380 q 223 195 195 247 q 300 114 250 143 q 416 85 351 85 q 532 114 482 85 q 610 195 583 143 q 637 313 637 247 q 610 432 637 380 q 532 512 583 484 q 416 541 482 541 z "},"ó":{"ha":833,"x_min":91,"x_max":742,"o":"m 515 951 q 540 960 527 960 q 585 932 563 960 q 606 886 606 905 q 591 859 606 868 l 337 711 q 315 704 325 704 q 284 721 299 704 q 268 756 268 739 q 279 777 268 769 l 515 951 m 416 642 q 583 600 509 642 q 700 483 657 557 q 742 313 742 408 q 700 144 742 219 q 583 27 657 69 q 416 -15 509 -15 q 250 27 324 -15 q 133 144 176 69 q 91 313 91 219 q 133 483 91 408 q 250 600 176 557 q 416 642 324 642 m 416 541 q 300 512 351 541 q 223 432 250 484 q 195 313 195 380 q 223 195 195 247 q 300 114 250 143 q 416 85 351 85 q 532 114 482 85 q 610 195 583 143 q 637 313 637 247 q 610 432 637 380 q 532 512 583 484 q 416 541 482 541 z "},"ŏ":{"ha":833,"x_min":91,"x_max":742,"o":"m 602 928 q 630 917 621 924 q 639 896 639 909 q 638 887 639 890 q 566 768 623 810 q 416 726 509 726 q 267 768 323 726 q 195 887 210 810 q 194 896 194 890 q 203 917 194 909 q 231 928 212 924 q 250 930 241 930 q 279 914 273 930 q 328 843 294 866 q 416 820 362 820 q 505 843 471 820 q 554 914 539 866 q 583 930 560 930 q 602 928 592 930 m 416 642 q 583 600 509 642 q 700 483 657 557 q 742 313 742 408 q 700 144 742 219 q 583 27 657 69 q 416 -15 509 -15 q 250 27 324 -15 q 133 144 176 69 q 91 313 91 219 q 133 483 91 408 q 250 600 176 557 q 416 642 324 642 m 416 541 q 300 512 351 541 q 223 432 250 484 q 195 313 195 380 q 223 195 195 247 q 300 114 250 143 q 416 85 351 85 q 532 114 482 85 q 610 195 583 143 q 637 313 637 247 q 610 432 637 380 q 532 512 583 484 q 416 541 482 541 z "},"ô":{"ha":833,"x_min":91,"x_max":742,"o":"m 416 947 q 456 933 441 947 l 622 775 q 633 753 633 765 q 617 721 633 739 q 587 705 603 705 q 566 713 576 705 l 416 830 l 267 713 q 245 705 256 705 q 216 721 230 705 q 200 753 200 739 q 211 775 200 765 l 377 933 q 416 947 392 947 m 416 642 q 583 600 509 642 q 700 483 657 557 q 742 313 742 408 q 700 144 742 219 q 583 27 657 69 q 416 -15 509 -15 q 250 27 324 -15 q 133 144 176 69 q 91 313 91 219 q 133 483 91 408 q 250 600 176 557 q 416 642 324 642 m 416 541 q 300 512 351 541 q 223 432 250 484 q 195 313 195 380 q 223 195 195 247 q 300 114 250 143 q 416 85 351 85 q 532 114 482 85 q 610 195 583 143 q 637 313 637 247 q 610 432 637 380 q 532 512 583 484 q 416 541 482 541 z "},"ö":{"ha":833,"x_min":91,"x_max":742,"o":"m 274 924 q 325 915 311 924 q 338 880 338 905 l 338 792 q 325 758 338 768 q 274 748 311 748 q 223 758 237 748 q 210 792 210 768 l 210 880 q 223 915 210 905 q 274 924 237 924 m 559 924 q 610 915 596 924 q 623 880 623 905 l 623 792 q 610 758 623 768 q 559 748 596 748 q 508 758 522 748 q 494 792 494 768 l 494 880 q 508 915 494 905 q 559 924 522 924 m 416 642 q 583 600 509 642 q 700 483 657 557 q 742 313 742 408 q 700 144 742 219 q 583 27 657 69 q 416 -15 509 -15 q 250 27 324 -15 q 133 144 176 69 q 91 313 91 219 q 133 483 91 408 q 250 600 176 557 q 416 642 324 642 m 416 541 q 300 512 351 541 q 223 432 250 484 q 195 313 195 380 q 223 195 195 247 q 300 114 250 143 q 416 85 351 85 q 532 114 482 85 q 610 195 583 143 q 637 313 637 247 q 610 432 637 380 q 532 512 583 484 q 416 541 482 541 z "},"ò":{"ha":833,"x_min":91,"x_max":742,"o":"m 554 777 q 565 756 565 769 q 549 721 565 739 q 517 704 534 704 q 496 711 508 704 l 242 859 q 227 886 227 868 q 248 932 227 905 q 293 960 270 960 q 318 951 306 960 l 554 777 m 416 642 q 583 600 509 642 q 700 483 657 557 q 742 313 742 408 q 700 144 742 219 q 583 27 657 69 q 416 -15 509 -15 q 250 27 324 -15 q 133 144 176 69 q 91 313 91 219 q 133 483 91 408 q 250 600 176 557 q 416 642 324 642 m 416 541 q 300 512 351 541 q 223 432 250 484 q 195 313 195 380 q 223 195 195 247 q 300 114 250 143 q 416 85 351 85 q 532 114 482 85 q 610 195 583 143 q 637 313 637 247 q 610 432 637 380 q 532 512 583 484 q 416 541 482 541 z "},"ő":{"ha":833,"x_min":91,"x_max":748,"o":"m 460 935 q 490 897 490 916 q 477 872 490 884 l 294 714 q 269 705 283 705 q 235 716 254 705 q 215 744 215 729 q 222 760 215 753 l 382 931 q 420 948 398 948 q 460 935 439 948 m 718 935 q 748 897 748 916 q 735 872 748 884 l 552 714 q 527 705 541 705 q 493 716 512 705 q 473 744 473 729 q 479 760 473 753 l 640 931 q 677 948 656 948 q 718 935 696 948 m 416 642 q 583 600 509 642 q 700 483 657 557 q 742 313 742 408 q 700 144 742 219 q 583 27 657 69 q 416 -15 509 -15 q 250 27 324 -15 q 133 144 176 69 q 91 313 91 219 q 133 483 91 408 q 250 600 176 557 q 416 642 324 642 m 416 541 q 300 512 351 541 q 223 432 250 484 q 195 313 195 380 q 223 195 195 247 q 300 114 250 143 q 416 85 351 85 q 532 114 482 85 q 610 195 583 143 q 637 313 637 247 q 610 432 637 380 q 532 512 583 484 q 416 541 482 541 z "},"ō":{"ha":833,"x_min":91,"x_max":742,"o":"m 593 848 q 626 837 616 848 q 636 799 636 825 q 626 761 636 772 q 593 750 616 750 l 239 750 q 207 761 216 750 q 197 799 197 772 q 207 837 197 825 q 239 848 216 848 l 593 848 m 416 642 q 583 600 509 642 q 700 483 657 557 q 742 313 742 408 q 700 144 742 219 q 583 27 657 69 q 416 -15 509 -15 q 250 27 324 -15 q 133 144 176 69 q 91 313 91 219 q 133 483 91 408 q 250 600 176 557 q 416 642 324 642 m 416 541 q 300 512 351 541 q 223 432 250 484 q 195 313 195 380 q 223 195 195 247 q 300 114 250 143 q 416 85 351 85 q 532 114 482 85 q 610 195 583 143 q 637 313 637 247 q 610 432 637 380 q 532 512 583 484 q 416 541 482 541 z "},"ø":{"ha":833,"x_min":57,"x_max":776,"o":"m 758 643 q 776 609 776 624 q 759 578 776 594 l 685 507 q 727 417 712 466 q 742 313 742 368 q 700 144 742 219 q 583 27 657 69 q 416 -15 509 -15 q 307 2 358 -15 q 213 52 255 20 l 139 -20 q 109 -35 122 -35 q 75 -16 94 -35 q 57 18 57 3 q 73 48 57 32 l 148 120 q 106 210 121 161 q 91 313 91 259 q 133 483 91 408 q 250 600 176 557 q 416 642 324 642 q 526 624 475 642 q 620 575 578 607 l 693 646 q 724 662 710 662 q 758 643 739 662 m 195 313 q 224 193 195 246 l 545 504 q 416 541 491 541 q 300 512 351 541 q 223 432 250 484 q 195 313 195 380 m 637 313 q 609 433 637 380 l 287 123 q 416 85 342 85 q 532 114 482 85 q 610 195 583 143 q 637 313 637 247 z "},"õ":{"ha":833,"x_min":91,"x_max":742,"o":"m 335 892 q 378 885 359 892 q 425 867 397 879 q 465 850 448 855 q 498 844 481 844 q 541 856 520 844 q 584 890 562 867 q 604 899 592 899 q 635 882 621 899 q 650 851 650 867 q 640 827 650 838 q 571 764 608 785 q 498 743 534 743 q 455 750 474 743 q 408 768 435 756 q 368 785 385 780 q 334 791 352 791 q 292 779 313 791 q 249 745 271 768 q 229 736 241 736 q 197 753 212 736 q 183 784 183 768 q 193 808 183 797 q 262 871 225 850 q 335 892 299 892 m 416 642 q 583 600 509 642 q 700 483 657 557 q 742 313 742 408 q 700 144 742 219 q 583 27 657 69 q 416 -15 509 -15 q 250 27 324 -15 q 133 144 176 69 q 91 313 91 219 q 133 483 91 408 q 250 600 176 557 q 416 642 324 642 m 416 541 q 300 512 351 541 q 223 432 250 484 q 195 313 195 380 q 223 195 195 247 q 300 114 250 143 q 416 85 351 85 q 532 114 482 85 q 610 195 583 143 q 637 313 637 247 q 610 432 637 380 q 532 512 583 484 q 416 541 482 541 z "},"œ":{"ha":833,"x_min":47,"x_max":781,"o":"m 578 642 q 729 563 682 642 q 781 340 777 484 q 771 308 781 318 q 738 298 761 298 l 467 298 q 578 83 471 83 q 638 96 611 83 q 694 136 665 109 q 720 148 705 148 q 758 127 741 148 q 772 93 772 110 q 754 57 772 74 q 672 3 717 22 q 578 -15 627 -15 q 484 8 526 -15 q 416 79 443 32 q 259 -15 365 -15 q 101 70 155 -15 q 47 313 47 155 q 101 556 47 471 q 259 642 155 642 q 416 547 365 642 q 484 618 443 594 q 578 642 526 642 m 580 543 q 505 508 532 543 q 471 393 479 473 l 674 393 q 647 505 669 467 q 580 543 625 543 m 259 541 q 180 487 205 541 q 155 313 155 432 q 180 140 155 195 q 259 85 205 85 q 338 140 313 85 q 363 313 363 195 q 338 487 363 432 q 259 541 313 541 z "},"p":{"ha":833,"x_min":130,"x_max":739,"o":"m 447 642 q 597 602 531 642 q 701 488 663 562 q 739 313 739 414 q 701 139 739 213 q 597 25 663 64 q 447 -15 531 -15 q 232 97 319 -15 l 232 -226 q 221 -260 232 -250 q 182 -270 210 -270 l 180 -270 q 141 -260 153 -270 q 130 -226 130 -250 l 130 589 q 140 623 130 613 q 177 633 151 633 l 178 633 q 215 623 205 633 q 225 589 225 613 l 225 526 q 324 612 268 582 q 447 642 380 642 m 440 541 q 333 514 380 541 q 259 435 286 487 q 232 313 232 384 q 259 191 232 243 q 333 113 286 140 q 440 85 380 85 q 544 114 500 85 q 611 195 588 143 q 634 313 634 247 q 611 432 634 380 q 544 512 588 484 q 440 541 500 541 z "},"þ":{"ha":833,"x_min":130,"x_max":739,"o":"m 182 897 q 221 886 210 897 q 232 852 232 876 l 232 534 q 329 613 274 585 q 447 642 383 642 q 597 602 531 642 q 701 488 663 562 q 739 313 739 414 q 701 139 739 213 q 597 25 663 64 q 447 -15 531 -15 q 232 97 319 -15 l 232 -226 q 221 -260 232 -250 q 182 -270 210 -270 l 180 -270 q 141 -260 153 -270 q 130 -226 130 -250 l 130 852 q 141 886 130 876 q 180 897 153 897 l 182 897 m 440 541 q 333 514 380 541 q 259 435 286 487 q 232 313 232 384 q 259 191 232 243 q 333 113 286 140 q 440 85 380 85 q 544 114 500 85 q 611 195 588 143 q 634 313 634 247 q 611 432 634 380 q 544 512 588 484 q 440 541 500 541 z "},"q":{"ha":833,"x_min":94,"x_max":703,"o":"m 386 642 q 509 612 452 642 q 608 526 565 582 l 608 589 q 618 623 608 613 q 654 633 628 633 l 656 633 q 692 623 682 633 q 703 589 703 613 l 703 -226 q 691 -260 703 -250 q 652 -270 680 -270 l 651 -270 q 612 -260 623 -270 q 601 -226 601 -250 l 601 97 q 386 -15 513 -15 q 236 25 302 -15 q 132 139 170 64 q 94 313 94 213 q 132 488 94 414 q 236 602 170 562 q 386 642 302 642 m 393 541 q 289 512 332 541 q 222 432 245 484 q 199 313 199 380 q 222 195 199 247 q 289 114 245 143 q 393 85 332 85 q 500 113 453 85 q 574 191 547 140 q 601 313 601 243 q 574 435 601 384 q 500 514 547 487 q 393 541 453 541 z "},"r":{"ha":833,"x_min":208,"x_max":736,"o":"m 614 642 q 703 627 658 642 q 736 584 736 616 q 733 563 736 573 q 719 529 727 541 q 697 518 710 518 q 682 521 690 518 q 608 533 644 533 q 461 486 530 533 q 351 358 393 438 q 310 183 310 277 l 310 37 q 299 3 310 14 q 260 -7 288 -7 l 258 -7 q 219 3 231 -7 q 208 37 208 14 l 208 589 q 218 623 208 613 q 255 633 229 633 l 256 633 q 293 623 283 633 q 303 589 303 613 l 303 430 q 443 586 362 530 q 614 642 524 642 z "},"ŕ":{"ha":833,"x_min":208,"x_max":736,"o":"m 584 951 q 609 960 596 960 q 654 932 632 960 q 675 886 675 905 q 660 859 675 868 l 406 711 q 385 704 394 704 q 353 721 368 704 q 337 756 337 739 q 348 777 337 769 l 584 951 m 614 642 q 703 627 658 642 q 736 584 736 616 q 733 563 736 573 q 719 529 727 541 q 697 518 710 518 q 682 521 690 518 q 608 533 644 533 q 461 486 530 533 q 351 358 393 438 q 310 183 310 277 l 310 37 q 299 3 310 14 q 260 -7 288 -7 l 258 -7 q 219 3 231 -7 q 208 37 208 14 l 208 589 q 218 623 208 613 q 255 633 229 633 l 256 633 q 293 623 283 633 q 303 589 303 613 l 303 430 q 443 586 362 530 q 614 642 524 642 z "},"ř":{"ha":833,"x_min":208,"x_max":736,"o":"m 464 706 q 425 720 439 706 l 258 878 q 248 900 248 888 q 263 932 248 914 q 293 948 277 948 q 314 940 304 948 l 464 823 l 614 940 q 635 948 624 948 q 665 932 650 948 q 680 900 680 914 q 669 878 680 888 l 503 720 q 464 706 488 706 m 614 642 q 703 627 658 642 q 736 584 736 616 q 733 563 736 573 q 719 529 727 541 q 697 518 710 518 q 682 521 690 518 q 608 533 644 533 q 461 486 530 533 q 351 358 393 438 q 310 183 310 277 l 310 37 q 299 3 310 14 q 260 -7 288 -7 l 258 -7 q 219 3 231 -7 q 208 37 208 14 l 208 589 q 218 623 208 613 q 255 633 229 633 l 256 633 q 293 623 283 633 q 303 589 303 613 l 303 430 q 443 586 362 530 q 614 642 524 642 z "},"ŗ":{"ha":833,"x_min":208,"x_max":736,"o":"m 614 642 q 703 627 658 642 q 736 584 736 616 q 733 563 736 573 q 719 529 727 541 q 697 518 710 518 q 682 521 690 518 q 608 533 644 533 q 461 486 530 533 q 351 358 393 438 q 310 183 310 277 l 310 37 q 299 3 310 14 q 260 -7 288 -7 l 258 -7 q 219 3 231 -7 q 208 37 208 14 l 208 589 q 218 623 208 613 q 255 633 229 633 l 256 633 q 293 623 283 633 q 303 589 303 613 l 303 430 q 443 586 362 530 q 614 642 524 642 m 399 -99 q 418 -117 418 -99 q 414 -134 418 -125 l 334 -331 q 294 -357 324 -357 q 283 -356 287 -357 q 248 -326 248 -351 q 249 -315 248 -323 l 292 -121 q 320 -99 297 -99 l 399 -99 z "},"s":{"ha":833,"x_min":121,"x_max":711,"o":"m 444 -15 q 147 53 271 -15 q 121 92 121 68 q 129 121 121 104 q 165 153 145 153 q 186 147 176 153 q 306 100 242 116 q 437 83 370 83 q 563 112 520 83 q 606 188 606 140 q 592 225 606 211 q 551 249 578 240 q 497 261 528 256 q 417 270 466 265 q 309 283 351 276 q 231 304 267 290 q 156 357 182 323 q 129 448 129 392 q 162 554 129 510 q 252 620 195 597 q 382 642 309 642 q 655 583 538 642 q 682 544 682 569 q 675 515 682 530 q 639 481 660 481 q 618 487 632 481 q 387 543 508 543 q 274 519 315 543 q 233 448 233 494 q 247 413 233 427 q 286 392 260 400 q 336 381 308 385 q 414 372 363 377 q 520 360 477 367 q 600 340 563 354 q 681 284 652 321 q 711 188 711 248 q 680 81 711 127 q 590 10 650 35 q 444 -15 530 -15 z "},"ś":{"ha":833,"x_min":121,"x_max":711,"o":"m 515 951 q 540 960 527 960 q 585 932 563 960 q 606 886 606 905 q 591 859 606 868 l 337 711 q 315 704 325 704 q 284 721 299 704 q 268 756 268 739 q 279 777 268 769 l 515 951 m 444 -15 q 147 53 271 -15 q 121 92 121 68 q 129 121 121 104 q 165 153 145 153 q 186 147 176 153 q 306 100 242 116 q 437 83 370 83 q 563 112 520 83 q 606 188 606 140 q 592 225 606 211 q 551 249 578 240 q 497 261 528 256 q 417 270 466 265 q 309 283 351 276 q 231 304 267 290 q 156 357 182 323 q 129 448 129 392 q 162 554 129 510 q 252 620 195 597 q 382 642 309 642 q 655 583 538 642 q 682 544 682 569 q 675 515 682 530 q 639 481 660 481 q 618 487 632 481 q 387 543 508 543 q 274 519 315 543 q 233 448 233 494 q 247 413 233 427 q 286 392 260 400 q 336 381 308 385 q 414 372 363 377 q 520 360 477 367 q 600 340 563 354 q 681 284 652 321 q 711 188 711 248 q 680 81 711 127 q 590 10 650 35 q 444 -15 530 -15 z "},"š":{"ha":833,"x_min":121,"x_max":711,"o":"m 416 706 q 377 720 392 706 l 211 878 q 200 900 200 888 q 216 932 200 914 q 245 948 230 948 q 267 940 256 948 l 416 823 l 566 940 q 587 948 576 948 q 617 932 603 948 q 633 900 633 914 q 622 878 633 888 l 456 720 q 416 706 441 706 m 444 -15 q 147 53 271 -15 q 121 92 121 68 q 129 121 121 104 q 165 153 145 153 q 186 147 176 153 q 306 100 242 116 q 437 83 370 83 q 563 112 520 83 q 606 188 606 140 q 592 225 606 211 q 551 249 578 240 q 497 261 528 256 q 417 270 466 265 q 309 283 351 276 q 231 304 267 290 q 156 357 182 323 q 129 448 129 392 q 162 554 129 510 q 252 620 195 597 q 382 642 309 642 q 655 583 538 642 q 682 544 682 569 q 675 515 682 530 q 639 481 660 481 q 618 487 632 481 q 387 543 508 543 q 274 519 315 543 q 233 448 233 494 q 247 413 233 427 q 286 392 260 400 q 336 381 308 385 q 414 372 363 377 q 520 360 477 367 q 600 340 563 354 q 681 284 652 321 q 711 188 711 248 q 680 81 711 127 q 590 10 650 35 q 444 -15 530 -15 z "},"ş":{"ha":833,"x_min":121,"x_max":711,"o":"m 711 188 q 683 84 711 129 q 599 14 654 40 q 463 -14 543 -12 l 463 -77 q 566 -108 532 -76 q 601 -191 601 -140 q 559 -285 601 -250 q 435 -320 517 -320 q 345 -312 389 -320 q 267 -288 302 -304 q 252 -264 252 -281 q 257 -240 252 -254 q 288 -210 269 -210 q 297 -211 294 -210 q 361 -229 326 -222 q 428 -237 396 -237 q 482 -225 463 -237 q 502 -193 502 -214 q 484 -160 502 -171 q 423 -149 465 -149 l 397 -150 q 380 -143 387 -150 q 374 -120 374 -136 l 374 -12 q 147 53 244 -1 q 121 92 121 68 q 129 121 121 104 q 165 153 145 153 q 186 147 176 153 q 306 100 242 116 q 437 83 370 83 q 563 112 520 83 q 606 188 606 140 q 592 225 606 211 q 551 249 578 240 q 497 261 528 256 q 417 270 466 265 q 309 283 351 276 q 231 304 267 290 q 156 357 182 323 q 129 448 129 392 q 162 554 129 510 q 252 620 195 597 q 382 642 309 642 q 655 583 538 642 q 682 544 682 569 q 675 515 682 530 q 639 481 660 481 q 618 487 632 481 q 387 543 508 543 q 274 519 315 543 q 233 448 233 494 q 247 413 233 427 q 286 392 260 400 q 336 381 308 385 q 414 372 363 377 q 520 360 477 367 q 600 340 563 354 q 681 284 652 321 q 711 188 711 248 z "},"ŝ":{"ha":833,"x_min":121,"x_max":711,"o":"m 416 947 q 456 933 441 947 l 622 775 q 633 753 633 765 q 617 721 633 739 q 587 705 603 705 q 566 713 576 705 l 416 830 l 267 713 q 245 705 256 705 q 216 721 230 705 q 200 753 200 739 q 211 775 200 765 l 377 933 q 416 947 392 947 m 444 -15 q 147 53 271 -15 q 121 92 121 68 q 129 121 121 104 q 165 153 145 153 q 186 147 176 153 q 306 100 242 116 q 437 83 370 83 q 563 112 520 83 q 606 188 606 140 q 592 225 606 211 q 551 249 578 240 q 497 261 528 256 q 417 270 466 265 q 309 283 351 276 q 231 304 267 290 q 156 357 182 323 q 129 448 129 392 q 162 554 129 510 q 252 620 195 597 q 382 642 309 642 q 655 583 538 642 q 682 544 682 569 q 675 515 682 530 q 639 481 660 481 q 618 487 632 481 q 387 543 508 543 q 274 519 315 543 q 233 448 233 494 q 247 413 233 427 q 286 392 260 400 q 336 381 308 385 q 414 372 363 377 q 520 360 477 367 q 600 340 563 354 q 681 284 652 321 q 711 188 711 248 q 680 81 711 127 q 590 10 650 35 q 444 -15 530 -15 z "},"ș":{"ha":833,"x_min":121,"x_max":711,"o":"m 444 -15 q 147 53 271 -15 q 121 92 121 68 q 129 121 121 104 q 165 153 145 153 q 186 147 176 153 q 306 100 242 116 q 437 83 370 83 q 563 112 520 83 q 606 188 606 140 q 592 225 606 211 q 551 249 578 240 q 497 261 528 256 q 417 270 466 265 q 309 283 351 276 q 231 304 267 290 q 156 357 182 323 q 129 448 129 392 q 162 554 129 510 q 252 620 195 597 q 382 642 309 642 q 655 583 538 642 q 682 544 682 569 q 675 515 682 530 q 639 481 660 481 q 618 487 632 481 q 387 543 508 543 q 274 519 315 543 q 233 448 233 494 q 247 413 233 427 q 286 392 260 400 q 336 381 308 385 q 414 372 363 377 q 520 360 477 367 q 600 340 563 354 q 681 284 652 321 q 711 188 711 248 q 680 81 711 127 q 590 10 650 35 q 444 -15 530 -15 m 460 -99 q 479 -117 479 -99 q 475 -134 479 -125 l 395 -331 q 355 -357 385 -357 q 344 -356 348 -357 q 309 -326 309 -351 q 310 -315 309 -323 l 353 -121 q 381 -99 358 -99 l 460 -99 z "},"ß":{"ha":833,"x_min":159,"x_max":703,"o":"m 411 893 q 551 862 493 893 q 637 779 608 831 q 666 659 666 726 q 635 551 666 597 q 549 476 605 505 q 663 388 622 448 q 703 244 703 328 q 669 105 703 164 q 574 16 635 47 q 430 -15 512 -15 q 385 -4 396 -15 q 374 37 374 7 q 384 74 374 62 q 417 85 394 85 q 551 127 503 85 q 599 245 599 168 q 552 374 599 328 q 425 420 505 420 q 392 431 402 420 q 382 467 382 442 q 392 502 382 491 q 425 515 402 513 q 527 559 492 522 q 562 659 562 597 q 522 757 562 722 q 408 793 482 793 q 300 750 338 793 q 261 632 261 707 l 261 37 q 250 3 261 14 q 211 -7 239 -7 l 210 -7 q 171 3 182 -7 q 159 37 159 14 l 159 640 q 190 771 159 714 q 277 861 220 829 q 411 893 334 893 z "},"t":{"ha":833,"x_min":79,"x_max":743,"o":"m 734 127 q 743 96 743 109 q 721 61 743 75 q 603 6 668 28 q 481 -15 538 -15 q 313 45 366 -15 q 260 224 260 105 l 260 475 l 122 475 q 89 486 99 475 q 79 524 79 497 q 89 561 79 550 q 122 572 99 572 l 260 572 l 260 776 q 271 810 260 800 q 311 820 283 820 q 350 810 338 820 q 361 776 361 800 l 361 572 l 640 572 q 673 561 663 572 q 683 524 683 550 q 673 486 683 497 q 640 475 663 475 l 361 475 l 361 233 q 389 120 361 156 q 481 84 416 84 q 577 102 527 84 q 674 151 627 121 q 695 158 684 158 q 734 127 718 158 z "},"ŧ":{"ha":833,"x_min":79,"x_max":743,"o":"m 734 127 q 743 96 743 109 q 721 61 743 75 q 603 6 668 28 q 481 -15 538 -15 q 313 45 366 -15 q 260 224 260 105 l 260 275 l 178 275 q 145 287 155 275 q 136 324 136 298 q 145 362 136 351 q 178 373 155 373 l 260 373 l 260 475 l 122 475 q 89 486 99 475 q 79 524 79 497 q 89 561 79 550 q 122 572 99 572 l 260 572 l 260 776 q 271 810 260 800 q 311 820 283 820 q 350 810 338 820 q 361 776 361 800 l 361 572 l 640 572 q 673 561 663 572 q 683 524 683 550 q 673 486 683 497 q 640 475 663 475 l 361 475 l 361 373 l 532 373 q 565 362 555 373 q 575 324 575 351 q 565 287 575 298 q 532 275 555 275 l 361 275 l 361 233 q 389 120 361 156 q 481 84 416 84 q 577 102 527 84 q 674 151 627 121 q 695 158 684 158 q 734 127 718 158 z "},"ť":{"ha":833,"x_min":79,"x_max":743,"o":"m 555 692 q 519 700 531 692 q 508 722 508 708 q 509 733 508 725 l 552 928 q 581 949 557 949 l 659 949 q 678 932 678 949 q 674 915 678 924 l 595 718 q 555 692 585 692 m 734 127 q 743 96 743 109 q 721 61 743 75 q 603 6 668 28 q 481 -15 538 -15 q 313 45 366 -15 q 260 224 260 105 l 260 475 l 122 475 q 89 486 99 475 q 79 524 79 497 q 89 561 79 550 q 122 572 99 572 l 260 572 l 260 776 q 271 810 260 800 q 311 820 283 820 q 350 810 338 820 q 361 776 361 800 l 361 572 l 640 572 q 673 561 663 572 q 683 524 683 550 q 673 486 683 497 q 640 475 663 475 l 361 475 l 361 233 q 389 120 361 156 q 481 84 416 84 q 577 102 527 84 q 674 151 627 121 q 695 158 684 158 q 734 127 718 158 z "},"ţ":{"ha":833,"x_min":79,"x_max":743,"o":"m 734 127 q 743 96 743 109 q 721 61 743 75 q 603 6 668 28 q 481 -15 538 -15 l 477 -15 l 477 -77 q 580 -108 545 -76 q 614 -191 614 -140 q 572 -285 614 -250 q 448 -320 530 -320 q 359 -312 402 -320 q 281 -288 315 -304 q 265 -264 265 -281 q 271 -240 265 -254 q 302 -210 282 -210 q 311 -211 307 -210 q 375 -229 340 -222 q 441 -237 410 -237 q 496 -225 476 -237 q 515 -193 515 -214 q 497 -160 515 -171 q 437 -149 479 -149 l 410 -150 q 394 -143 400 -150 q 387 -120 387 -136 l 387 -2 q 291 76 321 20 q 260 224 260 133 l 260 475 l 122 475 q 89 486 99 475 q 79 524 79 497 q 89 561 79 550 q 122 572 99 572 l 260 572 l 260 776 q 271 810 260 800 q 311 820 283 820 q 350 810 338 820 q 361 776 361 800 l 361 572 l 640 572 q 673 561 663 572 q 683 524 683 550 q 673 486 683 497 q 640 475 663 475 l 361 475 l 361 233 q 389 120 361 156 q 481 84 416 84 q 577 102 527 84 q 674 151 627 121 q 695 158 684 158 q 734 127 718 158 z "},"ț":{"ha":833,"x_min":79,"x_max":743,"o":"m 734 127 q 743 96 743 109 q 721 61 743 75 q 603 6 668 28 q 481 -15 538 -15 q 313 45 366 -15 q 260 224 260 105 l 260 475 l 122 475 q 89 486 99 475 q 79 524 79 497 q 89 561 79 550 q 122 572 99 572 l 260 572 l 260 776 q 271 810 260 800 q 311 820 283 820 q 350 810 338 820 q 361 776 361 800 l 361 572 l 640 572 q 673 561 663 572 q 683 524 683 550 q 673 486 683 497 q 640 475 663 475 l 361 475 l 361 233 q 389 120 361 156 q 481 84 416 84 q 577 102 527 84 q 674 151 627 121 q 695 158 684 158 q 734 127 718 158 m 503 -99 q 522 -117 522 -99 q 518 -134 522 -125 l 439 -331 q 399 -357 429 -357 q 387 -356 391 -357 q 352 -326 352 -351 q 353 -315 352 -323 l 396 -121 q 425 -99 401 -99 l 503 -99 z "},"u":{"ha":833,"x_min":125,"x_max":696,"o":"m 646 633 q 685 623 673 633 q 696 589 696 613 l 696 37 q 686 3 696 14 q 649 -7 675 -7 l 648 -7 q 611 3 621 -7 q 601 37 601 14 l 601 148 q 484 31 555 77 q 340 -15 412 -15 q 181 44 237 -15 q 125 206 125 103 l 125 589 q 136 623 125 613 q 175 633 147 633 l 176 633 q 215 623 204 633 q 227 589 227 613 l 227 216 q 257 120 227 155 q 350 85 287 85 q 465 122 408 85 q 558 223 522 159 q 594 361 594 286 l 594 589 q 605 623 594 613 q 644 633 616 633 l 646 633 z "},"ú":{"ha":833,"x_min":125,"x_max":696,"o":"m 528 951 q 553 960 541 960 q 599 932 576 960 q 619 886 619 905 q 604 859 619 868 l 351 711 q 329 704 338 704 q 298 721 313 704 q 281 756 281 739 q 292 777 281 769 l 528 951 m 646 633 q 685 623 673 633 q 696 589 696 613 l 696 37 q 686 3 696 14 q 649 -7 675 -7 l 648 -7 q 611 3 621 -7 q 601 37 601 14 l 601 148 q 484 31 555 77 q 340 -15 412 -15 q 181 44 237 -15 q 125 206 125 103 l 125 589 q 136 623 125 613 q 175 633 147 633 l 176 633 q 215 623 204 633 q 227 589 227 613 l 227 216 q 257 120 227 155 q 350 85 287 85 q 465 122 408 85 q 558 223 522 159 q 594 361 594 286 l 594 589 q 605 623 594 613 q 644 633 616 633 l 646 633 z "},"ŭ":{"ha":833,"x_min":125,"x_max":696,"o":"m 602 928 q 629 917 621 924 q 638 896 638 909 q 637 887 638 890 q 565 768 622 810 q 416 726 509 726 q 266 768 323 726 q 194 887 210 810 q 193 896 193 890 q 202 917 193 909 q 230 928 211 924 q 249 930 240 930 q 278 914 272 930 q 328 843 294 866 q 416 820 361 820 q 505 843 471 820 q 553 914 538 866 q 583 930 559 930 q 602 928 591 930 m 646 633 q 685 623 673 633 q 696 589 696 613 l 696 37 q 686 3 696 14 q 649 -7 675 -7 l 648 -7 q 611 3 621 -7 q 601 37 601 14 l 601 148 q 484 31 555 77 q 340 -15 412 -15 q 181 44 237 -15 q 125 206 125 103 l 125 589 q 136 623 125 613 q 175 633 147 633 l 176 633 q 215 623 204 633 q 227 589 227 613 l 227 216 q 257 120 227 155 q 350 85 287 85 q 465 122 408 85 q 558 223 522 159 q 594 361 594 286 l 594 589 q 605 623 594 613 q 644 633 616 633 l 646 633 z "},"û":{"ha":833,"x_min":125,"x_max":696,"o":"m 416 947 q 456 933 441 947 l 622 775 q 633 753 633 765 q 617 721 633 739 q 587 705 603 705 q 566 713 576 705 l 416 830 l 267 713 q 245 705 256 705 q 216 721 230 705 q 200 753 200 739 q 211 775 200 765 l 377 933 q 416 947 392 947 m 646 633 q 685 623 673 633 q 696 589 696 613 l 696 37 q 686 3 696 14 q 649 -7 675 -7 l 648 -7 q 611 3 621 -7 q 601 37 601 14 l 601 148 q 484 31 555 77 q 340 -15 412 -15 q 181 44 237 -15 q 125 206 125 103 l 125 589 q 136 623 125 613 q 175 633 147 633 l 176 633 q 215 623 204 633 q 227 589 227 613 l 227 216 q 257 120 227 155 q 350 85 287 85 q 465 122 408 85 q 558 223 522 159 q 594 361 594 286 l 594 589 q 605 623 594 613 q 644 633 616 633 l 646 633 z "},"ü":{"ha":833,"x_min":125,"x_max":696,"o":"m 274 924 q 325 915 311 924 q 338 880 338 905 l 338 792 q 325 758 338 768 q 274 748 311 748 q 223 758 237 748 q 210 792 210 768 l 210 880 q 223 915 210 905 q 274 924 237 924 m 559 924 q 610 915 596 924 q 623 880 623 905 l 623 792 q 610 758 623 768 q 559 748 596 748 q 508 758 522 748 q 494 792 494 768 l 494 880 q 508 915 494 905 q 559 924 522 924 m 646 633 q 685 623 673 633 q 696 589 696 613 l 696 37 q 686 3 696 14 q 649 -7 675 -7 l 648 -7 q 611 3 621 -7 q 601 37 601 14 l 601 148 q 484 31 555 77 q 340 -15 412 -15 q 181 44 237 -15 q 125 206 125 103 l 125 589 q 136 623 125 613 q 175 633 147 633 l 176 633 q 215 623 204 633 q 227 589 227 613 l 227 216 q 257 120 227 155 q 350 85 287 85 q 465 122 408 85 q 558 223 522 159 q 594 361 594 286 l 594 589 q 605 623 594 613 q 644 633 616 633 l 646 633 z "},"ù":{"ha":833,"x_min":125,"x_max":696,"o":"m 534 777 q 545 756 545 769 q 528 721 545 739 q 497 704 513 704 q 475 711 488 704 l 222 859 q 207 886 207 868 q 227 932 207 905 q 273 960 250 960 q 298 951 286 960 l 534 777 m 646 633 q 685 623 673 633 q 696 589 696 613 l 696 37 q 686 3 696 14 q 649 -7 675 -7 l 648 -7 q 611 3 621 -7 q 601 37 601 14 l 601 148 q 484 31 555 77 q 340 -15 412 -15 q 181 44 237 -15 q 125 206 125 103 l 125 589 q 136 623 125 613 q 175 633 147 633 l 176 633 q 215 623 204 633 q 227 589 227 613 l 227 216 q 257 120 227 155 q 350 85 287 85 q 465 122 408 85 q 558 223 522 159 q 594 361 594 286 l 594 589 q 605 623 594 613 q 644 633 616 633 l 646 633 z "},"ű":{"ha":833,"x_min":125,"x_max":734,"o":"m 446 935 q 477 897 477 916 q 464 872 477 884 l 281 714 q 256 705 269 705 q 222 716 241 705 q 201 744 201 729 q 208 760 201 753 l 369 931 q 406 948 385 948 q 446 935 425 948 m 704 935 q 734 897 734 916 q 722 872 734 884 l 538 714 q 513 705 527 705 q 479 716 498 705 q 459 744 459 729 q 466 760 459 753 l 627 931 q 664 948 642 948 q 704 935 683 948 m 646 633 q 685 623 673 633 q 696 589 696 613 l 696 37 q 686 3 696 14 q 649 -7 675 -7 l 648 -7 q 611 3 621 -7 q 601 37 601 14 l 601 148 q 484 31 555 77 q 340 -15 412 -15 q 181 44 237 -15 q 125 206 125 103 l 125 589 q 136 623 125 613 q 175 633 147 633 l 176 633 q 215 623 204 633 q 227 589 227 613 l 227 216 q 257 120 227 155 q 350 85 287 85 q 465 122 408 85 q 558 223 522 159 q 594 361 594 286 l 594 589 q 605 623 594 613 q 644 633 616 633 l 646 633 z "},"ū":{"ha":833,"x_min":127,"x_max":698,"o":"m 593 848 q 626 837 616 848 q 636 799 636 825 q 626 761 636 772 q 593 750 616 750 l 239 750 q 207 761 216 750 q 197 799 197 772 q 207 837 197 825 q 239 848 216 848 l 593 848 m 648 633 q 687 623 675 633 q 698 589 698 613 l 698 37 q 688 3 698 14 q 651 -7 677 -7 l 650 -7 q 613 3 623 -7 q 603 37 603 14 l 603 148 q 486 31 557 77 q 342 -15 414 -15 q 183 44 239 -15 q 127 206 127 103 l 127 589 q 138 623 127 613 q 177 633 149 633 l 178 633 q 217 623 206 633 q 229 589 229 613 l 229 216 q 259 120 229 155 q 352 85 289 85 q 467 122 410 85 q 560 223 524 159 q 596 361 596 286 l 596 589 q 607 623 596 613 q 646 633 618 633 l 648 633 z "},"ų":{"ha":833,"x_min":125,"x_max":733,"o":"m 646 633 q 685 623 673 633 q 696 589 696 613 l 696 37 q 684 2 696 13 q 596 -96 623 -54 q 569 -176 569 -139 q 583 -213 569 -200 q 621 -226 597 -226 q 698 -214 656 -226 q 705 -213 703 -213 q 732 -250 726 -213 q 733 -267 733 -262 q 727 -290 733 -281 q 710 -302 722 -298 q 599 -320 659 -320 q 499 -285 536 -320 q 463 -191 463 -250 q 601 26 463 -84 l 601 148 q 484 31 555 77 q 340 -15 412 -15 q 181 44 237 -15 q 125 206 125 103 l 125 589 q 136 623 125 613 q 175 633 147 633 l 176 633 q 215 623 204 633 q 227 589 227 613 l 227 216 q 257 120 227 155 q 350 85 287 85 q 465 122 408 85 q 558 223 522 159 q 594 361 594 286 l 594 589 q 605 623 594 613 q 644 633 616 633 l 646 633 z "},"ů":{"ha":833,"x_min":125,"x_max":696,"o":"m 414 1056 q 499 1034 461 1056 q 559 974 538 1013 q 581 889 581 936 q 559 804 581 842 q 499 744 538 766 q 414 722 461 722 q 329 744 368 722 q 269 804 291 766 q 248 889 248 842 q 269 974 248 936 q 329 1034 291 1013 q 414 1056 368 1056 m 414 966 q 358 945 379 966 q 337 889 337 924 q 358 833 337 854 q 414 812 379 812 q 471 833 450 812 q 492 889 492 854 q 471 945 492 924 q 414 966 450 966 m 646 633 q 685 623 673 633 q 696 589 696 613 l 696 37 q 686 3 696 14 q 649 -7 675 -7 l 648 -7 q 611 3 621 -7 q 601 37 601 14 l 601 148 q 484 31 555 77 q 340 -15 412 -15 q 181 44 237 -15 q 125 206 125 103 l 125 589 q 136 623 125 613 q 175 633 147 633 l 176 633 q 215 623 204 633 q 227 589 227 613 l 227 216 q 257 120 227 155 q 350 85 287 85 q 465 122 408 85 q 558 223 522 159 q 594 361 594 286 l 594 589 q 605 623 594 613 q 644 633 616 633 l 646 633 z "},"ũ":{"ha":833,"x_min":125,"x_max":696,"o":"m 335 892 q 378 885 359 892 q 425 867 397 879 q 465 850 448 855 q 498 844 481 844 q 541 856 520 844 q 584 890 562 867 q 604 899 592 899 q 635 882 621 899 q 650 851 650 867 q 640 827 650 838 q 571 764 608 785 q 498 743 534 743 q 455 750 474 743 q 408 768 435 756 q 368 785 385 780 q 334 791 352 791 q 292 779 313 791 q 249 745 271 768 q 229 736 241 736 q 197 753 212 736 q 183 784 183 768 q 193 808 183 797 q 262 871 225 850 q 335 892 299 892 m 646 633 q 685 623 673 633 q 696 589 696 613 l 696 37 q 686 3 696 14 q 649 -7 675 -7 l 648 -7 q 611 3 621 -7 q 601 37 601 14 l 601 148 q 484 31 555 77 q 340 -15 412 -15 q 181 44 237 -15 q 125 206 125 103 l 125 589 q 136 623 125 613 q 175 633 147 633 l 176 633 q 215 623 204 633 q 227 589 227 613 l 227 216 q 257 120 227 155 q 350 85 287 85 q 465 122 408 85 q 558 223 522 159 q 594 361 594 286 l 594 589 q 605 623 594 613 q 644 633 616 633 l 646 633 z "},"v":{"ha":833,"x_min":84,"x_max":749,"o":"m 713 627 q 740 610 731 619 q 749 589 749 601 q 743 565 749 578 l 496 27 q 468 -5 486 5 q 416 -15 450 -15 q 365 -5 383 -15 q 336 27 347 5 l 90 565 q 84 589 84 578 q 93 610 84 601 q 120 627 102 619 q 151 635 138 635 q 171 628 163 635 q 186 606 179 621 l 416 97 l 647 606 q 662 628 654 621 q 682 635 670 635 q 713 627 694 635 z "},"w":{"ha":833,"x_min":39,"x_max":793,"o":"m 753 631 q 784 618 774 627 q 793 595 793 610 q 791 576 793 586 l 656 29 q 638 -5 650 5 q 600 -15 626 -15 q 555 -4 571 -15 q 531 29 538 6 l 416 376 l 302 29 q 278 -4 294 6 q 233 -15 262 -15 q 195 -5 207 -15 q 177 29 183 5 l 42 576 q 39 595 39 586 q 49 618 39 610 q 80 631 58 627 q 102 633 92 633 q 126 625 118 633 q 139 599 135 617 l 247 142 l 366 504 q 416 536 376 536 q 467 504 456 536 l 586 142 l 694 599 q 706 625 698 617 q 730 633 715 633 q 753 631 741 633 z "},"ẃ":{"ha":833,"x_min":39,"x_max":793,"o":"m 543 951 q 568 960 555 960 q 614 932 591 960 q 634 886 634 905 q 619 859 634 868 l 366 711 q 344 704 353 704 q 313 721 328 704 q 296 756 296 739 q 307 777 296 769 l 543 951 m 753 631 q 784 618 774 627 q 793 595 793 610 q 791 576 793 586 l 656 29 q 638 -5 650 5 q 600 -15 626 -15 q 555 -4 571 -15 q 531 29 538 6 l 416 376 l 302 29 q 278 -4 294 6 q 233 -15 262 -15 q 195 -5 207 -15 q 177 29 183 5 l 42 576 q 39 595 39 586 q 49 618 39 610 q 80 631 58 627 q 102 633 92 633 q 126 625 118 633 q 139 599 135 617 l 247 142 l 366 504 q 416 536 376 536 q 467 504 456 536 l 586 142 l 694 599 q 706 625 698 617 q 730 633 715 633 q 753 631 741 633 z "},"ŵ":{"ha":833,"x_min":39,"x_max":793,"o":"m 416 947 q 456 933 441 947 l 622 775 q 633 753 633 765 q 617 721 633 739 q 587 705 603 705 q 566 713 576 705 l 416 830 l 267 713 q 245 705 256 705 q 216 721 230 705 q 200 753 200 739 q 211 775 200 765 l 377 933 q 416 947 392 947 m 753 631 q 784 618 774 627 q 793 595 793 610 q 791 576 793 586 l 656 29 q 638 -5 650 5 q 600 -15 626 -15 q 555 -4 571 -15 q 531 29 538 6 l 416 376 l 302 29 q 278 -4 294 6 q 233 -15 262 -15 q 195 -5 207 -15 q 177 29 183 5 l 42 576 q 39 595 39 586 q 49 618 39 610 q 80 631 58 627 q 102 633 92 633 q 126 625 118 633 q 139 599 135 617 l 247 142 l 366 504 q 416 536 376 536 q 467 504 456 536 l 586 142 l 694 599 q 706 625 698 617 q 730 633 715 633 q 753 631 741 633 z "},"ẅ":{"ha":833,"x_min":39,"x_max":793,"o":"m 274 924 q 325 915 311 924 q 338 880 338 905 l 338 792 q 325 758 338 768 q 274 748 311 748 q 223 758 237 748 q 210 792 210 768 l 210 880 q 223 915 210 905 q 274 924 237 924 m 559 924 q 610 915 596 924 q 623 880 623 905 l 623 792 q 610 758 623 768 q 559 748 596 748 q 508 758 522 748 q 494 792 494 768 l 494 880 q 508 915 494 905 q 559 924 522 924 m 753 631 q 784 618 774 627 q 793 595 793 610 q 791 576 793 586 l 656 29 q 638 -5 650 5 q 600 -15 626 -15 q 555 -4 571 -15 q 531 29 538 6 l 416 376 l 302 29 q 278 -4 294 6 q 233 -15 262 -15 q 195 -5 207 -15 q 177 29 183 5 l 42 576 q 39 595 39 586 q 49 618 39 610 q 80 631 58 627 q 102 633 92 633 q 126 625 118 633 q 139 599 135 617 l 247 142 l 366 504 q 416 536 376 536 q 467 504 456 536 l 586 142 l 694 599 q 706 625 698 617 q 730 633 715 633 q 753 631 741 633 z "},"ẁ":{"ha":833,"x_min":39,"x_max":793,"o":"m 526 777 q 536 756 536 769 q 520 721 536 739 q 489 704 505 704 q 467 711 479 704 l 214 859 q 199 886 199 868 q 219 932 199 905 q 264 960 241 960 q 290 951 277 960 l 526 777 m 753 631 q 784 618 774 627 q 793 595 793 610 q 791 576 793 586 l 656 29 q 638 -5 650 5 q 600 -15 626 -15 q 555 -4 571 -15 q 531 29 538 6 l 416 376 l 302 29 q 278 -4 294 6 q 233 -15 262 -15 q 195 -5 207 -15 q 177 29 183 5 l 42 576 q 39 595 39 586 q 49 618 39 610 q 80 631 58 627 q 102 633 92 633 q 126 625 118 633 q 139 599 135 617 l 247 142 l 366 504 q 416 536 376 536 q 467 504 456 536 l 586 142 l 694 599 q 706 625 698 617 q 730 633 715 633 q 753 631 741 633 z "},"x":{"ha":833,"x_min":113,"x_max":728,"o":"m 716 60 q 728 34 728 47 q 698 0 728 14 q 661 -10 675 -10 q 623 10 641 -10 l 420 249 l 218 10 q 180 -10 200 -10 q 143 0 165 -10 q 113 34 113 14 q 125 60 113 47 l 347 319 l 134 566 q 121 593 121 581 q 152 627 121 613 q 189 637 174 637 q 227 616 209 637 l 420 391 l 614 616 q 652 637 632 637 q 689 627 667 637 q 720 593 720 613 q 707 566 720 581 l 494 319 l 716 60 z "},"y":{"ha":833,"x_min":83,"x_max":749,"o":"m 713 627 q 740 610 731 619 q 749 589 749 601 q 742 565 749 578 l 337 -243 q 321 -264 330 -258 q 302 -271 313 -271 q 272 -263 290 -271 q 245 -247 254 -256 q 237 -226 237 -237 q 243 -201 237 -215 l 359 29 l 90 565 q 83 589 83 578 q 120 627 83 612 q 151 635 138 635 q 170 628 162 635 q 186 606 178 621 l 417 143 l 647 606 q 663 628 654 621 q 682 635 671 635 q 713 627 694 635 z "},"ý":{"ha":833,"x_min":83,"x_max":749,"o":"m 352 711 q 330 704 340 704 q 299 721 314 704 q 283 756 283 739 q 294 777 283 769 l 530 951 q 555 960 542 960 q 600 932 578 960 q 621 886 621 905 q 606 859 621 868 l 352 711 m 713 627 q 740 610 731 619 q 749 589 749 601 q 742 565 749 578 l 337 -243 q 321 -264 330 -258 q 302 -271 313 -271 q 272 -263 290 -271 q 245 -247 254 -256 q 237 -226 237 -237 q 243 -201 237 -215 l 359 29 l 90 565 q 83 589 83 578 q 120 627 83 612 q 151 635 138 635 q 170 628 162 635 q 186 606 178 621 l 417 143 l 647 606 q 663 628 654 621 q 682 635 671 635 q 713 627 694 635 z "},"ŷ":{"ha":833,"x_min":83,"x_max":749,"o":"m 277 713 q 256 705 267 705 q 227 721 241 705 q 211 753 211 739 q 222 775 211 765 l 388 933 q 427 947 403 947 q 467 933 452 947 l 633 775 q 644 753 644 765 q 628 721 644 739 q 598 705 614 705 q 577 713 587 705 l 427 830 l 277 713 m 713 627 q 740 610 731 619 q 749 589 749 601 q 742 565 749 578 l 337 -243 q 321 -264 330 -258 q 302 -271 313 -271 q 272 -263 290 -271 q 245 -247 254 -256 q 237 -226 237 -237 q 243 -201 237 -215 l 359 29 l 90 565 q 83 589 83 578 q 120 627 83 612 q 151 635 138 635 q 170 628 162 635 q 186 606 178 621 l 417 143 l 647 606 q 663 628 654 621 q 682 635 671 635 q 713 627 694 635 z "},"ÿ":{"ha":833,"x_min":83,"x_max":749,"o":"m 275 748 q 224 758 238 748 q 211 792 211 768 l 211 880 q 224 915 211 905 q 275 924 238 924 q 326 915 313 924 q 340 880 340 905 l 340 792 q 326 758 340 768 q 275 748 313 748 m 560 748 q 509 758 523 748 q 496 792 496 768 l 496 880 q 509 915 496 905 q 560 924 523 924 q 611 915 597 924 q 625 880 625 905 l 625 792 q 611 758 625 768 q 560 748 597 748 m 713 627 q 740 610 731 619 q 749 589 749 601 q 742 565 749 578 l 337 -243 q 321 -264 330 -258 q 302 -271 313 -271 q 272 -263 290 -271 q 245 -247 254 -256 q 237 -226 237 -237 q 243 -201 237 -215 l 359 29 l 90 565 q 83 589 83 578 q 120 627 83 612 q 151 635 138 635 q 170 628 162 635 q 186 606 178 621 l 417 143 l 647 606 q 663 628 654 621 q 682 635 671 635 q 713 627 694 635 z "},"ỳ":{"ha":833,"x_min":83,"x_max":749,"o":"m 227 859 q 212 886 212 868 q 233 932 212 905 q 278 960 255 960 q 303 951 291 960 l 539 777 q 550 756 550 769 q 534 721 550 739 q 503 704 519 704 q 481 711 493 704 l 227 859 m 713 627 q 740 610 731 619 q 749 589 749 601 q 742 565 749 578 l 337 -243 q 321 -264 330 -258 q 302 -271 313 -271 q 272 -263 290 -271 q 245 -247 254 -256 q 237 -226 237 -237 q 243 -201 237 -215 l 359 29 l 90 565 q 83 589 83 578 q 120 627 83 612 q 151 635 138 635 q 170 628 162 635 q 186 606 178 621 l 417 143 l 647 606 q 663 628 654 621 q 682 635 671 635 q 713 627 694 635 z "},"z":{"ha":833,"x_min":121,"x_max":712,"o":"m 669 98 q 702 86 692 98 q 712 49 712 75 q 702 11 712 22 q 669 0 692 0 l 163 0 q 131 11 140 0 q 121 46 121 21 q 130 77 121 66 l 540 529 l 177 529 q 144 540 154 529 q 134 578 134 551 q 144 615 134 604 q 177 627 154 627 l 663 627 q 695 616 686 627 q 705 581 705 606 q 695 549 705 561 l 286 98 l 669 98 z "},"ź":{"ha":833,"x_min":121,"x_max":712,"o":"m 344 711 q 322 704 332 704 q 291 721 306 704 q 275 756 275 739 q 286 777 275 769 l 522 951 q 547 960 534 960 q 592 932 570 960 q 612 886 612 905 q 597 859 612 868 l 344 711 m 669 98 q 702 86 692 98 q 712 49 712 75 q 702 11 712 22 q 669 0 692 0 l 163 0 q 131 11 140 0 q 121 46 121 21 q 130 77 121 66 l 540 529 l 177 529 q 144 540 154 529 q 134 578 134 551 q 144 615 134 604 q 177 627 154 627 l 663 627 q 695 616 686 627 q 705 581 705 606 q 695 549 705 561 l 286 98 l 669 98 z "},"ž":{"ha":833,"x_min":121,"x_max":712,"o":"m 218 878 q 207 900 207 888 q 222 932 207 914 q 252 948 237 948 q 273 940 263 948 l 423 823 l 573 940 q 594 948 583 948 q 624 932 610 948 q 640 900 640 914 q 629 878 640 888 l 463 720 q 423 706 448 706 q 384 720 399 706 l 218 878 m 669 98 q 702 86 692 98 q 712 49 712 75 q 702 11 712 22 q 669 0 692 0 l 163 0 q 131 11 140 0 q 121 46 121 21 q 130 77 121 66 l 540 529 l 177 529 q 144 540 154 529 q 134 578 134 551 q 144 615 134 604 q 177 627 154 627 l 663 627 q 695 616 686 627 q 705 581 705 606 q 695 549 705 561 l 286 98 l 669 98 z "},"ż":{"ha":833,"x_min":121,"x_max":712,"o":"m 423 748 q 372 758 386 748 q 359 792 359 768 l 359 880 q 372 915 359 905 q 423 924 386 924 q 474 915 460 924 q 488 880 488 905 l 488 792 q 474 758 488 768 q 423 748 460 748 m 669 98 q 702 86 692 98 q 712 49 712 75 q 702 11 712 22 q 669 0 692 0 l 163 0 q 131 11 140 0 q 121 46 121 21 q 130 77 121 66 l 540 529 l 177 529 q 144 540 154 529 q 134 578 134 551 q 144 615 134 604 q 177 627 154 627 l 663 627 q 695 616 686 627 q 705 581 705 606 q 695 549 705 561 l 286 98 l 669 98 z "},"ﬁ":{"ha":1666,"x_min":127,"x_max":1577,"o":"m 1252 748 q 1201 758 1215 748 q 1187 792 1187 768 l 1187 880 q 1201 915 1187 905 q 1252 924 1215 924 q 1303 915 1289 924 q 1316 880 1316 905 l 1316 792 q 1303 758 1316 768 q 1252 748 1289 748 m 723 859 q 756 814 756 846 q 753 795 756 809 q 718 758 744 758 q 703 761 712 758 q 543 794 617 794 q 406 647 406 794 l 406 572 l 640 572 q 673 561 663 572 q 683 524 683 550 q 673 486 683 497 q 640 475 663 475 l 406 475 l 406 37 q 394 3 406 14 q 355 -7 383 -7 l 354 -7 q 315 3 326 -7 q 304 37 304 14 l 304 475 l 170 475 q 137 486 146 475 q 127 524 127 497 q 137 561 127 550 q 170 572 146 572 l 304 572 l 304 656 q 367 830 304 768 q 543 893 429 893 q 723 859 633 893 m 1534 98 q 1567 86 1557 98 q 1577 49 1577 75 q 1567 11 1577 22 q 1534 0 1557 0 l 1002 0 q 969 11 979 0 q 960 49 960 22 q 969 86 960 75 q 1002 98 979 98 l 1215 98 l 1215 529 l 1043 529 q 1010 540 1020 529 q 1000 578 1000 551 q 1010 615 1000 604 q 1043 627 1020 627 l 1274 627 q 1306 616 1297 627 q 1316 581 1316 606 l 1316 98 l 1534 98 z "},"ﬂ":{"ha":1666,"x_min":127,"x_max":1570,"o":"m 723 859 q 756 814 756 846 q 753 795 756 809 q 718 758 744 758 q 703 761 712 758 q 543 794 617 794 q 406 647 406 794 l 406 572 l 640 572 q 673 561 663 572 q 683 524 683 550 q 673 486 683 497 q 640 475 663 475 l 406 475 l 406 37 q 394 3 406 14 q 355 -7 383 -7 l 354 -7 q 315 3 326 -7 q 304 37 304 14 l 304 475 l 170 475 q 137 486 146 475 q 127 524 127 497 q 137 561 127 550 q 170 572 146 572 l 304 572 l 304 656 q 367 830 304 768 q 543 893 429 893 q 723 859 633 893 m 1527 98 q 1560 86 1550 98 q 1570 49 1570 75 q 1560 11 1570 22 q 1527 0 1550 0 l 996 0 q 963 11 972 0 q 953 49 953 22 q 963 86 953 75 q 996 98 972 98 l 1208 98 l 1208 792 l 1023 792 q 990 803 1000 792 q 980 841 980 814 q 990 879 980 867 q 1023 890 1000 890 l 1267 890 q 1300 879 1290 890 q 1310 844 1310 869 l 1310 98 l 1527 98 z "},"ª":{"ha":833,"x_min":171,"x_max":629,"o":"m 437 820 q 580 775 531 820 q 629 647 629 730 l 629 355 q 619 330 629 338 q 589 321 610 321 l 587 321 q 557 330 566 321 q 547 355 547 338 l 547 392 q 354 315 457 315 q 260 333 301 315 q 195 384 218 350 q 171 466 171 418 q 229 589 171 549 q 378 629 286 629 q 537 610 468 629 l 537 644 q 437 732 537 732 q 279 688 355 732 q 262 683 270 683 q 229 707 243 683 q 218 739 218 726 q 234 765 218 755 q 329 805 275 791 q 437 820 383 820 m 386 543 q 267 468 267 543 q 291 418 267 435 q 357 400 315 400 q 537 479 456 400 l 537 526 q 386 543 463 543 z "},"º":{"ha":833,"x_min":159,"x_max":673,"o":"m 416 820 q 548 787 489 820 q 640 697 606 755 q 673 568 673 640 q 640 438 673 495 q 548 348 606 380 q 416 315 489 315 q 285 348 344 315 q 193 438 227 380 q 159 568 159 495 q 193 697 159 640 q 285 787 227 755 q 416 820 344 820 m 416 730 q 332 709 369 730 q 275 651 295 688 q 254 568 254 614 q 275 484 254 521 q 332 426 295 446 q 416 405 369 405 q 501 426 465 405 q 558 483 538 446 q 578 568 578 520 q 558 651 578 614 q 501 709 538 688 q 416 730 465 730 z "},"Δ":{"ha":833,"x_min":100,"x_max":732,"o":"m 418 820 q 462 809 446 820 q 487 776 479 799 l 729 72 q 732 46 732 62 q 723 11 732 21 q 690 0 713 0 l 142 0 q 110 11 119 0 q 100 46 100 21 q 104 72 100 60 l 349 776 q 374 809 357 799 q 418 820 391 820 m 417 693 l 218 92 l 615 92 l 418 693 l 417 693 z "},"Ω":{"ha":833,"x_min":55,"x_max":778,"o":"m 416 820 q 603 770 522 820 q 729 631 684 721 q 773 422 773 541 q 729 237 773 322 q 615 98 685 152 l 735 98 q 768 86 758 98 q 778 49 778 75 q 768 11 778 22 q 735 0 758 0 l 509 0 q 476 12 486 0 q 466 53 466 24 q 477 96 466 88 q 617 236 569 155 q 666 422 666 318 q 635 580 666 513 q 548 683 604 647 q 416 720 491 720 q 285 683 342 720 q 198 580 229 647 q 167 422 167 513 q 215 236 167 318 q 355 96 264 155 q 367 53 367 88 q 357 12 367 24 q 324 0 347 0 l 98 0 q 65 11 75 0 q 55 49 55 22 q 65 86 55 75 q 98 98 75 98 l 218 98 q 104 237 148 152 q 60 422 60 322 q 104 631 60 541 q 230 770 149 721 q 416 820 311 820 z "},"μ":{"ha":833,"x_min":148,"x_max":692,"o":"m 642 633 q 681 623 669 633 q 692 589 692 613 l 692 37 q 682 3 692 14 q 645 -7 671 -7 l 644 -7 q 607 3 617 -7 q 597 37 597 14 l 597 134 q 493 26 554 68 q 363 -15 431 -15 q 250 17 295 -15 l 250 -226 q 238 -260 250 -250 q 199 -270 227 -270 l 198 -270 q 159 -260 170 -270 q 148 -226 148 -250 l 148 589 q 159 623 148 613 q 198 633 170 633 l 199 633 q 238 623 227 633 q 250 589 250 613 l 250 216 q 280 120 250 155 q 373 85 310 85 q 475 120 425 85 q 558 213 526 155 q 590 340 590 272 l 590 589 q 601 623 590 613 q 640 633 612 633 l 642 633 z "},"π":{"ha":833,"x_min":66,"x_max":766,"o":"m 724 627 q 756 615 747 627 q 766 578 766 604 q 756 540 766 551 q 724 529 747 529 l 665 529 l 665 37 q 653 3 665 14 q 614 -7 642 -7 l 613 -7 q 574 3 585 -7 q 563 37 563 14 l 563 529 l 270 529 l 270 37 q 259 3 270 14 q 220 -7 248 -7 l 218 -7 q 179 3 191 -7 q 168 37 168 14 l 168 529 l 109 529 q 76 540 86 529 q 66 578 66 551 q 76 615 66 604 q 109 627 86 627 l 724 627 z "},"⁄":{"ha":833,"x_min":75,"x_max":758,"o":"m 707 576 q 718 579 712 579 q 748 560 734 579 q 758 534 758 548 q 748 516 758 522 l 125 136 q 115 133 121 133 q 85 152 99 133 q 75 178 75 165 q 85 196 75 190 l 707 576 z "},"½":{"ha":833,"x_min":-3,"x_max":821,"o":"m 359 499 q 352 472 359 481 q 331 464 345 464 l 29 464 q 1 499 1 464 q 8 526 1 518 q 29 534 15 534 l 144 534 l 144 846 l 49 796 q 31 791 39 791 q 5 810 16 791 q -3 835 -3 825 q 12 856 -3 848 l 182 942 q 197 945 191 945 q 214 939 208 945 q 221 922 221 933 l 221 534 l 331 534 q 352 526 345 534 q 359 499 359 518 m 748 587 q 758 562 758 575 q 748 543 758 549 l 125 163 q 115 160 121 160 q 85 179 99 160 q 75 205 75 193 q 85 223 75 217 l 707 604 q 718 606 712 606 q 748 587 734 606 m 793 -76 q 814 -84 807 -76 q 821 -111 821 -92 q 814 -138 821 -130 q 793 -146 807 -146 l 481 -146 q 454 -106 454 -146 q 471 -69 454 -83 l 660 90 q 707 139 692 117 q 722 190 722 162 q 699 242 722 222 q 635 262 677 262 q 572 252 606 262 q 509 227 539 243 q 499 224 505 224 q 471 250 482 224 q 467 272 467 262 q 479 295 467 288 q 557 325 514 314 q 640 335 600 335 q 758 296 715 335 q 801 190 801 256 q 779 111 801 146 q 709 36 756 75 l 574 -76 l 793 -76 z "},"¼":{"ha":833,"x_min":-3,"x_max":836,"o":"m 359 499 q 352 472 359 481 q 331 464 345 464 l 29 464 q 1 499 1 464 q 8 526 1 518 q 29 534 15 534 l 144 534 l 144 846 l 49 796 q 31 791 39 791 q 5 810 16 791 q -3 835 -3 825 q 12 856 -3 848 l 182 942 q 197 945 191 945 q 214 939 208 945 q 221 922 221 933 l 221 534 l 331 534 q 352 526 345 534 q 359 499 359 518 m 748 553 q 758 528 758 541 q 748 509 758 515 l 125 129 q 115 126 121 126 q 85 145 99 126 q 75 171 75 159 q 85 189 75 183 l 707 570 q 718 572 712 572 q 748 553 734 572 m 809 52 q 829 43 823 52 q 836 16 836 35 q 829 -11 836 -3 q 809 -20 823 -20 l 747 -20 l 747 -123 q 739 -144 747 -137 q 709 -151 730 -151 q 680 -144 689 -151 q 671 -123 671 -137 l 671 -20 l 458 -20 q 436 -8 444 -20 q 427 24 427 3 q 429 41 427 35 q 437 55 431 47 l 652 311 q 672 330 662 323 q 697 336 683 336 q 732 327 717 336 q 747 304 747 317 l 747 52 l 809 52 m 671 52 l 674 232 l 524 52 l 671 52 z "},"¾":{"ha":833,"x_min":14,"x_max":836,"o":"m 368 597 q 321 492 368 530 q 186 454 275 454 q 102 463 144 454 q 27 490 60 472 q 14 513 14 497 q 19 534 14 522 q 47 561 29 561 q 58 558 52 561 q 119 535 87 544 q 182 526 151 526 q 260 545 233 526 q 288 597 288 564 q 261 650 288 635 q 184 666 235 666 l 155 666 q 130 701 130 666 q 136 727 130 717 q 155 736 142 736 l 177 736 q 249 753 224 736 q 273 805 273 769 q 248 855 273 838 q 179 872 223 872 q 62 841 123 872 q 52 838 58 838 q 24 865 35 838 q 20 886 20 876 q 32 909 20 902 q 105 936 64 926 q 185 945 145 945 q 274 928 237 945 q 332 881 312 911 q 353 810 353 850 q 289 708 353 743 q 347 668 326 696 q 368 597 368 640 m 748 560 q 758 534 758 548 q 748 516 758 522 l 125 136 q 115 133 121 133 q 85 152 99 133 q 75 178 75 165 q 85 196 75 190 l 707 576 q 718 579 712 579 q 748 560 734 579 m 809 52 q 829 43 823 52 q 836 16 836 35 q 829 -11 836 -3 q 809 -20 823 -20 l 747 -20 l 747 -123 q 739 -144 747 -137 q 709 -151 730 -151 q 680 -144 689 -151 q 671 -123 671 -137 l 671 -20 l 458 -20 q 436 -8 444 -20 q 427 24 427 3 q 429 41 427 35 q 437 55 431 47 l 652 311 q 672 330 662 323 q 697 336 683 336 q 732 327 717 336 q 747 304 747 317 l 747 52 l 809 52 m 671 52 l 674 232 l 524 52 l 671 52 z "},"¹":{"ha":833,"x_min":209,"x_max":642,"o":"m 609 412 q 634 402 626 412 q 642 370 642 393 q 634 338 642 348 q 609 328 626 328 l 248 328 q 214 370 214 328 q 222 402 214 393 q 248 412 231 412 l 386 412 l 386 786 l 271 726 q 250 720 259 720 q 219 743 233 720 q 209 772 209 762 q 227 798 209 789 l 431 901 q 449 905 442 905 q 469 898 461 905 q 477 876 477 890 l 477 412 l 609 412 z "},"²":{"ha":833,"x_min":195,"x_max":634,"o":"m 418 905 q 521 883 477 905 q 588 823 565 862 q 611 731 611 783 q 584 636 611 679 q 500 547 557 594 l 338 412 l 601 412 q 626 402 618 412 q 634 370 634 393 q 626 338 634 348 q 601 328 618 328 l 227 328 q 195 376 195 328 q 216 420 195 403 l 441 610 q 498 671 480 644 q 516 731 516 698 q 489 794 516 770 q 412 817 462 817 q 337 806 377 817 q 262 776 298 794 q 249 772 254 772 q 230 781 239 772 q 216 803 222 789 q 210 830 210 820 q 225 857 210 849 q 318 892 267 880 q 418 905 369 905 z "},"³":{"ha":833,"x_min":205,"x_max":628,"o":"m 410 905 q 516 884 471 905 q 586 827 562 864 q 610 743 610 791 q 534 621 610 661 q 603 572 578 606 q 628 488 628 538 q 573 361 628 407 q 410 315 517 315 q 310 327 360 315 q 220 359 260 338 q 205 386 205 368 q 210 412 205 397 q 225 436 216 427 q 243 444 233 444 q 256 441 250 444 q 330 413 291 423 q 406 403 369 403 q 500 425 467 403 q 533 488 533 447 q 501 551 533 533 q 408 570 469 570 l 373 570 q 343 612 343 570 q 350 643 343 631 q 373 654 357 654 l 399 654 q 486 674 456 654 q 515 736 515 694 q 485 797 515 776 q 402 817 455 817 q 262 780 336 817 q 250 777 256 777 q 216 808 229 777 q 211 833 211 823 q 226 861 211 854 q 313 893 265 882 q 410 905 361 905 z "},"⁴":{"ha":833,"x_min":164,"x_max":654,"o":"m 621 564 q 646 554 637 564 q 654 522 654 545 q 646 490 654 500 q 621 479 637 479 l 547 479 l 547 355 q 537 330 547 338 q 502 322 526 322 q 467 330 477 322 q 456 355 456 338 l 456 479 l 201 479 q 174 493 184 479 q 164 532 164 506 q 167 552 164 544 q 176 568 170 560 l 433 875 q 458 898 446 890 q 488 905 470 905 q 529 894 511 905 q 547 867 547 883 l 547 564 l 621 564 m 456 564 l 460 781 l 280 564 l 456 564 z "},"*":{"ha":833,"x_min":130,"x_max":703,"o":"m 699 614 q 703 589 703 602 q 692 558 703 570 q 659 541 680 545 l 471 505 l 603 363 q 620 326 620 345 q 591 281 620 302 q 554 267 571 267 q 529 275 541 267 q 508 298 517 283 l 416 465 l 325 298 q 279 268 307 268 q 241 281 261 268 q 213 326 213 303 q 230 363 213 345 l 362 505 l 174 541 q 141 558 153 545 q 130 589 130 570 q 134 614 130 602 q 153 647 140 635 q 182 658 165 658 q 209 651 193 658 l 382 569 l 358 759 q 357 768 357 762 q 373 806 357 792 q 416 820 388 820 q 460 806 445 820 q 475 768 475 792 q 475 759 475 762 l 450 569 l 624 651 q 651 658 640 658 q 680 647 667 658 q 699 614 692 635 z "},"\\\\":{"ha":833,"x_min":134,"x_max":699,"o":"m 197 945 q 224 939 212 945 q 241 921 236 932 l 696 -193 q 699 -205 699 -199 q 681 -231 699 -220 q 636 -241 663 -241 q 609 -234 621 -241 q 592 -216 597 -227 l 136 898 q 134 909 134 904 q 152 935 134 925 q 197 945 170 945 z "},"·":{"ha":833,"x_min":325,"x_max":508,"o":"m 416 498 q 487 489 465 498 q 508 456 508 479 l 508 331 q 487 298 508 308 q 416 288 465 288 q 346 298 368 288 q 325 331 325 308 l 325 456 q 346 489 325 479 q 416 498 368 498 z "},"•":{"ha":833,"x_min":259,"x_max":574,"o":"m 416 578 q 537 563 500 578 q 574 512 574 547 l 574 307 q 537 256 574 272 q 416 241 500 241 q 296 256 333 241 q 259 307 259 272 l 259 512 q 296 563 259 547 q 416 578 333 578 z "},":":{"ha":833,"x_min":325,"x_max":508,"o":"m 416 633 q 487 624 465 633 q 508 591 508 614 l 508 466 q 487 433 508 443 q 416 423 465 423 q 346 433 368 423 q 325 466 325 443 l 325 591 q 346 624 325 614 q 416 633 368 633 m 416 203 q 487 194 465 203 q 508 161 508 184 l 508 36 q 487 3 508 13 q 416 -7 465 -7 q 346 3 368 -7 q 325 36 325 13 l 325 161 q 346 194 325 184 q 416 203 368 203 z "},",":{"ha":833,"x_min":252,"x_max":508,"o":"m 484 199 q 502 193 496 199 q 508 176 508 186 q 503 157 508 167 l 359 -172 q 301 -199 347 -199 q 252 -165 252 -199 q 254 -155 252 -163 l 317 172 q 329 192 320 185 q 353 199 338 199 l 484 199 z "},"…":{"ha":833,"x_min":74,"x_max":759,"o":"m 145 156 q 200 148 183 156 q 216 120 216 139 l 216 29 q 200 2 216 10 q 145 -7 183 -7 q 91 2 107 -7 q 74 29 74 10 l 74 120 q 91 148 74 139 q 145 156 107 156 m 416 156 q 471 148 454 156 q 488 120 488 139 l 488 29 q 471 2 488 10 q 416 -7 454 -7 q 362 2 378 -7 q 345 29 345 10 l 345 120 q 362 148 345 139 q 416 156 378 156 m 688 156 q 742 148 726 156 q 759 120 759 139 l 759 29 q 742 2 759 10 q 688 -7 726 -7 q 633 2 650 -7 q 616 29 616 10 l 616 120 q 633 148 616 139 q 688 156 650 156 z "},"!":{"ha":833,"x_min":332,"x_max":501,"o":"m 460 861 q 483 852 476 861 q 488 827 490 844 l 455 347 q 444 323 454 332 q 416 315 434 315 q 388 323 399 315 q 377 347 378 332 l 345 827 q 350 852 343 844 q 372 861 357 861 l 460 861 m 416 183 q 481 173 461 183 q 501 140 501 163 l 501 36 q 481 3 501 13 q 416 -7 461 -7 q 352 3 372 -7 q 332 36 332 13 l 332 140 q 352 173 332 163 q 416 183 372 183 z "},"¡":{"ha":833,"x_min":332,"x_max":501,"o":"m 416 444 q 352 453 372 444 q 332 486 332 463 l 332 591 q 352 624 332 614 q 416 633 372 633 q 481 624 461 633 q 501 591 501 614 l 501 486 q 481 453 501 463 q 416 444 461 444 m 372 -234 q 350 -226 357 -234 q 345 -200 343 -218 l 378 279 q 389 303 379 295 q 416 312 399 312 q 445 303 434 312 q 456 279 455 295 l 488 -200 q 483 -226 490 -218 q 460 -234 476 -234 l 372 -234 z "},"#":{"ha":833,"x_min":41,"x_max":792,"o":"m 749 587 q 782 575 772 587 q 792 538 792 564 q 782 500 792 511 q 749 489 772 489 l 618 489 l 574 323 l 702 323 q 735 312 725 323 q 745 274 745 300 q 735 236 745 248 q 702 225 725 225 l 549 225 l 492 7 q 479 -9 490 -3 q 456 -15 469 -15 q 422 -5 437 -15 q 407 22 407 5 q 408 31 407 24 l 459 225 l 281 225 l 225 7 q 212 -9 222 -3 q 189 -15 201 -15 q 155 -5 170 -15 q 140 22 140 5 q 141 31 140 24 l 192 225 l 83 225 q 51 236 60 225 q 41 274 41 248 q 51 312 41 300 q 83 323 60 323 l 217 323 l 260 489 l 131 489 q 98 500 108 489 q 88 538 88 511 q 98 575 88 564 q 131 587 108 587 l 286 587 l 340 798 q 354 814 343 808 q 377 820 364 820 q 411 810 396 820 q 426 783 426 800 q 425 774 426 781 l 376 587 l 553 587 l 608 798 q 621 814 610 808 q 644 820 631 820 q 678 810 663 820 q 693 783 693 800 q 692 774 693 781 l 643 587 l 749 587 m 528 489 l 351 489 l 307 323 l 484 323 l 528 489 z "},".":{"ha":833,"x_min":325,"x_max":508,"o":"m 416 203 q 487 194 465 203 q 508 161 508 184 l 508 36 q 487 3 508 13 q 416 -7 465 -7 q 346 3 368 -7 q 325 36 325 13 l 325 161 q 346 194 325 184 q 416 203 368 203 z "},"?":{"ha":833,"x_min":178,"x_max":655,"o":"m 419 861 q 546 834 492 861 q 627 759 599 807 q 655 648 655 711 q 632 548 655 590 q 563 476 608 507 q 443 414 517 445 l 434 317 q 389 284 431 284 q 345 317 347 284 l 336 451 q 339 473 334 465 q 356 486 345 481 l 403 505 q 489 547 457 527 q 535 591 520 566 q 551 648 551 615 q 516 730 551 699 q 420 760 482 760 q 243 715 330 760 q 222 709 233 709 q 186 740 199 709 q 178 771 178 758 q 203 808 178 793 q 419 861 301 861 m 389 156 q 449 146 431 156 q 467 113 467 136 l 467 36 q 449 3 467 13 q 389 -7 431 -7 q 330 3 348 -7 q 311 36 311 13 l 311 113 q 330 146 311 136 q 389 156 348 156 z "},"¿":{"ha":833,"x_min":178,"x_max":655,"o":"m 444 471 q 384 480 402 471 q 366 513 366 490 l 366 591 q 384 624 366 614 q 444 633 402 633 q 503 624 485 633 q 522 591 522 614 l 522 513 q 503 480 522 490 q 444 471 485 471 m 414 -234 q 287 -207 340 -234 q 206 -133 234 -180 q 178 -22 178 -85 q 201 78 178 37 q 270 151 224 120 q 390 212 316 182 l 399 310 q 444 342 402 342 q 488 310 486 342 l 497 176 q 493 154 498 162 q 477 141 488 146 l 430 122 q 344 80 376 100 q 297 36 313 60 q 282 -22 282 12 q 316 -103 282 -73 q 413 -134 351 -134 q 590 -88 503 -134 q 611 -82 600 -82 q 647 -113 633 -82 q 655 -144 655 -132 q 629 -181 655 -167 q 414 -234 532 -234 z "},"\\"":{"ha":833,"x_min":173,"x_max":656,"o":"m 316 861 q 345 834 345 861 l 344 827 l 307 522 q 293 494 304 504 q 260 485 281 485 q 229 494 241 485 q 214 522 216 504 l 177 827 q 205 861 173 861 l 316 861 m 628 861 q 656 834 656 861 l 656 827 l 618 522 q 605 494 616 504 q 572 485 593 485 q 541 494 553 485 q 526 522 528 504 l 489 827 q 517 861 485 861 l 628 861 z "},"\'":{"ha":833,"x_min":329,"x_max":500,"o":"m 472 861 q 500 834 500 861 l 500 827 l 463 522 q 449 494 460 504 q 416 485 437 485 q 385 494 397 485 q 370 522 372 504 l 333 827 q 361 861 329 861 l 472 861 z "},";":{"ha":833,"x_min":266,"x_max":522,"o":"m 416 633 q 487 624 465 633 q 508 591 508 614 l 508 466 q 487 433 508 443 q 416 423 465 423 q 346 433 368 423 q 325 466 325 443 l 325 591 q 346 624 325 614 q 416 633 368 633 m 498 199 q 515 193 509 199 q 522 176 522 186 q 517 157 522 167 l 373 -172 q 315 -199 361 -199 q 266 -165 266 -199 q 267 -155 266 -163 l 331 172 q 343 192 334 185 q 366 199 352 199 l 498 199 z "},"/":{"ha":833,"x_min":134,"x_max":699,"o":"m 636 945 q 681 935 663 945 q 699 909 699 925 q 696 898 699 904 l 241 -216 q 224 -234 236 -227 q 197 -241 212 -241 q 152 -231 170 -241 q 134 -205 134 -220 q 136 -193 134 -199 l 592 921 q 609 939 597 932 q 636 945 621 945 z "},"_":{"ha":833,"x_min":-19,"x_max":852,"o":"m -3 -267 q -15 -257 -12 -267 q -19 -218 -19 -247 q -15 -179 -19 -189 q -3 -169 -12 -169 l 836 -169 q 848 -179 844 -169 q 852 -218 852 -189 q 848 -257 852 -247 q 836 -267 844 -267 l -3 -267 z "},"{":{"ha":833,"x_min":120,"x_max":671,"o":"m 629 930 q 662 919 652 930 q 671 882 671 908 q 662 844 671 855 q 629 833 652 833 q 520 815 561 833 q 461 760 479 798 q 444 662 444 723 l 444 642 l 446 593 q 412 459 450 512 q 288 370 374 406 l 288 363 q 412 290 374 338 q 450 167 450 241 q 450 144 450 152 l 444 62 q 444 37 444 54 q 488 -89 444 -50 q 629 -128 532 -128 q 662 -139 652 -128 q 671 -177 671 -151 q 662 -215 671 -203 q 629 -226 652 -226 q 417 -165 492 -226 q 341 18 341 -104 q 342 54 341 42 l 350 138 q 351 165 351 157 q 306 280 351 241 q 163 318 260 318 q 130 329 140 318 q 120 367 120 340 q 130 405 120 393 q 163 416 140 416 q 302 458 257 416 q 347 580 347 501 q 346 600 347 593 l 342 650 q 341 680 341 671 q 416 868 341 805 q 629 930 491 930 z "},"}":{"ha":833,"x_min":161,"x_max":713,"o":"m 204 930 q 417 868 342 930 q 492 680 492 805 q 490 650 492 671 l 487 600 q 486 580 486 593 q 531 458 486 501 q 670 416 576 416 q 703 405 693 416 q 713 367 713 393 q 703 329 713 340 q 670 318 693 318 q 527 280 572 318 q 481 165 481 241 q 483 138 481 157 l 490 54 q 492 18 492 42 q 416 -165 492 -104 q 204 -226 340 -226 q 171 -215 181 -226 q 161 -177 161 -203 q 171 -139 161 -151 q 204 -128 181 -128 q 345 -89 300 -128 q 389 37 389 -50 q 389 62 389 54 l 383 144 q 382 167 382 152 q 421 290 382 241 q 545 363 459 338 l 545 370 q 421 459 458 406 q 387 593 383 512 l 389 642 q 375 752 391 710 q 317 813 358 793 q 204 833 276 833 q 171 844 181 833 q 161 882 161 855 q 171 919 161 908 q 204 930 181 930 z "},"[":{"ha":833,"x_min":224,"x_max":590,"o":"m 547 -128 q 580 -139 570 -128 q 590 -177 590 -151 q 580 -215 590 -203 q 547 -226 570 -226 l 267 -226 q 234 -215 243 -226 q 224 -180 224 -205 l 224 884 q 234 920 224 909 q 267 930 243 930 l 547 930 q 580 919 570 930 q 590 882 590 908 q 580 844 590 855 q 547 833 570 833 l 326 833 l 326 -128 l 547 -128 z "},"]":{"ha":833,"x_min":243,"x_max":609,"o":"m 566 930 q 599 920 589 930 q 609 884 609 909 l 609 -180 q 599 -215 609 -205 q 566 -226 589 -226 l 286 -226 q 253 -215 262 -226 q 243 -177 243 -203 q 253 -139 243 -151 q 286 -128 262 -128 l 507 -128 l 507 833 l 286 833 q 253 844 262 833 q 243 882 243 855 q 253 919 243 908 q 286 930 262 930 l 566 930 z "},"(":{"ha":833,"x_min":201,"x_max":587,"o":"m 523 932 q 537 937 530 937 q 558 929 548 937 q 575 909 568 922 q 587 873 587 890 q 578 853 587 859 q 381 650 460 776 q 302 351 302 524 q 381 53 302 178 q 578 -149 460 -72 q 587 -169 587 -155 q 575 -205 587 -186 q 558 -225 568 -218 q 537 -233 548 -233 q 523 -229 530 -233 q 367 -97 440 -179 q 248 100 294 -14 q 201 351 201 215 q 248 602 201 486 q 368 800 294 717 q 523 932 441 883 z "},")":{"ha":833,"x_min":246,"x_max":631,"o":"m 310 932 q 465 800 392 883 q 585 602 538 717 q 631 351 631 486 q 585 100 631 215 q 466 -97 538 -14 q 310 -229 393 -179 q 296 -233 302 -233 q 275 -225 285 -233 q 258 -205 265 -218 q 246 -169 246 -186 q 255 -149 246 -155 q 452 53 373 -72 q 531 351 531 178 q 452 650 531 524 q 255 853 372 776 q 246 873 246 859 q 258 909 246 890 q 275 929 265 922 q 296 937 285 937 q 310 932 302 937 z "},"—":{"ha":833,"x_min":-20,"x_max":853,"o":"m 810 444 q 843 432 833 444 q 853 395 853 421 q 843 357 853 368 q 810 346 833 346 l 22 346 q -11 357 -1 346 q -20 395 -20 368 q -11 432 -20 421 q 22 444 -1 444 l 810 444 z "},"–":{"ha":833,"x_min":115,"x_max":718,"o":"m 675 444 q 708 432 698 444 q 718 395 718 421 q 708 357 718 368 q 675 346 698 346 l 158 346 q 125 357 135 346 q 115 395 115 368 q 125 432 115 421 q 158 444 135 444 l 675 444 z "},"-":{"ha":833,"x_min":115,"x_max":718,"o":"m 675 444 q 708 432 698 444 q 718 395 718 421 q 708 357 718 368 q 675 346 698 346 l 158 346 q 125 357 135 346 q 115 395 115 368 q 125 432 115 421 q 158 444 135 444 l 675 444 z "},"‑":{"ha":833,"x_min":115,"x_max":718,"o":"m 675 444 q 708 432 698 444 q 718 395 718 421 q 708 357 718 368 q 675 346 698 346 l 158 346 q 125 357 135 346 q 115 395 115 368 q 125 432 115 421 q 158 444 135 444 l 675 444 z "},"­":{"ha":0,"x_min":0,"x_max":0,"o":""},"«":{"ha":833,"x_min":104,"x_max":726,"o":"m 380 623 q 401 588 401 604 q 391 566 401 577 l 224 382 l 391 199 q 401 177 401 188 q 380 142 401 161 q 339 123 358 123 q 317 134 326 123 l 110 366 q 104 382 104 374 q 110 399 104 393 l 317 631 q 339 642 326 642 q 380 623 358 642 m 705 623 q 726 588 726 604 q 717 566 726 577 l 550 382 l 717 199 q 726 177 726 188 q 705 142 726 161 q 665 123 684 123 q 643 134 651 123 l 435 366 q 429 382 429 374 q 435 399 429 393 l 643 631 q 665 642 651 642 q 705 623 684 642 z "},"»":{"ha":833,"x_min":106,"x_max":729,"o":"m 127 623 q 168 642 149 642 q 190 631 182 642 l 397 399 q 404 382 404 393 q 397 366 404 374 l 190 134 q 168 123 182 123 q 127 142 149 123 q 106 177 106 161 q 116 199 106 188 l 283 382 l 116 566 q 106 588 106 577 q 127 623 106 604 m 453 623 q 494 642 475 642 q 515 631 507 642 l 723 399 q 729 382 729 393 q 723 366 729 374 l 515 134 q 494 123 507 123 q 453 142 475 123 q 432 177 432 161 q 441 199 432 188 l 608 382 l 441 566 q 432 588 432 577 q 453 623 432 604 z "},"‹":{"ha":833,"x_min":267,"x_max":564,"o":"m 543 623 q 564 588 564 604 q 554 566 564 577 l 387 382 l 554 199 q 564 177 564 188 q 543 142 564 161 q 502 123 521 123 q 480 134 488 123 l 273 366 q 267 382 267 374 q 273 399 267 393 l 480 631 q 502 642 488 642 q 543 623 521 642 z "},"›":{"ha":833,"x_min":269,"x_max":566,"o":"m 290 623 q 331 642 312 642 q 353 631 345 642 l 560 399 q 566 382 566 393 q 560 366 566 374 l 353 134 q 331 123 345 123 q 290 142 312 123 q 269 177 269 161 q 279 199 269 188 l 446 382 l 279 566 q 269 588 269 577 q 290 623 269 604 z "},"„":{"ha":833,"x_min":130,"x_max":709,"o":"m 355 199 q 371 194 366 199 q 377 178 377 188 q 372 159 377 169 l 231 -151 q 176 -177 219 -177 q 142 -169 154 -177 q 130 -145 130 -161 q 132 -134 130 -142 l 197 174 q 231 199 203 199 l 355 199 m 687 199 q 704 194 698 199 q 709 178 709 188 q 705 159 709 169 l 564 -151 q 509 -177 551 -177 q 474 -169 486 -177 q 463 -145 463 -161 q 464 -134 463 -142 l 530 174 q 563 199 535 199 l 687 199 z "},"“":{"ha":833,"x_min":121,"x_max":701,"o":"m 144 510 q 127 516 133 510 q 121 531 121 522 q 126 550 121 541 l 267 860 q 322 886 279 886 q 356 878 345 886 q 368 854 368 870 q 367 844 368 852 l 301 536 q 268 510 296 510 l 144 510 m 476 510 q 459 516 465 510 q 454 531 454 522 q 458 550 454 541 l 600 860 q 654 886 612 886 q 689 878 677 886 q 701 854 701 870 q 699 844 701 852 l 633 536 q 600 510 628 510 l 476 510 z "},"”":{"ha":833,"x_min":130,"x_max":709,"o":"m 355 861 q 371 855 366 861 q 377 840 377 849 q 372 821 377 830 l 231 511 q 176 484 219 484 q 142 492 154 484 q 130 516 130 500 q 132 527 130 519 l 197 835 q 231 861 203 861 l 355 861 m 687 861 q 704 855 698 861 q 709 840 709 849 q 705 821 709 830 l 564 511 q 509 484 551 484 q 474 492 486 484 q 463 516 463 500 q 464 527 463 519 l 530 835 q 563 861 535 861 l 687 861 z "},"‘":{"ha":833,"x_min":288,"x_max":534,"o":"m 310 510 q 293 516 299 510 q 288 531 288 522 q 292 550 288 541 l 433 860 q 488 886 446 886 q 523 878 511 886 q 534 854 534 870 q 533 844 534 852 l 467 536 q 434 510 462 510 l 310 510 z "},"’":{"ha":833,"x_min":296,"x_max":543,"o":"m 521 861 q 537 855 532 861 q 543 840 543 849 q 538 821 543 830 l 397 511 q 342 484 385 484 q 308 492 320 484 q 296 516 296 500 q 298 527 296 519 l 363 835 q 397 861 369 861 l 521 861 z "},"‚":{"ha":833,"x_min":296,"x_max":543,"o":"m 521 199 q 537 194 532 199 q 543 178 543 188 q 538 159 543 169 l 397 -151 q 342 -177 385 -177 q 308 -169 320 -177 q 296 -145 296 -161 q 298 -134 296 -142 l 363 174 q 397 199 369 199 l 521 199 z "}," ":{"ha":833,"x_min":0,"x_max":0,"o":""},"¢":{"ha":833,"x_min":100,"x_max":728,"o":"m 716 240 q 728 205 728 220 q 706 167 728 182 q 603 112 661 134 q 484 83 546 90 l 484 -41 q 473 -74 484 -64 q 437 -85 462 -85 q 400 -74 412 -85 q 389 -41 389 -64 l 389 82 q 237 134 302 90 q 135 250 171 178 q 100 408 100 321 q 135 567 100 496 q 237 682 171 638 q 389 734 302 726 l 389 846 q 400 879 389 869 q 437 890 412 890 q 473 879 462 890 q 484 846 484 869 l 484 733 q 690 662 598 722 q 713 623 713 647 q 703 589 713 608 q 668 562 690 562 q 643 570 655 562 q 484 632 570 621 l 484 184 q 654 256 581 199 q 680 266 668 266 q 716 240 701 266 m 207 408 q 229 301 207 349 q 293 222 252 252 q 389 183 334 191 l 389 633 q 293 595 334 625 q 229 516 252 564 q 207 408 207 467 z "},"¤":{"ha":833,"x_min":75,"x_max":758,"o":"m 742 152 q 758 122 758 136 q 738 87 758 106 q 703 67 718 67 q 673 83 688 67 l 576 180 q 416 134 506 134 q 257 180 327 134 l 160 83 q 130 67 144 67 q 95 87 115 67 q 75 122 75 106 q 91 152 75 136 l 187 248 q 138 408 138 317 q 187 568 138 499 l 91 665 q 75 694 75 680 q 95 730 75 710 q 130 749 115 749 q 160 734 144 749 l 257 637 q 416 682 327 682 q 576 637 506 682 l 673 734 q 703 749 688 749 q 738 730 718 749 q 758 694 758 710 q 742 665 758 680 l 646 568 q 694 408 694 499 q 646 248 694 317 l 742 152 m 239 408 q 261 317 239 357 q 324 253 283 276 q 416 231 364 231 q 509 253 469 231 q 572 317 549 276 q 594 408 594 357 q 572 500 594 459 q 509 563 549 541 q 416 586 469 586 q 324 563 364 586 q 261 500 283 541 q 239 408 239 459 z "},"$":{"ha":833,"x_min":121,"x_max":711,"o":"m 412 890 q 449 879 437 890 q 460 846 460 869 l 460 732 q 655 677 571 720 q 682 639 682 664 q 675 610 682 625 q 639 576 660 576 q 618 582 632 576 q 460 633 544 621 l 460 463 q 600 435 547 454 q 681 379 652 416 q 711 283 711 343 q 682 179 711 224 q 597 109 654 134 q 460 80 541 83 l 460 -41 q 449 -74 460 -64 q 412 -85 437 -85 q 376 -74 387 -85 q 365 -41 365 -64 l 365 84 q 147 148 243 96 q 121 186 121 163 q 129 216 121 199 q 165 248 145 248 q 186 242 176 248 q 365 183 269 197 l 365 370 q 231 399 278 380 q 156 452 182 418 q 129 543 129 487 q 159 645 129 602 q 243 711 189 688 q 365 736 296 734 l 365 846 q 376 879 365 869 q 412 890 387 890 m 365 637 q 268 610 302 634 q 233 543 233 585 q 264 495 233 511 q 365 472 294 479 l 365 637 m 460 179 q 569 211 532 183 q 606 283 606 238 q 571 336 606 319 q 460 361 536 354 l 460 179 z "},"€":{"ha":833,"x_min":61,"x_max":755,"o":"m 688 143 q 711 151 701 151 q 747 121 732 151 q 755 88 755 101 q 730 50 755 65 q 611 0 669 16 q 484 -15 553 -15 q 283 55 363 -15 q 173 251 203 125 l 104 251 q 71 262 81 251 q 61 300 61 273 q 71 337 61 326 q 104 349 81 349 l 158 349 q 156 403 156 375 q 158 461 156 433 l 104 461 q 71 472 81 461 q 61 510 61 484 q 71 548 61 536 q 104 559 81 559 l 174 559 q 285 751 205 682 q 484 820 365 820 q 611 805 553 820 q 730 755 669 789 q 755 717 755 740 q 747 684 755 704 q 711 654 732 654 q 688 662 701 654 q 589 706 638 692 q 484 720 541 720 q 357 678 408 720 q 281 559 306 636 l 519 559 q 552 548 542 559 q 562 510 562 536 q 552 472 562 484 q 519 461 542 461 l 263 461 q 260 403 260 437 q 262 349 260 375 l 519 349 q 552 337 542 349 q 562 300 562 326 q 552 262 562 273 q 519 251 542 251 l 280 251 q 356 129 304 172 q 484 85 408 85 q 589 99 541 85 q 688 143 638 113 z "},"ƒ":{"ha":833,"x_min":22,"x_max":781,"o":"m 753 872 q 781 838 781 863 q 777 812 781 826 q 739 772 766 772 q 724 774 731 772 q 607 794 662 794 q 523 763 555 794 q 484 667 491 731 l 475 575 l 633 575 q 666 564 656 575 q 676 526 676 553 q 666 489 676 500 q 633 477 656 477 l 465 477 l 420 28 q 349 -133 409 -76 q 193 -189 290 -189 q 50 -168 116 -189 q 22 -134 22 -159 q 26 -108 22 -122 q 65 -68 37 -68 q 80 -71 73 -68 q 197 -90 142 -90 q 281 -59 249 -90 q 319 37 313 -27 l 363 477 l 231 477 q 198 489 208 477 q 188 526 188 500 q 198 564 188 553 q 231 575 208 575 l 374 575 l 384 676 q 454 837 395 780 q 610 893 514 893 q 753 872 688 893 z "},"₣":{"ha":833,"x_min":34,"x_max":705,"o":"m 663 805 q 695 794 686 805 q 705 756 705 783 q 695 719 705 730 q 663 707 686 707 l 268 707 l 268 477 l 585 477 q 617 466 608 477 q 627 429 627 455 q 617 391 627 402 q 585 380 608 380 l 268 380 l 268 254 l 465 254 q 497 242 488 254 q 507 205 507 231 q 497 167 507 178 q 465 156 488 156 l 268 156 l 268 37 q 257 3 268 14 q 218 -7 245 -7 l 216 -7 q 177 3 189 -7 q 166 37 166 14 l 166 156 l 77 156 q 44 167 54 156 q 34 205 34 178 q 44 242 34 231 q 77 254 54 254 l 166 254 l 166 759 q 177 794 166 784 q 209 805 187 805 l 663 805 z "},"£":{"ha":833,"x_min":149,"x_max":663,"o":"m 621 98 q 653 86 644 98 q 663 49 663 75 q 653 11 663 22 q 621 0 644 0 l 209 0 q 183 21 194 0 q 172 64 172 41 q 175 80 172 73 q 185 94 178 87 q 267 199 243 151 q 291 302 291 248 q 287 342 291 323 l 192 342 q 159 353 169 342 q 149 391 149 364 q 159 428 149 417 q 192 439 169 439 l 248 439 q 209 525 221 492 q 197 600 197 559 q 225 712 197 662 q 306 791 254 762 q 426 820 358 820 q 627 761 533 820 q 650 726 650 747 q 640 692 650 712 q 604 663 623 663 q 581 671 593 663 q 425 720 508 720 q 359 704 388 720 q 316 660 331 688 q 301 600 301 633 q 311 544 301 571 q 342 479 321 517 l 361 439 l 553 439 q 586 428 576 439 q 595 391 595 417 q 586 353 595 364 q 553 342 576 342 l 391 342 q 394 302 394 326 q 309 98 394 194 l 621 98 z "},"₩":{"ha":833,"x_min":-20,"x_max":853,"o":"m 810 511 q 843 500 833 511 q 853 463 853 489 q 843 425 853 436 q 810 414 833 414 l 733 414 l 680 29 q 663 -5 677 5 q 622 -15 649 -15 q 554 29 570 -15 l 414 427 l 273 29 q 205 -15 258 -15 q 164 -5 178 -15 q 147 29 151 5 l 94 414 l 22 414 q -11 425 -1 414 q -20 463 -20 436 q -11 500 -20 489 q 22 511 -1 511 l 81 511 l 46 761 q 45 773 45 765 q 56 799 45 790 q 92 811 67 808 q 105 812 96 812 q 135 803 125 812 q 147 772 144 793 l 180 511 l 342 511 l 363 573 q 380 593 368 587 q 414 600 392 600 q 447 593 435 600 q 464 573 459 587 l 486 511 l 647 511 l 680 772 q 692 803 683 793 q 722 812 702 812 q 736 811 731 812 q 771 799 760 808 q 782 773 782 790 q 781 761 782 765 l 747 511 l 810 511 m 307 414 l 193 414 l 223 175 l 307 414 m 635 414 l 520 414 l 604 175 l 635 414 z "},"¥":{"ha":833,"x_min":85,"x_max":748,"o":"m 715 805 q 740 789 732 798 q 748 770 748 781 q 738 743 748 759 l 581 505 l 688 505 q 721 493 711 505 q 731 456 731 482 q 721 418 731 429 q 688 407 711 407 l 517 407 l 467 330 l 467 294 l 675 294 q 708 283 698 294 q 718 245 718 272 q 708 208 718 219 q 675 197 698 197 l 467 197 l 467 37 q 456 3 467 14 q 417 -7 445 -7 l 416 -7 q 377 3 388 -7 q 366 37 366 14 l 366 197 l 158 197 q 125 208 135 197 q 115 245 115 219 q 125 283 115 272 q 158 294 135 294 l 366 294 l 366 330 l 315 407 l 144 407 q 112 418 121 407 q 102 456 102 429 q 112 493 102 482 q 144 505 121 505 l 252 505 l 95 743 q 85 770 85 759 q 93 789 85 781 q 117 805 100 798 q 153 814 140 814 q 185 795 173 814 l 416 438 l 648 795 q 680 814 661 814 q 715 805 693 814 z "},"≈":{"ha":833,"x_min":102,"x_max":731,"o":"m 283 634 q 357 620 323 634 q 435 578 391 606 q 498 545 474 555 q 549 534 523 534 q 654 591 607 534 q 680 604 665 604 q 709 592 695 604 q 731 557 731 576 q 726 540 731 547 q 648 457 694 488 q 549 427 602 427 q 476 441 510 427 q 397 482 442 455 q 334 516 359 505 q 283 527 309 527 q 178 470 226 527 q 153 457 168 457 q 123 469 138 457 q 102 504 102 485 q 106 521 102 513 q 184 603 138 572 q 283 634 231 634 m 283 363 q 357 349 323 363 q 435 307 391 334 q 498 273 474 284 q 549 262 523 262 q 654 319 607 262 q 680 332 665 332 q 709 321 695 332 q 731 286 731 304 q 726 269 731 276 q 648 186 694 217 q 549 155 602 155 q 476 170 510 155 q 397 211 442 184 q 334 244 359 233 q 283 256 309 256 q 178 199 226 256 q 153 186 168 186 q 123 197 138 186 q 102 233 102 214 q 106 250 102 242 q 184 332 138 301 q 283 363 231 363 z "},"~":{"ha":833,"x_min":102,"x_max":731,"o":"m 283 498 q 357 484 323 498 q 435 443 391 470 q 498 409 474 420 q 549 398 523 398 q 654 455 607 398 q 680 468 665 468 q 709 456 695 468 q 731 421 731 440 q 726 404 731 412 q 648 322 694 353 q 549 291 602 291 q 476 305 510 291 q 397 347 442 319 q 334 380 359 369 q 283 391 309 391 q 178 334 226 391 q 153 321 168 321 q 123 333 138 321 q 102 368 102 349 q 106 385 102 378 q 184 468 138 437 q 283 498 231 498 z "},"÷":{"ha":833,"x_min":115,"x_max":718,"o":"m 416 715 q 471 706 454 715 q 488 673 488 696 l 488 602 q 471 569 488 579 q 416 559 454 559 q 362 569 378 559 q 345 602 345 579 l 345 673 q 362 706 345 696 q 416 715 378 715 m 675 444 q 708 432 698 444 q 718 395 718 421 q 708 357 718 368 q 675 346 698 346 l 158 346 q 125 357 135 346 q 115 395 115 368 q 125 432 115 421 q 158 444 135 444 l 675 444 m 416 231 q 471 221 454 231 q 488 188 488 211 l 488 117 q 471 84 488 94 q 416 75 454 75 q 362 84 378 75 q 345 117 345 94 l 345 188 q 362 221 345 211 q 416 231 378 231 z "},"=":{"ha":833,"x_min":115,"x_max":718,"o":"m 675 579 q 708 568 698 579 q 718 530 718 557 q 708 493 718 504 q 675 481 698 481 l 158 481 q 125 493 135 481 q 115 530 115 504 q 125 568 115 557 q 158 579 135 579 l 675 579 m 675 308 q 708 297 698 308 q 718 259 718 286 q 708 221 718 233 q 675 210 698 210 l 158 210 q 125 221 135 210 q 115 259 115 233 q 125 297 115 286 q 158 308 135 308 l 675 308 z "},">":{"ha":833,"x_min":119,"x_max":748,"o":"m 146 614 q 119 650 119 627 q 127 678 119 662 q 166 710 142 710 q 189 704 177 710 l 716 446 q 741 426 733 437 q 748 395 748 415 q 741 365 748 376 q 716 345 733 354 l 189 87 q 166 81 177 81 q 127 113 142 81 q 119 141 119 129 q 146 177 119 163 l 602 395 l 146 614 z "},"≥":{"ha":833,"x_min":115,"x_max":718,"o":"m 682 566 q 718 512 718 553 q 682 458 718 471 l 182 261 q 161 257 170 257 q 121 292 135 257 q 116 317 116 305 q 149 355 116 343 l 564 512 l 149 669 q 116 707 116 681 q 121 732 116 719 q 161 767 135 767 q 182 763 171 767 l 682 566 m 675 172 q 708 161 698 172 q 718 123 718 150 q 708 86 718 97 q 675 75 698 75 l 158 75 q 125 86 135 75 q 115 123 115 97 q 125 161 115 150 q 158 172 135 172 l 675 172 z "},"∞":{"ha":833,"x_min":19,"x_max":814,"o":"m 624 591 q 721 565 677 591 q 789 494 764 539 q 814 395 814 450 q 789 295 814 340 q 721 224 764 250 q 624 199 677 199 q 507 232 554 199 q 416 326 460 266 q 326 232 372 266 q 209 199 279 199 q 112 224 155 199 q 44 295 68 250 q 19 395 19 340 q 44 494 19 450 q 112 565 68 539 q 209 591 155 591 q 326 557 279 591 q 416 463 373 524 q 507 557 460 524 q 624 591 554 591 m 211 500 q 139 470 166 500 q 113 395 113 440 q 139 319 113 349 q 211 290 166 290 q 296 317 260 290 q 369 395 332 344 q 296 473 332 446 q 211 500 260 500 m 622 500 q 536 472 572 500 q 464 395 500 445 q 536 317 500 344 q 622 290 572 290 q 693 319 667 290 q 720 395 720 349 q 693 470 720 440 q 622 500 667 500 z "},"∫":{"ha":833,"x_min":3,"x_max":829,"o":"m 614 1029 q 712 1018 664 1029 q 804 989 761 1008 q 823 976 817 984 q 829 956 829 968 q 825 932 829 945 q 790 892 813 892 q 778 895 787 892 q 616 930 688 930 q 506 881 545 930 q 467 744 467 833 l 467 -1 q 437 -148 467 -85 q 351 -244 407 -210 q 218 -278 295 -278 q 120 -268 169 -278 q 29 -239 72 -257 q 9 -225 16 -233 q 3 -205 3 -217 q 7 -181 3 -195 q 43 -142 20 -142 q 55 -144 45 -142 q 217 -179 144 -179 q 327 -131 288 -179 q 366 7 366 -82 l 366 752 q 396 899 366 836 q 482 995 426 961 q 614 1029 538 1029 z "},"<":{"ha":833,"x_min":85,"x_max":714,"o":"m 686 177 q 714 141 714 163 q 706 113 714 129 q 667 81 690 81 q 644 87 656 81 l 117 345 q 92 365 100 354 q 85 395 85 376 q 92 426 85 415 q 117 446 100 437 l 644 704 q 667 710 656 710 q 706 678 690 710 q 714 650 714 662 q 686 614 714 627 l 231 395 l 686 177 z "},"≤":{"ha":833,"x_min":115,"x_max":718,"o":"m 651 763 q 672 767 663 767 q 711 732 698 767 q 717 707 717 719 q 684 669 717 681 l 269 512 l 684 355 q 717 317 717 343 q 711 292 717 305 q 672 257 698 257 q 651 261 663 257 l 151 458 q 115 512 115 471 q 151 566 115 553 l 651 763 m 675 172 q 708 161 698 172 q 718 123 718 150 q 708 86 718 97 q 675 75 698 75 l 158 75 q 125 86 135 75 q 115 123 115 97 q 125 161 115 150 q 158 172 135 172 l 675 172 z "},"¬":{"ha":833,"x_min":95,"x_max":731,"o":"m 688 576 q 721 565 711 576 q 731 530 731 555 l 731 260 q 720 226 731 236 q 680 216 708 216 q 641 226 652 216 q 629 260 629 236 l 629 478 l 138 478 q 105 489 115 478 q 95 527 95 500 q 105 565 95 553 q 138 576 115 576 l 688 576 z "},"−":{"ha":833,"x_min":115,"x_max":718,"o":"m 675 444 q 708 432 698 444 q 718 395 718 421 q 708 357 718 368 q 675 346 698 346 l 158 346 q 125 357 135 346 q 115 395 115 368 q 125 432 115 421 q 158 444 135 444 l 675 444 z "},"×":{"ha":833,"x_min":157,"x_max":676,"o":"m 661 220 q 676 190 676 204 q 656 155 676 174 q 621 135 637 135 q 591 151 607 135 l 416 326 l 241 151 q 212 135 226 135 q 176 155 196 135 q 157 190 157 174 q 172 220 157 204 l 347 395 l 172 570 q 157 600 157 585 q 176 635 157 615 q 212 654 196 654 q 241 639 226 654 l 416 464 l 591 639 q 621 654 607 654 q 656 635 637 654 q 676 600 676 615 q 661 570 676 585 l 486 395 l 661 220 z "},"≠":{"ha":833,"x_min":115,"x_max":718,"o":"m 675 308 q 708 297 698 308 q 718 259 718 286 q 708 221 718 233 q 675 210 698 210 l 368 210 l 285 70 q 270 52 277 58 q 253 46 262 46 q 223 56 240 46 q 197 90 197 71 q 206 117 197 102 l 261 210 l 158 210 q 125 221 135 210 q 115 259 115 233 q 125 297 115 286 q 158 308 135 308 l 311 308 l 414 481 l 158 481 q 125 493 135 481 q 115 530 115 504 q 125 568 115 557 q 158 579 135 579 l 465 579 l 548 720 q 563 738 555 732 q 580 743 570 743 q 610 733 593 743 q 636 699 636 718 q 627 672 636 688 l 572 579 l 675 579 q 708 568 698 579 q 718 530 718 557 q 708 493 718 504 q 675 481 698 481 l 521 481 l 418 308 l 675 308 z "},"∂":{"ha":833,"x_min":113,"x_max":711,"o":"m 437 820 q 574 786 512 820 q 674 680 636 751 q 711 503 711 609 q 691 336 711 427 q 634 169 671 244 q 520 30 589 75 q 357 -16 452 -16 q 229 16 284 -16 q 143 102 174 47 q 113 227 113 157 q 148 367 113 306 q 244 462 183 429 q 381 496 305 496 q 515 459 458 496 q 600 357 572 423 q 616 491 616 431 q 570 656 616 597 q 435 715 524 715 q 335 699 391 715 q 325 698 332 698 q 305 706 314 698 q 288 735 296 715 q 282 762 282 751 q 303 793 282 784 q 437 820 365 820 m 390 395 q 298 374 337 395 q 239 315 260 353 q 218 226 218 277 q 256 124 218 162 q 356 85 294 85 q 481 124 430 86 q 566 239 532 161 q 506 352 553 308 q 390 395 460 395 z "},"%":{"ha":833,"x_min":34,"x_max":799,"o":"m 220 820 q 313 795 270 820 q 380 727 355 770 q 406 634 406 684 q 380 541 406 584 q 313 473 355 498 q 220 448 270 448 q 127 473 170 448 q 59 541 84 498 q 34 634 34 584 q 59 727 34 684 q 127 795 84 770 q 220 820 170 820 m 680 718 q 711 733 695 733 q 745 715 728 733 q 762 682 762 696 q 745 650 762 666 l 153 87 q 122 73 138 73 q 88 91 104 73 q 71 124 71 109 q 87 155 71 140 l 680 718 m 220 732 q 171 719 193 732 q 135 683 149 705 q 122 634 122 661 q 135 585 122 608 q 171 550 149 563 q 220 536 193 536 q 269 550 246 536 q 304 585 291 563 q 317 634 317 608 q 304 683 317 661 q 269 719 291 705 q 220 732 246 732 m 613 357 q 706 332 663 357 q 774 264 749 307 q 799 171 799 221 q 774 78 799 121 q 706 10 749 35 q 613 -15 663 -15 q 520 10 563 -15 q 452 78 477 35 q 427 171 427 121 q 452 264 427 221 q 520 332 477 307 q 613 357 563 357 m 613 269 q 564 255 587 269 q 529 220 542 242 q 515 171 515 197 q 529 122 515 144 q 564 86 542 100 q 613 73 587 73 q 662 86 640 73 q 697 122 684 100 q 711 171 711 144 q 697 220 711 197 q 662 255 684 242 q 613 269 640 269 z "},"‰":{"ha":833,"x_min":34,"x_max":1082,"o":"m 220 820 q 313 795 270 820 q 380 727 355 770 q 406 634 406 684 q 380 541 406 584 q 313 473 355 498 q 220 448 270 448 q 127 473 170 448 q 59 541 84 498 q 34 634 34 584 q 59 727 34 684 q 127 795 84 770 q 220 820 170 820 m 680 718 q 711 733 695 733 q 745 715 728 733 q 762 682 762 696 q 745 650 762 666 l 153 87 q 122 73 138 73 q 88 91 104 73 q 71 124 71 109 q 87 155 71 140 l 680 718 m 220 732 q 171 719 193 732 q 135 683 149 705 q 122 634 122 661 q 135 585 122 608 q 171 550 149 563 q 220 536 193 536 q 269 550 246 536 q 304 585 291 563 q 317 634 317 608 q 304 683 317 661 q 269 719 291 705 q 220 732 246 732 m 897 357 q 989 332 947 357 q 1057 264 1032 307 q 1082 171 1082 221 q 1057 78 1082 121 q 989 10 1032 35 q 897 -15 947 -15 q 816 4 853 -15 q 755 56 779 23 q 693 4 730 22 q 613 -15 656 -15 q 520 10 563 -15 q 452 78 477 35 q 427 171 427 121 q 452 264 427 221 q 520 332 477 307 q 613 357 563 357 q 693 338 656 357 q 755 286 730 319 q 816 338 779 319 q 897 357 853 357 m 613 269 q 564 255 587 269 q 529 220 542 242 q 515 171 515 197 q 529 122 515 144 q 564 86 542 100 q 613 73 587 73 q 662 86 640 73 q 697 122 684 100 q 711 171 711 144 q 697 220 711 197 q 662 255 684 242 q 613 269 640 269 m 897 269 q 848 255 870 269 q 812 220 825 242 q 799 171 799 197 q 812 122 799 144 q 848 86 825 100 q 897 73 870 73 q 945 86 923 73 q 981 122 968 100 q 994 171 994 144 q 981 220 994 197 q 945 255 968 242 q 897 269 923 269 z "},"+":{"ha":833,"x_min":115,"x_max":718,"o":"m 675 444 q 708 432 698 444 q 718 395 718 421 q 708 357 718 368 q 675 346 698 346 l 465 346 l 465 136 q 454 103 465 113 q 416 94 443 94 q 379 103 390 94 q 368 136 368 113 l 368 346 l 158 346 q 125 357 135 346 q 115 395 115 368 q 125 432 115 421 q 158 444 135 444 l 368 444 l 368 653 q 379 686 368 676 q 416 696 390 696 q 454 686 443 696 q 465 653 465 676 l 465 444 l 675 444 z "},"±":{"ha":833,"x_min":115,"x_max":718,"o":"m 158 454 q 125 466 135 454 q 115 503 115 477 q 125 541 115 530 q 158 552 135 552 l 368 552 l 368 721 q 379 754 368 744 q 416 764 390 764 q 454 754 443 764 q 465 721 465 744 l 465 552 l 675 552 q 708 541 698 552 q 718 503 718 530 q 708 466 718 477 q 675 454 698 454 l 465 454 l 465 286 q 454 253 465 262 q 416 243 443 243 q 379 253 390 243 q 368 286 368 262 l 368 454 l 158 454 m 675 172 q 708 161 698 172 q 718 123 718 150 q 708 86 718 97 q 675 75 698 75 l 158 75 q 125 86 135 75 q 115 123 115 97 q 125 161 115 150 q 158 172 135 172 l 675 172 z "},"∏":{"ha":833,"x_min":132,"x_max":701,"o":"m 658 805 q 691 794 681 805 q 701 759 701 784 l 701 37 q 689 3 701 14 q 650 -7 678 -7 l 649 -7 q 610 3 621 -7 q 599 37 599 14 l 599 707 l 234 707 l 234 37 q 223 3 234 14 q 184 -7 212 -7 l 182 -7 q 143 3 155 -7 q 132 37 132 14 l 132 759 q 142 794 132 784 q 175 805 152 805 l 658 805 z "},"√":{"ha":833,"x_min":79,"x_max":749,"o":"m 710 806 q 740 791 730 800 q 749 769 749 782 q 745 748 749 760 l 488 29 q 462 -5 479 5 q 416 -15 445 -15 q 369 -4 387 -15 q 342 29 352 6 l 212 346 l 121 346 q 89 357 98 346 q 79 395 79 368 q 89 432 79 421 q 121 444 98 444 l 252 444 q 276 438 267 444 q 290 422 286 433 l 413 123 l 646 781 q 661 804 652 797 q 683 812 669 812 q 710 806 692 812 z "},"∑":{"ha":833,"x_min":112,"x_max":705,"o":"m 416 1218 l 416 1218 l 416 1219 l 416 1219 l 416 1218 m 649 805 q 682 794 672 805 q 692 756 692 783 q 682 719 692 730 q 649 707 672 707 l 273 707 l 495 433 q 503 412 503 423 q 495 391 503 401 l 259 98 l 663 98 q 695 86 686 98 q 705 49 705 75 q 695 11 705 22 q 663 0 686 0 l 156 0 q 122 11 133 0 q 112 46 112 21 q 123 82 112 68 l 387 412 l 134 726 q 125 759 125 735 q 136 794 125 784 q 170 805 146 805 l 649 805 m 416 -568 l 416 -568 l 416 -568 l 416 -568 l 416 -568 z "},"◊":{"ha":833,"x_min":139,"x_max":693,"o":"m 416 820 q 459 810 444 820 q 488 776 475 800 l 688 422 q 693 402 693 414 q 688 382 693 391 l 488 29 q 459 -5 475 5 q 416 -15 444 -15 q 373 -5 389 -15 q 345 29 358 5 l 144 382 q 139 402 139 393 q 144 422 139 412 l 345 776 q 373 810 358 800 q 416 820 389 820 m 250 402 l 416 107 l 583 402 l 416 698 l 250 402 z "},"|":{"ha":833,"x_min":366,"x_max":467,"o":"m 416 945 q 456 935 444 945 q 467 901 467 925 l 467 -197 q 456 -231 467 -220 q 416 -241 444 -241 q 377 -231 389 -241 q 366 -197 366 -220 l 366 901 q 377 935 366 925 q 416 945 389 945 z "},"¦":{"ha":833,"x_min":366,"x_max":467,"o":"m 416 945 q 456 935 444 945 q 467 901 467 925 l 467 495 q 456 461 467 471 q 416 451 444 451 q 377 461 389 451 q 366 495 366 471 l 366 901 q 377 935 366 925 q 416 945 389 945 m 416 254 q 456 243 444 254 q 467 210 467 233 l 467 -197 q 456 -231 467 -220 q 416 -241 444 -241 q 377 -231 389 -241 q 366 -197 366 -220 l 366 210 q 377 243 366 233 q 416 254 389 254 z "},"@":{"ha":833,"x_min":34,"x_max":793,"o":"m 448 731 q 630 684 551 731 q 751 553 708 637 q 793 360 793 469 q 770 221 793 281 q 703 126 746 160 q 603 93 659 93 q 527 115 559 93 q 480 180 496 138 q 413 112 445 135 q 338 90 381 90 q 278 108 305 90 q 235 160 250 126 q 219 242 219 195 q 248 372 219 304 q 327 487 277 441 q 434 532 376 532 q 521 465 492 532 l 542 507 q 559 515 546 515 q 582 510 569 515 q 603 497 595 505 q 608 479 611 488 l 556 274 q 551 239 551 256 q 565 194 551 210 q 602 178 578 178 q 682 228 653 178 q 711 360 711 278 q 679 513 711 448 q 586 613 646 578 q 444 648 526 648 q 277 597 352 648 q 160 459 202 547 q 117 264 117 372 q 148 113 117 177 q 237 14 178 49 q 380 -20 296 -20 q 472 -14 427 -20 q 553 5 517 -7 q 560 6 558 6 q 588 -24 579 6 q 591 -43 591 -37 q 575 -68 591 -62 q 487 -94 538 -85 q 381 -104 436 -104 q 195 -59 273 -104 q 76 68 117 -15 q 34 264 34 151 q 88 502 34 395 q 236 670 142 609 q 448 731 330 731 m 431 446 q 378 416 407 446 q 330 339 349 386 q 311 243 311 292 q 323 196 311 212 q 355 180 335 180 q 418 211 389 180 q 465 289 448 242 q 483 380 483 336 q 469 429 483 412 q 431 446 456 446 z "},"&":{"ha":833,"x_min":113,"x_max":734,"o":"m 721 61 q 734 35 734 46 q 705 0 734 16 q 669 -12 684 -12 q 640 3 654 -12 l 559 92 q 343 -15 467 -15 q 220 16 272 -15 q 141 97 168 46 q 113 210 113 149 q 148 333 113 279 q 246 431 182 387 q 179 604 179 507 q 207 713 179 664 q 286 791 235 763 q 406 820 338 820 q 607 761 513 820 q 630 726 630 747 q 619 692 630 712 q 583 663 603 663 q 560 671 573 663 q 405 720 488 720 q 340 704 368 720 q 298 662 313 688 q 283 604 283 635 q 298 536 283 568 q 341 473 313 505 l 545 252 q 602 406 578 319 q 616 431 607 423 q 642 438 625 438 q 663 436 651 438 q 694 424 685 433 q 704 402 704 416 q 701 380 704 394 q 616 174 664 257 l 721 61 m 343 85 q 491 164 427 85 l 311 359 q 240 291 262 327 q 218 210 218 255 q 234 146 218 175 q 278 102 250 118 q 343 85 307 85 z "},"¶":{"ha":833,"x_min":89,"x_max":758,"o":"m 715 805 q 748 794 738 805 q 758 756 758 783 q 748 719 758 730 q 715 707 738 707 l 669 707 l 669 -234 q 657 -268 669 -258 q 618 -278 646 -278 q 578 -268 590 -278 q 567 -234 567 -258 l 567 707 l 458 707 l 458 -234 q 447 -268 458 -258 q 408 -278 435 -278 q 368 -268 380 -278 q 357 -234 357 -258 l 357 340 q 217 371 277 343 q 122 451 156 399 q 89 572 89 503 q 124 697 89 644 q 224 777 160 749 q 372 805 288 805 l 715 805 z "},"©":{"ha":833,"x_min":24,"x_max":808,"o":"m 416 820 q 619 765 530 820 q 758 614 708 709 q 808 403 808 518 q 758 192 808 288 q 618 41 708 96 q 416 -15 529 -15 q 214 41 304 -15 q 75 192 125 96 q 24 403 24 288 q 75 614 24 518 q 214 765 125 709 q 416 820 303 820 m 416 739 q 256 695 326 739 q 146 575 185 652 q 107 403 107 499 q 146 230 107 307 q 256 110 185 153 q 416 66 326 66 q 577 110 507 66 q 687 230 648 153 q 726 403 726 307 q 687 575 726 499 q 577 695 648 652 q 416 739 507 739 m 427 635 q 489 628 457 635 q 549 608 520 621 q 570 593 563 602 q 576 572 576 585 q 572 550 576 562 q 542 523 561 523 q 522 528 534 523 q 474 545 496 540 q 427 550 452 550 q 338 512 373 550 q 304 402 304 473 q 338 293 304 331 q 427 254 373 254 q 474 259 452 254 q 522 276 496 264 q 542 281 534 281 q 572 254 561 281 q 576 232 576 243 q 570 211 576 220 q 549 196 563 203 q 489 176 520 183 q 427 169 457 169 q 316 197 365 169 q 241 278 268 225 q 214 402 214 330 q 241 527 214 474 q 316 607 268 579 q 427 635 365 635 z "},"®":{"ha":833,"x_min":90,"x_max":743,"o":"m 416 905 q 585 859 511 905 q 702 733 660 812 q 743 557 743 654 q 702 381 743 461 q 585 255 660 302 q 416 209 511 209 q 248 255 322 209 q 131 381 173 302 q 90 557 90 461 q 131 733 90 654 q 248 859 173 812 q 416 905 322 905 m 416 837 q 282 801 341 837 q 191 701 224 765 q 159 557 159 637 q 191 413 159 477 q 282 313 224 349 q 416 277 341 277 q 550 313 492 277 q 642 413 609 349 q 674 557 674 477 q 642 701 674 637 q 550 801 609 765 q 416 837 492 837 m 429 740 q 502 724 471 740 q 550 680 533 708 q 566 614 566 651 q 545 543 566 572 q 484 500 524 514 l 545 435 q 559 406 559 419 q 547 382 559 393 q 523 371 536 371 q 496 385 508 371 l 408 487 l 357 487 l 357 411 q 349 383 357 391 q 321 374 341 374 q 295 383 302 374 q 287 411 287 391 l 287 704 q 296 731 287 723 q 323 740 304 740 l 429 740 m 357 673 l 357 553 l 417 553 q 474 569 455 553 q 493 614 493 585 q 475 658 493 642 q 422 673 457 673 l 357 673 z "},"§":{"ha":833,"x_min":131,"x_max":702,"o":"m 702 226 q 681 147 702 181 q 620 83 661 113 q 633 7 633 50 q 612 -78 633 -41 q 549 -135 591 -115 q 447 -156 507 -156 l 226 -156 q 193 -145 203 -156 q 183 -107 183 -134 q 193 -70 183 -81 q 226 -58 203 -58 l 433 -58 q 505 -41 481 -58 q 529 9 529 -24 q 514 59 529 39 q 467 100 500 79 l 241 239 q 158 319 184 275 q 131 423 131 363 q 152 502 131 468 q 213 566 172 536 q 199 642 199 600 q 221 727 199 690 q 284 784 242 764 q 386 805 326 805 l 607 805 q 640 794 630 805 q 650 756 650 783 q 640 719 650 730 q 607 707 630 707 l 399 707 q 328 690 352 707 q 304 640 304 673 q 318 590 304 610 q 366 549 333 570 l 591 410 q 675 330 648 374 q 702 226 702 286 m 529 182 q 563 159 541 175 q 589 188 580 172 q 597 226 597 204 q 581 281 597 256 q 530 327 564 305 l 304 467 q 270 490 292 474 q 244 461 253 477 q 235 423 235 445 q 252 368 235 393 q 303 322 269 344 l 529 182 z "},"™":{"ha":833,"x_min":41,"x_max":863,"o":"m 795 897 q 829 886 818 897 q 842 852 840 876 l 862 551 q 855 517 863 528 q 823 507 846 507 q 791 517 800 507 q 781 551 782 527 l 768 727 l 705 597 q 684 573 697 581 q 656 564 671 564 q 628 573 642 564 q 608 597 615 581 l 544 727 l 532 551 q 522 517 531 527 q 490 507 513 507 q 458 517 467 507 q 451 551 450 528 l 471 852 q 484 886 473 876 q 518 897 495 897 q 560 879 552 897 l 656 676 l 753 879 q 795 897 761 897 m 342 890 q 375 881 366 890 q 385 849 385 871 q 375 818 385 827 q 342 809 366 809 l 255 809 l 255 551 q 245 517 255 528 q 213 507 236 507 q 180 517 190 507 q 171 551 171 528 l 171 809 l 83 809 q 51 818 60 809 q 41 849 41 827 q 51 881 41 871 q 83 890 60 890 l 342 890 z "},"°":{"ha":833,"x_min":167,"x_max":547,"o":"m 167 630 q 192 725 167 682 q 261 794 218 769 q 357 820 305 820 q 452 794 408 820 q 521 725 496 769 q 547 630 547 682 q 521 535 547 578 q 452 466 496 491 q 357 440 408 440 q 261 466 305 440 q 192 535 218 491 q 167 630 167 578 m 258 630 q 272 581 258 604 q 308 545 285 558 q 357 532 330 532 q 406 545 383 532 q 442 581 429 558 q 455 630 455 604 q 442 679 455 656 q 406 715 429 702 q 357 728 383 728 q 308 715 330 728 q 272 679 285 702 q 258 630 258 656 z "},"^":{"ha":833,"x_min":157,"x_max":675,"o":"m 416 820 q 446 814 435 820 q 463 795 456 808 l 671 394 q 675 380 675 388 q 666 359 675 368 q 644 346 657 351 q 614 340 629 340 q 591 345 601 340 q 577 357 582 349 l 416 683 l 256 357 q 241 345 251 349 q 219 340 232 340 q 192 345 208 340 q 167 359 177 350 q 157 380 157 368 q 161 394 157 387 l 370 795 q 387 814 377 808 q 416 820 397 820 z "},"†":{"ha":833,"x_min":197,"x_max":636,"o":"m 593 627 q 626 615 616 627 q 636 578 636 604 q 626 540 636 551 q 593 529 616 529 l 465 529 l 465 233 q 454 200 465 210 q 416 191 443 191 q 379 200 390 191 q 368 233 368 210 l 368 529 l 239 529 q 207 540 216 529 q 197 578 197 551 q 207 615 197 604 q 239 627 216 627 l 368 627 l 368 777 q 379 810 368 800 q 416 820 390 820 q 454 810 443 820 q 465 777 465 800 l 465 627 l 593 627 z "},"‡":{"ha":833,"x_min":197,"x_max":636,"o":"m 593 407 q 626 396 616 407 q 636 358 636 385 q 626 320 636 332 q 593 309 616 309 l 465 309 l 465 193 q 454 160 465 170 q 416 150 443 150 q 379 160 390 150 q 368 193 368 170 l 368 309 l 239 309 q 207 320 216 309 q 197 358 197 332 q 207 396 197 385 q 239 407 216 407 l 368 407 l 368 563 l 239 563 q 207 574 216 563 q 197 612 197 585 q 207 649 197 638 q 239 661 216 661 l 368 661 l 368 777 q 379 810 368 800 q 416 820 390 820 q 454 810 443 820 q 465 777 465 800 l 465 661 l 593 661 q 626 649 616 661 q 636 612 636 638 q 626 574 636 585 q 593 563 616 563 l 465 563 l 465 407 l 593 407 z "},"′":{"ha":407,"x_min":0,"x_max":0,"o":""},"″":{"ha":407,"x_min":0,"x_max":0,"o":""},"´":{"ha":833,"x_min":283,"x_max":621,"o":"m 530 951 q 555 960 542 960 q 600 932 578 960 q 621 886 621 905 q 606 859 621 868 l 352 711 q 330 704 340 704 q 299 721 314 704 q 283 756 283 739 q 294 777 283 769 l 530 951 z "},"˘":{"ha":833,"x_min":194,"x_max":639,"o":"m 602 928 q 630 917 621 924 q 639 896 639 909 q 638 887 639 890 q 566 768 623 810 q 416 726 509 726 q 267 768 323 726 q 195 887 210 810 q 194 896 194 890 q 203 917 194 909 q 231 928 212 924 q 250 930 241 930 q 279 914 273 930 q 328 843 294 866 q 416 820 362 820 q 505 843 471 820 q 554 914 539 866 q 583 930 560 930 q 602 928 592 930 z "},"ˇ":{"ha":833,"x_min":200,"x_max":633,"o":"m 416 706 q 377 720 392 706 l 211 878 q 200 900 200 888 q 216 932 200 914 q 245 948 230 948 q 267 940 256 948 l 416 823 l 566 940 q 587 948 576 948 q 617 932 603 948 q 633 900 633 914 q 622 878 633 888 l 456 720 q 416 706 441 706 z "},"¸":{"ha":833,"x_min":238,"x_max":587,"o":"m 450 -77 q 553 -108 518 -76 q 587 -191 587 -140 q 545 -285 587 -250 q 421 -320 503 -320 q 332 -312 375 -320 q 254 -288 288 -304 q 238 -264 238 -281 q 243 -240 238 -254 q 275 -210 255 -210 q 283 -211 280 -210 q 348 -229 313 -222 q 414 -237 382 -237 q 469 -225 449 -237 q 488 -193 488 -214 q 470 -160 488 -171 q 410 -149 452 -149 l 383 -150 q 367 -143 373 -150 q 360 -120 360 -136 l 360 19 l 450 19 l 450 -77 z "},"ˆ":{"ha":833,"x_min":200,"x_max":633,"o":"m 416 947 q 456 933 441 947 l 622 775 q 633 753 633 765 q 617 721 633 739 q 587 705 603 705 q 566 713 576 705 l 416 830 l 267 713 q 245 705 256 705 q 216 721 230 705 q 200 753 200 739 q 211 775 200 765 l 377 933 q 416 947 392 947 z "},"¨":{"ha":833,"x_min":210,"x_max":623,"o":"m 274 924 q 325 915 311 924 q 338 880 338 905 l 338 792 q 325 758 338 768 q 274 748 311 748 q 223 758 237 748 q 210 792 210 768 l 210 880 q 223 915 210 905 q 274 924 237 924 m 559 924 q 610 915 596 924 q 623 880 623 905 l 623 792 q 610 758 623 768 q 559 748 596 748 q 508 758 522 748 q 494 792 494 768 l 494 880 q 508 915 494 905 q 559 924 522 924 z "},"˙":{"ha":833,"x_min":352,"x_max":481,"o":"m 416 924 q 467 915 454 924 q 481 880 481 905 l 481 792 q 467 758 481 768 q 416 748 454 748 q 366 758 379 748 q 352 792 352 768 l 352 880 q 366 915 352 905 q 416 924 379 924 z "},"`":{"ha":833,"x_min":212,"x_max":550,"o":"m 539 777 q 550 756 550 769 q 534 721 550 739 q 503 704 519 704 q 481 711 493 704 l 227 859 q 212 886 212 868 q 233 932 212 905 q 278 960 255 960 q 303 951 291 960 l 539 777 z "},"˝":{"ha":833,"x_min":215,"x_max":748,"o":"m 460 935 q 490 897 490 916 q 477 872 490 884 l 294 714 q 269 705 283 705 q 235 716 254 705 q 215 744 215 729 q 222 760 215 753 l 382 931 q 420 948 398 948 q 460 935 439 948 m 718 935 q 748 897 748 916 q 735 872 748 884 l 552 714 q 527 705 541 705 q 493 716 512 705 q 473 744 473 729 q 479 760 473 753 l 640 931 q 677 948 656 948 q 718 935 696 948 z "},"¯":{"ha":833,"x_min":197,"x_max":636,"o":"m 593 848 q 626 837 616 848 q 636 799 636 825 q 626 761 636 772 q 593 750 616 750 l 239 750 q 207 761 216 750 q 197 799 197 772 q 207 837 197 825 q 239 848 216 848 l 593 848 z "},"˛":{"ha":833,"x_min":279,"x_max":549,"o":"m 518 19 q 415 -90 446 -45 q 385 -176 385 -136 q 399 -213 385 -200 q 437 -226 413 -226 q 513 -214 472 -226 q 521 -213 519 -213 q 547 -250 541 -213 q 549 -267 549 -262 q 543 -290 549 -281 q 526 -302 537 -298 q 414 -320 475 -320 q 315 -285 351 -320 q 279 -191 279 -250 q 312 -85 279 -136 q 406 19 345 -34 l 518 19 z "},"˚":{"ha":833,"x_min":250,"x_max":583,"o":"m 416 1056 q 502 1034 463 1056 q 562 974 540 1013 q 583 889 583 936 q 562 804 583 842 q 502 744 540 766 q 416 722 463 722 q 331 744 370 722 q 271 804 293 766 q 250 889 250 842 q 271 974 250 936 q 331 1034 293 1013 q 416 1056 370 1056 m 416 966 q 360 945 381 966 q 339 889 339 924 q 360 833 339 854 q 416 812 381 812 q 473 833 452 812 q 494 889 494 854 q 473 945 494 924 q 416 966 452 966 z "},"˜":{"ha":833,"x_min":183,"x_max":650,"o":"m 335 892 q 378 885 359 892 q 425 867 397 879 q 465 850 448 855 q 498 844 481 844 q 541 856 520 844 q 584 890 562 867 q 604 899 592 899 q 635 882 621 899 q 650 851 650 867 q 640 827 650 838 q 571 764 608 785 q 498 743 534 743 q 455 750 474 743 q 408 768 435 756 q 368 785 385 780 q 334 791 352 791 q 292 779 313 791 q 249 745 271 768 q 229 736 241 736 q 197 753 212 736 q 183 784 183 768 q 193 808 183 797 q 262 871 225 850 q 335 892 299 892 z "},"̦":{"ha":0,"x_min":-515,"x_max":-345,"o":"m -363 -99 q -345 -117 -345 -99 q -349 -134 -345 -125 l -428 -331 q -468 -357 -438 -357 q -479 -356 -475 -357 q -515 -326 -515 -351 q -513 -315 -515 -323 l -471 -121 q -442 -99 -465 -99 l -363 -99 z "}},"familyName":"Courier Prime Sans","ascender":964,"descender":-436,"underlinePosition":-125,"underlineThickness":88,"boundingBox":{"yMin":-568,"xMin":-515,"yMax":1239,"xMax":2178},"resolution":1000,"original_font_information":{"format":0,"copyright":"Copyright (c) 2015 Quote-Unquote Apps.","fontFamily":"Courier Prime Sans","fontSubfamily":"Regular","uniqueID":"3.020;QUQA;CourierPrimeSans-Regular","fullName":"Courier Prime Sans","version":"Version 3.020","postScriptName":"CourierPrimeSans-Regular","manufacturer":"Quote-Unquote Apps","designer":"Alan Dague-Greene","manufacturerURL":"http://quoteunquoteapps.com","designerURL":"http://basicrecipe.com","licence":"Copyright (c) 2015\\nQuote-Unquote Apps (http://quoteunquoteapps.com)\\nwith Reserved Font Name Courier Prime Sans.\\n\\nThis Font Software is licensed under the SIL Open Font License\\nVersion 1.1. This license is copied below\\nand is also available with a FAQ at: http://scripts.sil.org/OFL\\n\\n\\n-----------------------------------------------------------\\nSIL OPEN FONT LICENSE Version 1.1 - 26 February 2007\\n-----------------------------------------------------------\\n\\nPREAMBLE\\nThe goals of the Open Font License (OFL) are to stimulate worldwide development of collaborative font projects\\nto support the font creation efforts of academic and linguistic communities\\nand to provide a free and open framework in which fonts may be shared and improved in partnership with others.\\n\\nThe OFL allows the licensed fonts to be used\\nstudied\\nmodified and redistributed freely as long as they are not sold by themselves. The fonts\\nincluding any derivative works\\ncan be bundled\\nembedded\\nredistributed and/or sold with any software provided that any reserved names are not used by derivative works. The fonts and derivatives\\nhowever\\ncannot be released under any other type of license. The requirement for fonts to remain under this license does not apply to any document created using the fonts or their derivatives.\\n\\nDEFINITIONS\\n\\"Font Software\\" refers to the set of files released by the Copyright Holder(s) under this license and clearly marked as such. This may include source files\\nbuild scripts and documentation.\\n\\n\\"Reserved Font Name\\" refers to any names specified as such after the copyright statement(s).\\n\\n\\"Original Version\\" refers to the collection of Font Software components as distributed by the Copyright Holder(s).\\n\\n\\"Modified Version\\" refers to any derivative made by adding to\\ndeleting\\nor substituting -- in part or in whole -- any of the components of the Original Version\\nby changing formats or by porting the Font Software to a new environment.\\n\\n\\"Author\\" refers to any designer\\nengineer\\nprogrammer\\ntechnical writer or other person who contributed to the Font Software.\\n\\nPERMISSION & CONDITIONS\\nPermission is hereby granted\\nfree of charge\\nto any person obtaining a copy of the Font Software\\nto use\\nstudy\\ncopy\\nmerge\\nembed\\nmodify\\nredistribute\\nand sell modified and unmodified copies of the Font Software\\nsubject to the following conditions:\\n\\n1) Neither the Font Software nor any of its individual components\\nin Original or Modified Versions\\nmay be sold by itself.\\n\\n2) Original or Modified Versions of the Font Software may be bundled\\nredistributed and/or sold with any software\\nprovided that each copy contains the above copyright notice and this license. These can be included either as stand-alone text files\\nhuman-readable headers or in the appropriate machine-readable metadata fields within text or binary files as long as those fields can be easily viewed by the user.\\n\\n3) No Modified Version of the Font Software may use the Reserved Font Name(s) unless explicit written permission is granted by the corresponding Copyright Holder. This restriction only applies to the primary font name as presented to the users.\\n\\n4) The name(s) of the Copyright Holder(s) or the Author(s) of the Font Software shall not be used to promote\\nendorse or advertise any Modified Version\\nexcept to acknowledge the contribution(s) of the Copyright Holder(s) and the Author(s) or with their explicit written permission.\\n\\n5) The Font Software\\nmodified or unmodified\\nin part or in whole\\nmust be distributed entirely under this license\\nand must not be distributed under any other license. The requirement for fonts to remain under this license does not apply to any document created using the Font Software.\\n\\nTERMINATION\\nThis license becomes null and void if any of the above conditions are not met.\\n\\nDISCLAIMER\\nTHE FONT SOFTWARE IS PROVIDED \\"AS IS\\"\\nWITHOUT WARRANTY OF ANY KIND\\nEXPRESS OR IMPLIED\\nINCLUDING BUT NOT LIMITED TO ANY WARRANTIES OF MERCHANTABILITY\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT OF COPYRIGHT\\nPATENT\\nTRADEMARK\\nOR OTHER RIGHT. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE FOR ANY CLAIM\\nDAMAGES OR OTHER LIABILITY\\nINCLUDING ANY GENERAL\\nSPECIAL\\nINDIRECT\\nINCIDENTAL\\nOR CONSEQUENTIAL DAMAGES\\nWHETHER IN AN ACTION OF CONTRACT\\nTORT OR OTHERWISE\\nARISING FROM\\nOUT OF THE USE OR INABILITY TO USE THE FONT SOFTWARE OR FROM OTHER DEALINGS IN THE FONT SOFTWARE.","licenceURL":"http://scripts.sil.org/OFL"},"cssFontWeight":"normal","cssFontStyle":"normal"}'),Hh=function t(e,n,i){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.name=e,this.normalSprite=n,this.splatSprite=i},kh=function t(e,n,i,r,a,s,o,l,c,h){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.color=e,this.front=n,this.down=i,this.right=r,this.left=a,this.up=s,this.upRight=o,this.upLeft=l,this.downRight=c,this.downLeft=h},Gh=n.p+"39476777ed8c1a6f2ae9c9d7dc24d677.png",Vh=n.p+"c10daf87b742b2362935190e3b8c7809.png",Wh=n.p+"1fd4bdb5494dad53fb11ee79422cd702.png",jh=n.p+"d68e0bdc27480e63109d746c2bece055.png",Xh=n.p+"56341b8fff39c8bf45a683e252b1e8fd.png",Yh=n.p+"c4b2a3d43029b69e002a066bd05d8b3b.png",Zh=n.p+"545278b16afb07bdcdc90b90214fe264.png",Jh=n.p+"fc2c2e560011c18dde8da631c8ff665e.png",Qh=n.p+"198ba6480f2da505306ef74377035639.png",Kh=n.p+"ec0de89f6dfe44d250efc118bbf0fe79.png",$h=n.p+"d87494fe1df0531573e918eff3fab9ab.png",tu=n.p+"34cbe05914f454923830564f00be554e.png",eu=n.p+"7a007614ce975636cab4111dc3e84157.png",nu=n.p+"50c2e9523f5e2f0b5af65a4a3d478a3c.png",iu=n.p+"4d43478b932064322c79b257234d515f.png",ru=n.p+"b3a55404c67edaf0ebffe5cb10c7d005.png",au=n.p+"93d07903a6252c2e4a2e4f4786949a05.png",su=n.p+"caf665ca2291649387edfeb49eb04812.png",ou=n.p+"475ed10136f362b91a72008d67320b52.png",lu=n.p+"1a4feb32b03ed50daa20a1cd6e6ca6c8.png",cu=n.p+"7dadc2e20086df6d97fdeffb8d612dcd.png",hu=n.p+"81ebf01b66ca3ef6576a76f95d693849.png",uu=n.p+"df5ff7bc1cd84946fb1275471cb70190.png",qu=n.p+"2cc8d4e6de1efff17a2e7812fc3e1078.png",du=n.p+"dad2574b80cea254abf60d2faccaf95c.png",pu=n.p+"1cf71570de495caaff82f7740abebacb.png",mu=n.p+"4468f771f12af105a3f19451e428eaa9.png",fu=n.p+"94f30270a7a9e61f98a2eaec0208da97.png",gu=n.p+"39537bfa0a0de7f891c46760a500a04b.png",xu=n.p+"e525b9c9b1b4bd92a39213b68bb057ac.png",vu=n.p+"b70f68a56b7f88c1975ac366bb17c608.png",yu=n.p+"a6f270af7e31ae3d2a214c47fcebe91e.png",_u=n.p+"ec3e58b7c1e82dddfe72d219c4477cd6.png",bu=n.p+"614fdffed827fa6b0a461c06a6442264.png",wu=n.p+"860e2833011bfb1690b80ac687430e12.png",Mu=n.p+"bd8680de3b7e5f7236a6620d5aad6118.png",Su=n.p+"510ce9f7c1fe4181534d92b582c19681.png",Tu=n.p+"67529986344a3258d194999b5dca5d34.png",Eu=n.p+"0d7a4bb3c675b7d04943bb30b2718392.png",Au=n.p+"73034bd533a07e72450a44f9eaf23654.png",Lu=n.p+"6c65e427ec4256c3f83457bccca5b57c.png",Ru=n.p+"34956cd95b3c1b7fd5f628e44a44e907.png",Cu=n.p+"5bdefb78f6b0984c355fd0053b77eafb.png",Pu=n.p+"9948d0ada26eee6090197498ea6f1696.png",zu=n.p+"0f3f3bcea53a9d54188e6bba49dcd9bd.png",Iu=n.p+"7d72dfbb017a12954b1bbfdcbd02df3e.png",Du=n.p+"50fe011194568a6a875e3c0ce00e020a.png",Nu=n.p+"ddad138c88d975781cebcc70655f9bc1.png",Ou=n.p+"255d5fa8501813ebf3c35c84be237125.png",Bu=n.p+"2093002c67f9898e6670fa7bf1c56aac.png",Fu=n.p+"8ceb749f18249e10da7646784969d9ca.png",Uu=n.p+"34305cf8b3afd0ddb2237341d7675773.png",Hu=n.p+"060ce4bd89e2003bb28155fc2dd8f3c1.png",ku=n.p+"dbfabc10bfbaa763ed09ed5aadff32e1.png",Gu=n.p+"9d6d9c4cb4a611f700ec5641f6f0895a.png",Vu=n.p+"bc2a77134e2472c5f623f5f0a742f970.png",Wu=n.p+"e0304acef008fc17f20985501ee1b657.png",ju=n.p+"f0ca18aaed468239867cec34e160b14e.png",Xu=n.p+"da16f9a8800604b53be41fce1b978f3b.png";var Yu=yu,Zu=new Hh("apple",Gh,Jh),Ju=new Hh("straw",Vh,Jh),Qu=new Hh("lemon",Wh,Kh),Ku=new Hh("orange",jh,Qh),$u=new Hh("lime",Xh,$h),tq=new Hh("grape",Yh,tu),eq=new Hh("watermelon",Zh,eu),nq=[new kh("white",nu,iu,au,cu,ou,su,lu,ru,hu),new kh("red",uu,qu,pu,xu,fu,mu,gu,du,vu),new kh("black",yu,_u,wu,Eu,Su,Mu,Tu,bu,Au)],iq=new kh("power",Fu,Uu,ku,ju,Vu,Gu,Wu,Hu,Xu),rq=[Du,Nu,Ou];function aq(t,e,n){var i=t.load(e),r=new Ro({map:i}),a=new Vo(r);return a.scale.copy(n),a}function sq(t){return sq="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},sq(t)}function oq(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function lq(t,e){return lq=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},lq(t,e)}function cq(t){return cq=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},cq(t)}var hq=[Zu,Ju,Qu,Ku,$u,tq,eq],uq=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&lq(t,e)}(s,t);var e,n,i,r,a=(i=s,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=cq(i);if(r){var n=cq(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===sq(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function s(t,e,n,i,r,o){var l;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,s),(l=a.call(this)).fruitId=t,l.word=e.toLowerCase(),l.fruitSprites=n,l.startingPosition=i.clone(),l.position.copy(i),l.currentWordIndex=0,l.secondsAlive=r,l.speed=i.clone().negate().divideScalar(r),l.startingTime=o;var c=new Uc,h=new mn(25,25,1);return l.normalSprite=aq(c,n.normalSprite,h),l.splatSprite=aq(c,n.splatSprite,h),l.slashSprite=aq(c,Lu,h),l.add(l.normalSprite),l.text=l.getTextSprite(e),l.add(l.text),l}return e=s,(n=[{key:"getTextSprite",value:function(t){for(var e=(new Oh).parse(Uh),n=e.generateShapes(t.slice(0,this.currentWordIndex)).length,i=e.generateShapes(t,6),r=[],a=new Bi({color:8421504}),s=new Bi({color:16777215}),o=0;o<i.length;o++)o<n?r.push(a):r.push(s);var l=new fc(i);l.computeBoundingBox();var c=l.boundingBox.max.x/2,h=l.boundingBox.max.y/2,u=new fr(l,r),q=new mn(-c,5-h,1);return u.position.copy(q),u}},{key:"getId",value:function(){return this.fruitId}},{key:"setId",value:function(t){this.fruitId=t}},{key:"acceptLetter",value:function(t){if(this.currentWordIndex>=this.word.length)throw"Fruit is already done!";return this.word.charAt(this.currentWordIndex)===t&&(this.currentWordIndex=this.currentWordIndex+1),this.currentWordIndex>=this.word.length}},{key:"addSlash",value:function(t){this.slashSprite.position.copy(t),this.add(this.slashSprite)}},{key:"splat",value:function(t){this.splatTime=t,this.remove(this.normalSprite),this.text&&this.remove(this.text),this.add(this.splatSprite)}},{key:"updateText",value:function(){this.remove(this.text),this.text=this.getTextSprite(this.word),this.add(this.text)}},{key:"update",value:function(t){var e=this.startingPosition.clone();e.addScaledVector(this.speed,t-this.startingTime),this.position.copy(e),this.updateText()}}])&&oq(e.prototype,n),s}(xo);function qq(t){return qq="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},qq(t)}function dq(t,e){return dq=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},dq(t,e)}function pq(t){return pq=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},pq(t)}var mq=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&dq(t,e)}(r,t);var e,n,i=(e=r,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,i=pq(e);if(n){var r=pq(this).constructor;t=Reflect.construct(i,arguments,r)}else t=i.apply(this,arguments);return function(t,e){if(e&&("object"===qq(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function r(t,e,n,a,s){var o;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,r);var l=new Hh("helper",iq.front,function(t){t=t.clone().normalize(),new Uc,new mn(25,25,1);var e=Math.atan2(-t.y,-t.x);return-22.5<=(e*=180/Math.PI)&&e<22.5?iq.right:22.5<=e&&e<67.5?iq.upRight:67.5<=e&&e<112.5?iq.up:112.5<=e&&e<157.5?iq.upLeft:157.5<=e&&e<=180||e>=-180&&e<-157.5?iq.left:e>=-157.5&&e<-112.5?iq.downLeft:e>=-112.5&&e<-67.5?iq.down:iq.downRight}(n));return(o=i.call(this,t,e,l,n,a,s)).isHelper=!0,o}return r}(uq);function fq(t){return fq="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},fq(t)}function gq(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function xq(t,e){return xq=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},xq(t,e)}function vq(t){return vq=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},vq(t)}var yq=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&xq(t,e)}(s,t);var e,n,i,r,a=(i=s,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=vq(i);if(r){var n=vq(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===fq(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function s(t){var e;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,s),(e=a.call(this)).level=t;var n=nq[t],i=new Uc,r=new mn(25,25,1);return e.front=aq(i,n.front,r),e.down=aq(i,n.down,r),e.right=aq(i,n.right,r),e.left=aq(i,n.left,r),e.up=aq(i,n.up,r),e.upRight=aq(i,n.upRight,r),e.upLeft=aq(i,n.upLeft,r),e.downRight=aq(i,n.downRight,r),e.downLeft=aq(i,n.downLeft,r),e.currentSprite=e.front,e.add(e.currentSprite),e.lastPositionChange=performance.now(),e}return e=s,(n=[{key:"changePosition",value:function(t){t=t.normalize();var e,n=Math.atan2(t.y,t.x);e=-22.5<=(n*=180/Math.PI)&&n<22.5?this.right:22.5<=n&&n<67.5?this.upRight:67.5<=n&&n<112.5?this.up:112.5<=n&&n<157.5?this.upLeft:157.5<=n&&n<=180||n>=-180&&n<-157.5?this.left:n>=-157.5&&n<-112.5?this.downLeft:n>=-112.5&&n<-67.5?this.down:this.downRight,this.remove(this.currentSprite),this.add(e),this.currentSprite=e,this.lastPositionChange=performance.now()/1e3}},{key:"update",value:function(t){this.currentSprite!=this.front&&t-this.lastPositionChange>.5&&(this.remove(this.currentSprite),this.currentSprite=this.front,this.add(this.front))}}])&&gq(e.prototype,n),s}(xo);function _q(t){return _q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},_q(t)}function bq(t,e){return bq=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},bq(t,e)}function wq(t){return wq=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},wq(t)}var Mq=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&bq(t,e)}(r,t);var e,n,i=(e=r,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,i=wq(e);if(n){var r=wq(this).constructor;t=Reflect.construct(i,arguments,r)}else t=i.apply(this,arguments);return function(t,e){if(e&&("object"===_q(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function r(t,e){var n;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,r),n=i.call(this),e=e?e.clone():new mn(100,100,1);var a=new Uc;return n.banner=aq(a,t,e),n.add(n.banner),n}return r}(xo);function Sq(t){return Sq="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},Sq(t)}function Tq(t,e){return Tq=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},Tq(t,e)}function Eq(t){return Eq=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},Eq(t)}const Aq=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Tq(t,e)}(r,t);var e,n,i=(e=r,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,i=Eq(e);if(n){var r=Eq(this).constructor;t=Reflect.construct(i,arguments,r)}else t=i.apply(this,arguments);return function(t,e){if(e&&("object"===Sq(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function r(){var t;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,r);for(var e=arguments.length,n=new Array(e),a=0;a<e;a++)n[a]=arguments[a];t=i.call.apply(i,[this].concat(n));var s=new Yc(16777215,1.6,7,.8,1,1),o=new th(4210752,1.32),l=new kc(16777147,526368,2.3);return s.position.set(5,1,2),s.target.position.set(0,0,0),t.add(o,l,s),t}return r}(xo);function Lq(t){return Lq="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},Lq(t)}function Rq(t,e){var n="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!n){if(Array.isArray(t)||(n=function(t,e){if(t){if("string"==typeof t)return Cq(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Cq(t,e):void 0}}(t))||e&&t&&"number"==typeof t.length){n&&(t=n);var i=0,r=function(){};return{s:r,n:function(){return i>=t.length?{done:!0}:{done:!1,value:t[i++]}},e:function(t){throw t},f:r}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,s=!0,o=!1;return{s:function(){n=n.call(t)},n:function(){var t=n.next();return s=t.done,t},e:function(t){o=!0,a=t},f:function(){try{s||null==n.return||n.return()}finally{if(o)throw a}}}}function Cq(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,i=new Array(e);n<e;n++)i[n]=t[n];return i}function Pq(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function zq(t,e){return zq=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},zq(t,e)}function Iq(t){return Iq=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},Iq(t)}function Dq(t,e){return Math.random()*(e-t)+t}var Nq=2e3;const Oq=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&zq(t,e)}(s,t);var e,n,i,r,a=(i=s,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=Iq(i);if(r){var n=Iq(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===Lq(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function s(t,e,n){var i;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,s),i=a.call(this);var r=t.lives;(null==r||r<=0)&&(r=3),i.points=0,i.lives=r,i.currentFruit=null,i.fruits=[],i.splattedFruits=[],i.startingLetter={},i.words=t.wordList,i.secondsBetweenRange=t.secondsBetweenRange,i.secondsAliveRange=t.secondsAliveRange,i.pointsNeeded=t.pointsNeeded,i.camera=n,i.background=t.background;var o=new Aq,l=new yq(e);i.ninja=l,i.add(o,l),i.keyDown=function(t){1===t.key.length&&i.acceptLetter(t.key.toLowerCase())},i.nextFruitTime=(Nq+performance.now())/1e3;var c=new Mq(t.stageBanner);return c.position.set(0,10,1),i.add(c),new Promise((function(t){return setTimeout(t,Nq)})).then((function(){return i.remove(c)})),i.hasHelper=!1,i}return e=s,(n=[{key:"metPointRequirement",value:function(){return this.points>=this.pointsNeeded}},{key:"clear",value:function(){var t=this;if(!this.isClearing){this.isClearing=!0;for(var e=this.fruits.length-1;e>=0;e--)this.removeFruit(this.fruits[e]);var n=new Mq(Bu,new mn(100,100,1));n.position.set(0,20,1),this.add(n),new Promise((function(t){return setTimeout(t,Nq)})).then((function(){t.isCleared=!0}))}}},{key:"addFruit",value:function(){var t,e,n=10;do{t=Math.floor(Math.random()*this.words.length),e=this.words[t],n--}while(n>=0&&this.startingLetter[e.charAt(0)]);this.startingLetter[e.charAt(0)]=!0;var i,r,a=this.camera.left,s=this.camera.right,o=this.camera.bottom,l=this.camera.top,c=Math.random();c<.35?(i=a,r=Dq(o,l)):c<.7?(i=s,r=Dq(o,l)):c<.85?(i=Dq(a,s),r=o):(i=Dq(a,s),r=l);var h,u=new mn(i,r,0);!this.hasHelper&&this.fruits.length>=3&&Math.random()<.5?(h=new mq(this.fruits.length,e,u,Dq(this.secondsAliveRange[0],this.secondsAliveRange[1]),performance.now()/1e3),this.hasHelper=!0):h=new uq(this.fruits.length,e,function(){var t=Math.floor(Math.random()*hq.length);return hq[t]}(),u,Dq(this.secondsAliveRange[0],this.secondsAliveRange[1]),performance.now()/1e3),this.fruits.push(h),this.add(h)}},{key:"removeFruit",value:function(t,e){var n=t.getId();this.fruits.splice(n,1);for(var i=0;i<this.fruits.length;i++)this.fruits[i].setId(i);this.startingLetter[t.word.charAt(0)]=!1,e?this.remove(t):(t.splat(performance.now()/1e3),this.splattedFruits.push(t))}},{key:"acceptLetter",value:function(t){if(t=t.toLowerCase(),!this.currentFruit){if(0===this.fruits.length)return;var e,n=Rq(this.fruits);try{for(n.s();!(e=n.n()).done;){var i=e.value;if(i.word.charAt(0)==t){this.currentFruit=i;break}}}catch(t){n.e(t)}finally{n.f()}if(!this.currentFruit)return}if(this.currentFruit.acceptLetter(t)){if(gd.playSword(),this.removeFruit(this.currentFruit),this.currentFruit.isHelper){this.hasHelper=!1;for(var r=this.fruits.length-1;r>=0;r--)this.points=this.points+this.calculatePoints(this.fruits[r]),this.fruits[r].addSlash(this.fruits[r].position.clone().set(2,1)),this.removeFruit(this.fruits[r])}else this.ninja.changePosition(this.currentFruit.position.clone()),this.points=this.points+this.calculatePoints(this.currentFruit),this.currentFruit.addSlash(this.currentFruit.position.clone().set(2,1));this.currentFruit=null}}},{key:"calculatePoints",value:function(t){return t.word.length}},{key:"getText",value:function(t,e,n){var i=(new Oh).parse(Uh).generateShapes(t,6),r=new Bi({color:16777215}),a=new fc(i);a.computeBoundingBox();var s=new fr(a,r),o=new mn(e,n,-1);return s.position.copy(o),s.message=t,s}},{key:"collisionWithNinja",value:function(t,e){return e-t.startingTime>t.secondsAlive}},{key:"update",value:function(t){if(!this.isClearing){if(this.ninja.update(t),t>this.nextFruitTime){this.addFruit();var e=Dq(this.secondsBetweenRange[0],this.secondsBetweenRange[1]);this.nextFruitTime=t+e}var n,i=Rq(this.fruits);try{for(i.s();!(n=i.n()).done;){var r=n.value;r.update(t),this.collisionWithNinja(r,t)&&(r.isHelper?this.hasHelper=!1:gd.playSplat(),this.currentFruit===r&&(this.currentFruit=null),this.removeFruit(r,r.isHelper),r.isHelper||(this.lives-=1))}}catch(t){i.e(t)}finally{i.f()}var a,s=[],o=Rq(this.splattedFruits);try{for(o.s();!(a=o.n()).done;){var l=a.value;t-l.splatTime>1?this.remove(l):s.push(l)}}catch(t){o.e(t)}finally{o.f()}this.splattedFruits=s}var c="Score:"+this.points;this.textScore&&this.textScore.message===c||(this.remove(this.textScore),this.textScore=this.getText("Score:"+this.points,this.camera.left+5,this.camera.top-10),this.add(this.textScore));var h="Lives:"+this.lives;this.textLives&&this.textLives.message===h||(this.remove(this.textLives),this.textLives=this.getText("Lives:"+this.lives,this.camera.left+5,this.camera.top-20),this.add(this.textLives))}},{key:"addEvents",value:function(){window.addEventListener("keydown",this.keyDown,!1)}},{key:"removeEvents",value:function(){window.removeEventListener("keydown",this.keyDown,!1)}}])&&Pq(e.prototype,n),s}(To),Bq=function t(e,n,i,r,a,s,o){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.lives=e,this.wordList=n,this.secondsBetweenRange=i,this.secondsAliveRange=r,this.background=a||new Oi(8306926),this.pointsNeeded=s,this.stageBanner=o};var Fq=[["cat","sun","apple","hope","was","beach","chair","dog","elf","lover","fox","igloo","pixel","color","giraffe","ray","kind","lizard","muffin","nap","ostrich","pillow","queen","rizz","star","tea","unite","zen","lace","pool"],["cat","sun","apple","hope","was","beach","chair","dog","elf","lover","fox","igloo","pixel","color","giraffe","ray","kind","lizard","muffin","nap","ostrich","pillow","queen","rizz","star","tea","unite","zen","lace","pool","blubber","chicken","really","joy","katie","andrew","genie","purple","banana","happy","guitar","basket","butter","planet","silver","laptop","monkey","orange","dragon","turtle","whisper","kangaroo","sparkle","render","shader","gradient","palette","animation","resolution","opacity"],["cat","sun","apple","hope","was","beach","chair","dog","elf","lover","fox","igloo","pixel","color","giraffe","ray","kind","lizard","muffin","nap","ostrich","pillow","queen","rizz","star","tea","unite","zen","lace","pool","blubber","chicken","really","joy","katie","andrew","genie","purple","banana","happy","guitar","basket","butter","planet","silver","laptop","monkey","orange","dragon","turtle","whisper","kangaroo","sparkle","render","shader","gradient","palette","animation","resolution","opacity","refraction","reflection","rasterization","polygon","ambient","diffuse","specular","mapping","blending","shadow","lighting","saturation","brightness","waterfall","renaissance","nostalgia","princeton","metamorphosis","astronomy","treasure","rainbow","disappear","encyclopedia","boulevard","gratitude","hemisphere","juxtapose","silhouette","entrepreneur","luminosity"]],Uq=[new Bq(3,Fq[0],[2,3],[5,6],new Oi(8306926),100,rq[0]),new Bq(3,Fq[1],[1,2],[4.5,5.5],new Oi(11452535),150,rq[1]),new Bq(3,Fq[2],[.5,1.5],[4,5],new Oi(15628151),250,rq[2])];function Hq(t){return Hq="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},Hq(t)}function kq(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function Gq(t,e){return Gq=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},Gq(t,e)}function Vq(t){return Vq=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},Vq(t)}var Wq=[Zu,Qu,Ju,Ku,$u,eq,tq];function jq(t,e){return new mn(e*Math.cos(t),e*Math.sin(t),0)}const Xq=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Gq(t,e)}(s,t);var e,n,i,r,a=(i=s,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=Vq(i);if(r){var n=Vq(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===Hq(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function s(t){var e;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,s),(e=a.call(this)).background=new Oi(12253370);var n=new Mq(Ru);n.position.set(0,35,0),e.add(n);var i=new Mq(Cu);i.position.set(0,-35,0),e.add(i);var r=new mn(25,25,1);e.fruitBanners=[];for(var o=0;o<Wq.length;o++){var l=new Mq(Wq[o].normalSprite,r);e.add(l),e.fruitBanners.push(l)}e.update(performance.now()/1e3);var c=nq.map((function(t){return t}));c.push(iq);for(var h=new mn(0,0,0),u=0;u<c.length;u++){var q=2*Math.PI*u/c.length,d=new Mq(c[u].front,r);d.position.copy(jq(q,15).add(h)),e.add(d)}return e.keyDown=function(e){"Enter"===e.key&&(gd.normalBackgroundMusic(!1),t.startOver())},e}return e=s,(n=[{key:"update",value:function(t){for(var e=t%10,n=2*Math.PI*e/10,i=0;i<this.fruitBanners.length;i++){var r=2*Math.PI*i/Wq.length;r+=n,this.fruitBanners[i].position.copy(jq(r,75))}}},{key:"addEvents",value:function(){window.addEventListener("keydown",this.keyDown,!1)}},{key:"removeEvents",value:function(){window.removeEventListener("keydown",this.keyDown,!1)}}])&&kq(e.prototype,n),s}(To);function Yq(t){return Yq="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},Yq(t)}function Zq(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function Jq(t,e){return Jq=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},Jq(t,e)}function Qq(t){return Qq=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},Qq(t)}const Kq=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Jq(t,e)}(s,t);var e,n,i,r,a=(i=s,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=Qq(i);if(r){var n=Qq(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===Yq(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function s(t){var e;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,s),(e=a.call(this)).background=new Oi(0);var n=new Mq(Pu);n.position.set(0,-30,0),e.add(n);var i=new mn(25,25,1);e.ninjaSprite=new Mq(nq[t.stage].front,i),e.ninjaSprite.position.set(0,0,0),e.add(e.ninjaSprite);var r=new Mq(Zu.splatSprite,i);r.position.set(0,-10,1),e.add(r);var o=new Mq(Ku.splatSprite,i);o.position.set(-10,10,2),e.add(o);var l=new Mq(tq.splatSprite,i);return l.position.set(10,10,3),e.add(l),e.sceneManager=t,e.keyDown=function(e){"Enter"===e.key&&(gd.normalBackgroundMusic(!0),t.startOver())},e}return e=s,(n=[{key:"updateStage",value:function(){this.remove(this.ninjaSprite);var t=new mn(25,25,1);this.ninjaSprite=new Mq(nq[this.sceneManager.stage].front,t),this.ninjaSprite.position.set(0,0,0),this.add(this.ninjaSprite)}},{key:"addEvents",value:function(){window.addEventListener("keydown",this.keyDown,!1)}},{key:"removeEvents",value:function(){window.removeEventListener("keydown",this.keyDown,!1)}}])&&Zq(e.prototype,n),s}(To);function $q(t){return $q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},$q(t)}function td(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function ed(t,e){return ed=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},ed(t,e)}function nd(t){return nd=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},nd(t)}const id=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&ed(t,e)}(s,t);var e,n,i,r,a=(i=s,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=nd(i);if(r){var n=nd(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===$q(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function s(t){var e;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,s),(e=a.call(this)).background=new Oi(12761848);var n=new Mq(zu);n.position.set(0,-50,0),e.add(n);var i=new mn(400,400,1),r=new Mq(Iu,i);r.position.set(0,10,0),e.add(r),i.set(25,25,1);var o=new Mq(Yu,i);return o.position.set(0,-15,0),e.add(o),e.keyDown=function(e){" "!==e.key&&"Space"!==e.code||t.startGames()},e}return e=s,(n=[{key:"addEvents",value:function(){window.addEventListener("keydown",this.keyDown,!1)}},{key:"removeEvents",value:function(){window.removeEventListener("keydown",this.keyDown,!1)}}])&&td(e.prototype,n),s}(To);function rd(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}const ad=new(function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.renderer=void 0,this.camera=void 0,this.currentScene=void 0,this.stage=void 0,this.game=void 0,this.document=document}var e,n;return e=t,(n=[{key:"init",value:function(){this.renderer=new wo({antialias:!0}),this.camera=new Yr,this.camera.position.set(0,0,10),this.camera.lookAt(new mn(0,0,0)),this.camera.near=1,this.camera.far=100,this.stage=0,this.game=void 0,this.start=new id(this),this.end=new Xq(this),this.death=new Kq(this),this.currentScene=this.start,this.currentScene.addEvents()}},{key:"runScene",value:function(t){this.renderer.render(this.currentScene,this.camera),this.currentScene.update&&this.currentScene.update(t),this.game&&(this.game.lives<=0?(this.currentScene.removeEvents(),this.currentScene=this.death,gd.switchBackgroundMusic(!0),this.death.updateStage(),this.currentScene.addEvents(),this.game=void 0):this.game.isCleared?this.levelUp():this.game.metPointRequirement()&&this.game.clear())}},{key:"levelUp",value:function(){if(this.stage===Uq.length-1)return this.currentScene.removeEvents(),this.game=void 0,this.currentScene=this.end,gd.switchBackgroundMusic(!1),void this.currentScene.addEvents();this.stage+=1,this.game=new Oq(Uq[this.stage],this.stage,this.camera),this.currentScene=this.game,this.currentScene.addEvents()}},{key:"startOver",value:function(){this.currentScene.removeEvents(),this.currentScene=this.start,this.currentScene.addEvents()}},{key:"startGames",value:function(){this.currentScene.removeEvents(),gd.playSword(),this.stage=0,this.game=new Oq(Uq[this.stage],this.stage,this.camera),this.currentScene=this.game,this.currentScene.addEvents()}}])&&rd(e.prototype,n),t}()),sd=n.p+"ff3ecbbc9d8773dad5b89869d8160963.wav",od=n.p+"32b11bd18c6db58067d0b83f820dfe80.wav",ld=n.p+"dbaf51798d6d80029841f64abc47de9f.wav",cd=n.p+"5afeecbdffcc8fe83c60e66608411919.mp3",hd=n.p+"53ac0533744b23be9f208aba9baa0fa5.wav";function ud(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,i=new Array(e);n<e;n++)i[n]=t[n];return i}function qd(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function dd(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function pd(t,e,n){return e&&dd(t.prototype,e),n&&dd(t,n),t}var md=function(){function t(){qd(this,t),this.audioListener=new dh,this.backgroundMusic=new fd(this.audioListener,sd,!0),this.backgroundMusic.audio.autoplay=!0,this.backgroundMusic.audio.setVolume(.5),this.deathMusic=new fd(this.audioListener,cd,!0),this.deathMusic.audio.setVolume(.5),this.winMusic=new fd(this.audioListener,hd,!0),this.winMusic.audio.setVolume(.5),this.swordSound=new fd(this.audioListener,ld,!1),this.splatSound=new fd(this.audioListener,od,!1),this.sounds=[this.backgroundMusic,this.swordSound,this.splatSound]}return pd(t,[{key:"init",value:function(){this.audioListener.position.set(ad.camera.position)}},{key:"playSword",value:function(){this.swordSound.play(1,.8)}},{key:"playSplat",value:function(){this.splatSound.play(1,.8)}},{key:"update",value:function(t){var e,n=function(t,e){var n="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!n){if(Array.isArray(t)||(n=function(t,e){if(t){if("string"==typeof t)return ud(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?ud(t,e):void 0}}(t))||e&&t&&"number"==typeof t.length){n&&(t=n);var i=0,r=function(){};return{s:r,n:function(){return i>=t.length?{done:!0}:{done:!1,value:t[i++]}},e:function(t){throw t},f:r}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,s=!0,o=!1;return{s:function(){n=n.call(t)},n:function(){var t=n.next();return s=t.done,t},e:function(t){o=!0,a=t},f:function(){try{s||null==n.return||n.return()}finally{if(o)throw a}}}}(this.sounds);try{for(n.s();!(e=n.n()).done;)e.value.update(t)}catch(t){n.e(t)}finally{n.f()}}},{key:"normalBackgroundMusic",value:function(t){this.backgroundMusic.play(-1,.5),t?this.deathMusic.stop():this.winMusic.stop()}},{key:"switchBackgroundMusic",value:function(t){t?(this.backgroundMusic.stop(),this.deathMusic.play(-1,.5)):(this.backgroundMusic.stop(),this.winMusic.play(-1,.2))}}]),t}(),fd=function(){function t(e,n,i){return qd(this,t),this.audio=this.createAudio(e,n,i),this.timeStart=-1,this.isPlaying=!1,this.duration=-1,this.updateTimeStart=!1,this.isLoop=i,this}return pd(t,[{key:"createAudio",value:function(t,e,n){var i=new ph(t);return(new sh).load(e,(function(t){i.setBuffer(t),i.setLoop(n)})),i}},{key:"play",value:function(t,e){this.updateTimeStart=!0,this.duration=t,this.audio.setVolume(e),this.isPlaying?this.isLoop||(this.audio.stop(),this.audio.play()):(this.audio.play(),this.isPlaying=!0)}},{key:"stop",value:function(){this.audio.stop(),this.isPlaying=!1}},{key:"update",value:function(t){this.updateTimeStart&&(this.timeStart=t,this.updateTimeStart=!1),this.duration>0&&this.isPlaying&&t-this.timeStart>this.duration&&this.stop()}}]),t}();const gd=new md;ad.init(),gd.init(),ad.renderer.setPixelRatio(window.devicePixelRatio);var xd=ad.renderer.domElement;xd.style.display="block",document.body.style.margin=0,document.body.style.overflow="hidden",document.body.appendChild(xd),window.requestAnimationFrame((function t(e){ad.runScene(e/1e3),gd.update(e/1e3),window.requestAnimationFrame(t)}));var vd=function(){var t=window,e=t.innerHeight,n=t.innerWidth,i=200/n,r=200/e,a=Math.max(i,r),s=n*a,o=e*a;ad.renderer.setSize(n,e),ad.camera.left=-s/2,ad.camera.right=s/2,ad.camera.bottom=-o/2,ad.camera.top=o/2,ad.camera.updateProjectionMatrix()};vd(),window.addEventListener("resize",vd,!1)})(0,0,{p:"/typing-ninja/"})})();
//# sourceMappingURL=main.a842c933635e69aa117f.js.map